/* eslint-disable */
/* prettier-ignore */

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  query: 'Query';
  mutation: 'Mutation';
  subscription: 'Subscription';
  types: {
    'AbuseReport': { kind: 'OBJECT'; name: 'AbuseReport'; fields: { 'commenters': { name: 'commenters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; }; } }; 'discussions': { name: 'discussions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscussionConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AbuseReportID'; ofType: null; }; } }; 'labels': { name: 'labels'; type: { kind: 'OBJECT'; name: 'LabelConnection'; ofType: null; } }; 'notes': { name: 'notes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NoteConnection'; ofType: null; }; } }; }; };
    'AbuseReportID': unknown;
    'AbuseReportLabelCreateInput': { kind: 'INPUT_OBJECT'; name: 'AbuseReportLabelCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'color'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: "\"#6699cc\"" }]; };
    'AbuseReportLabelCreatePayload': { kind: 'OBJECT'; name: 'AbuseReportLabelCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'label': { name: 'label'; type: { kind: 'OBJECT'; name: 'Label'; ofType: null; } }; }; };
    'AccessLevel': { kind: 'OBJECT'; name: 'AccessLevel'; fields: { 'integerValue': { name: 'integerValue'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'stringValue': { name: 'stringValue'; type: { kind: 'ENUM'; name: 'AccessLevelEnum'; ofType: null; } }; }; };
    'AccessLevelDeployKey': { kind: 'OBJECT'; name: 'AccessLevelDeployKey'; fields: { 'expiresAt': { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccessLevelUser'; ofType: null; }; } }; }; };
    'AccessLevelDeployKeyConnection': { kind: 'OBJECT'; name: 'AccessLevelDeployKeyConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AccessLevelDeployKeyEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AccessLevelDeployKey'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AccessLevelDeployKeyEdge': { kind: 'OBJECT'; name: 'AccessLevelDeployKeyEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'AccessLevelDeployKey'; ofType: null; } }; }; };
    'AccessLevelEnum': { kind: 'ENUM'; name: 'AccessLevelEnum'; type: 'NO_ACCESS' | 'MINIMAL_ACCESS' | 'GUEST' | 'REPORTER' | 'DEVELOPER' | 'MAINTAINER' | 'OWNER' | 'ADMIN'; };
    'AccessLevelGroup': { kind: 'OBJECT'; name: 'AccessLevelGroup'; fields: { 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'parent': { name: 'parent'; type: { kind: 'OBJECT'; name: 'AccessLevelGroup'; ofType: null; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AccessLevelUser': { kind: 'OBJECT'; name: 'AccessLevelUser'; fields: { 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'publicEmail': { name: 'publicEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Achievement': { kind: 'OBJECT'; name: 'Achievement'; fields: { 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AchievementsAchievementID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'userAchievements': { name: 'userAchievements'; type: { kind: 'OBJECT'; name: 'UserAchievementConnection'; ofType: null; } }; }; };
    'AchievementConnection': { kind: 'OBJECT'; name: 'AchievementConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AchievementEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Achievement'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AchievementEdge': { kind: 'OBJECT'; name: 'AchievementEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Achievement'; ofType: null; } }; }; };
    'AchievementsAchievementID': unknown;
    'AchievementsAwardInput': { kind: 'INPUT_OBJECT'; name: 'AchievementsAwardInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'achievementId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AchievementsAchievementID'; ofType: null; }; }; defaultValue: null }, { name: 'userId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UserID'; ofType: null; }; }; defaultValue: null }]; };
    'AchievementsAwardPayload': { kind: 'OBJECT'; name: 'AchievementsAwardPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'userAchievement': { name: 'userAchievement'; type: { kind: 'OBJECT'; name: 'UserAchievement'; ofType: null; } }; }; };
    'AchievementsCreateInput': { kind: 'INPUT_OBJECT'; name: 'AchievementsCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'namespaceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'NamespaceID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'avatar'; type: { kind: 'SCALAR'; name: 'Upload'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'AchievementsCreatePayload': { kind: 'OBJECT'; name: 'AchievementsCreatePayload'; fields: { 'achievement': { name: 'achievement'; type: { kind: 'OBJECT'; name: 'Achievement'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'AchievementsDeleteInput': { kind: 'INPUT_OBJECT'; name: 'AchievementsDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'achievementId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AchievementsAchievementID'; ofType: null; }; }; defaultValue: null }]; };
    'AchievementsDeletePayload': { kind: 'OBJECT'; name: 'AchievementsDeletePayload'; fields: { 'achievement': { name: 'achievement'; type: { kind: 'OBJECT'; name: 'Achievement'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'AchievementsRevokeInput': { kind: 'INPUT_OBJECT'; name: 'AchievementsRevokeInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'userAchievementId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AchievementsUserAchievementID'; ofType: null; }; }; defaultValue: null }]; };
    'AchievementsRevokePayload': { kind: 'OBJECT'; name: 'AchievementsRevokePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'userAchievement': { name: 'userAchievement'; type: { kind: 'OBJECT'; name: 'UserAchievement'; ofType: null; } }; }; };
    'AchievementsUpdateInput': { kind: 'INPUT_OBJECT'; name: 'AchievementsUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'achievementId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AchievementsAchievementID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'avatar'; type: { kind: 'SCALAR'; name: 'Upload'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'AchievementsUpdatePayload': { kind: 'OBJECT'; name: 'AchievementsUpdatePayload'; fields: { 'achievement': { name: 'achievement'; type: { kind: 'OBJECT'; name: 'Achievement'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'AchievementsUserAchievementID': unknown;
    'AddOnPurchase': { kind: 'OBJECT'; name: 'AddOnPurchase'; fields: { 'assignedQuantity': { name: 'assignedQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GitlabSubscriptionsAddOnPurchaseID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'purchasedQuantity': { name: 'purchasedQuantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'AddOnUser': { kind: 'OBJECT'; name: 'AddOnUser'; fields: { 'addOnAssignments': { name: 'addOnAssignments'; type: { kind: 'OBJECT'; name: 'UserAddOnAssignmentConnection'; ofType: null; } }; 'assignedMergeRequests': { name: 'assignedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'authoredMergeRequests': { name: 'authoredMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bio': { name: 'bio'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bot': { name: 'bot'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'callouts': { name: 'callouts'; type: { kind: 'OBJECT'; name: 'UserCalloutConnection'; ofType: null; } }; 'commitEmail': { name: 'commitEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'discord': { name: 'discord'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'emails': { name: 'emails'; type: { kind: 'OBJECT'; name: 'EmailConnection'; ofType: null; } }; 'gitpodEnabled': { name: 'gitpodEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'groupCount': { name: 'groupCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'groupMemberships': { name: 'groupMemberships'; type: { kind: 'OBJECT'; name: 'GroupMemberConnection'; ofType: null; } }; 'groups': { name: 'groups'; type: { kind: 'OBJECT'; name: 'GroupConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'ide': { name: 'ide'; type: { kind: 'OBJECT'; name: 'Ide'; ofType: null; } }; 'jobTitle': { name: 'jobTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastActivityOn': { name: 'lastActivityOn'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'lastLoginAt': { name: 'lastLoginAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'linkedin': { name: 'linkedin'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; 'namespaceCommitEmails': { name: 'namespaceCommitEmails'; type: { kind: 'OBJECT'; name: 'NamespaceCommitEmailConnection'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organizations': { name: 'organizations'; type: { kind: 'OBJECT'; name: 'OrganizationConnection'; ofType: null; } }; 'preferencesGitpodPath': { name: 'preferencesGitpodPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'profileEnableGitpodPath': { name: 'profileEnableGitpodPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'projectMemberships': { name: 'projectMemberships'; type: { kind: 'OBJECT'; name: 'ProjectMemberConnection'; ofType: null; } }; 'pronouns': { name: 'pronouns'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'publicEmail': { name: 'publicEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'reviewRequestedMergeRequests': { name: 'reviewRequestedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'savedReplies': { name: 'savedReplies'; type: { kind: 'OBJECT'; name: 'SavedReplyConnection'; ofType: null; } }; 'savedReply': { name: 'savedReply'; type: { kind: 'OBJECT'; name: 'SavedReply'; ofType: null; } }; 'snippets': { name: 'snippets'; type: { kind: 'OBJECT'; name: 'SnippetConnection'; ofType: null; } }; 'starredProjects': { name: 'starredProjects'; type: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'UserState'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'OBJECT'; name: 'UserStatus'; ofType: null; } }; 'timelogs': { name: 'timelogs'; type: { kind: 'OBJECT'; name: 'TimelogConnection'; ofType: null; } }; 'todos': { name: 'todos'; type: { kind: 'OBJECT'; name: 'TodoConnection'; ofType: null; } }; 'twitter': { name: 'twitter'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userAchievements': { name: 'userAchievements'; type: { kind: 'OBJECT'; name: 'UserAchievementConnection'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserPermissions'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'workspaces': { name: 'workspaces'; type: { kind: 'OBJECT'; name: 'WorkspaceConnection'; ofType: null; } }; }; };
    'AddOnUserConnection': { kind: 'OBJECT'; name: 'AddOnUserConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AddOnUserEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AddOnUser'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AddOnUserEdge': { kind: 'OBJECT'; name: 'AddOnUserEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'AddOnUser'; ofType: null; } }; }; };
    'AddProjectToSecurityDashboardInput': { kind: 'INPUT_OBJECT'; name: 'AddProjectToSecurityDashboardInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectID'; ofType: null; }; }; defaultValue: null }]; };
    'AddProjectToSecurityDashboardPayload': { kind: 'OBJECT'; name: 'AddProjectToSecurityDashboardPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; }; };
    'AdminSidekiqQueuesDeleteJobsInput': { kind: 'INPUT_OBJECT'; name: 'AdminSidekiqQueuesDeleteJobsInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'user'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'project'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'rootNamespace'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'clientId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'callerId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'remoteIp'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'jobId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'pipelineId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'relatedClass'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'featureCategory'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'artifactSize'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'artifactUsedCdn'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'artifactsDependenciesSize'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'artifactsDependenciesCount'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'rootCallerId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'mergeActionStatus'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'bulkImportEntityId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'sidekiqDestinationShardRedis'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'subscriptionPlan'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'aiResource'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'workerClass'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'queueName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'AdminSidekiqQueuesDeleteJobsPayload': { kind: 'OBJECT'; name: 'AdminSidekiqQueuesDeleteJobsPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'result': { name: 'result'; type: { kind: 'OBJECT'; name: 'DeleteJobsResponse'; ofType: null; } }; }; };
    'AgentConfiguration': { kind: 'OBJECT'; name: 'AgentConfiguration'; fields: { 'agentName': { name: 'agentName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AgentConfigurationConnection': { kind: 'OBJECT'; name: 'AgentConfigurationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AgentConfigurationEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AgentConfiguration'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AgentConfigurationEdge': { kind: 'OBJECT'; name: 'AgentConfigurationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'AgentConfiguration'; ofType: null; } }; }; };
    'AgentMetadata': { kind: 'OBJECT'; name: 'AgentMetadata'; fields: { 'commit': { name: 'commit'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'podName': { name: 'podName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'podNamespace': { name: 'podNamespace'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AgentTokenStatus': { kind: 'ENUM'; name: 'AgentTokenStatus'; type: 'ACTIVE' | 'REVOKED'; };
    'AggregationStatus': { kind: 'OBJECT'; name: 'AggregationStatus'; fields: { 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'estimatedNextUpdateAt': { name: 'estimatedNextUpdateAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'lastUpdateAt': { name: 'lastUpdateAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'AiAction': { kind: 'ENUM'; name: 'AiAction'; type: 'CHAT'; };
    'AiActionInput': { kind: 'INPUT_OBJECT'; name: 'AiActionInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'analyzeCiJobFailure'; type: { kind: 'INPUT_OBJECT'; name: 'AnalyzeCiJobFailureInput'; ofType: null; }; defaultValue: null }, { name: 'explainVulnerability'; type: { kind: 'INPUT_OBJECT'; name: 'AiExplainVulnerabilityInput'; ofType: null; }; defaultValue: null }, { name: 'resolveVulnerability'; type: { kind: 'INPUT_OBJECT'; name: 'AiResolveVulnerabilityInput'; ofType: null; }; defaultValue: null }, { name: 'summarizeComments'; type: { kind: 'INPUT_OBJECT'; name: 'AiSummarizeCommentsInput'; ofType: null; }; defaultValue: null }, { name: 'summarizeReview'; type: { kind: 'INPUT_OBJECT'; name: 'AiSummarizeReviewInput'; ofType: null; }; defaultValue: null }, { name: 'summarizeNewMergeRequest'; type: { kind: 'INPUT_OBJECT'; name: 'AiSummarizeNewMergeRequestInput'; ofType: null; }; defaultValue: null }, { name: 'explainCode'; type: { kind: 'INPUT_OBJECT'; name: 'AiExplainCodeInput'; ofType: null; }; defaultValue: null }, { name: 'generateDescription'; type: { kind: 'INPUT_OBJECT'; name: 'AiGenerateDescriptionInput'; ofType: null; }; defaultValue: null }, { name: 'generateCommitMessage'; type: { kind: 'INPUT_OBJECT'; name: 'AiGenerateCommitMessageInput'; ofType: null; }; defaultValue: null }, { name: 'chat'; type: { kind: 'INPUT_OBJECT'; name: 'AiChatInput'; ofType: null; }; defaultValue: null }, { name: 'fillInMergeRequestTemplate'; type: { kind: 'INPUT_OBJECT'; name: 'AiFillInMergeRequestTemplateInput'; ofType: null; }; defaultValue: null }, { name: 'generateCubeQuery'; type: { kind: 'INPUT_OBJECT'; name: 'AiGenerateCubeQueryInput'; ofType: null; }; defaultValue: null }, { name: 'clientSubscriptionId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'AiActionPayload': { kind: 'OBJECT'; name: 'AiActionPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'requestId': { name: 'requestId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AiAgent': { kind: 'OBJECT'; name: 'AiAgent'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'latestVersion': { name: 'latestVersion'; type: { kind: 'OBJECT'; name: 'AiAgentVersion'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'routeId': { name: 'routeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'versions': { name: 'versions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AiAgentVersion'; ofType: null; }; }; } }; }; };
    'AiAgentConnection': { kind: 'OBJECT'; name: 'AiAgentConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AiAgentEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AiAgent'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AiAgentCreateInput': { kind: 'INPUT_OBJECT'; name: 'AiAgentCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'prompt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'AiAgentCreatePayload': { kind: 'OBJECT'; name: 'AiAgentCreatePayload'; fields: { 'agent': { name: 'agent'; type: { kind: 'OBJECT'; name: 'AiAgent'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'AiAgentEdge': { kind: 'OBJECT'; name: 'AiAgentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'AiAgent'; ofType: null; } }; }; };
    'AiAgentID': unknown;
    'AiAgentUpdateInput': { kind: 'INPUT_OBJECT'; name: 'AiAgentUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'agentId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AiAgentID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'prompt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'AiAgentUpdatePayload': { kind: 'OBJECT'; name: 'AiAgentUpdatePayload'; fields: { 'agent': { name: 'agent'; type: { kind: 'OBJECT'; name: 'AiAgent'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'AiAgentVersion': { kind: 'OBJECT'; name: 'AiAgentVersion'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'model': { name: 'model'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'prompt': { name: 'prompt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AiAgentVersionID': unknown;
    'AiChatInput': { kind: 'INPUT_OBJECT'; name: 'AiChatInput'; inputFields: [{ name: 'resourceId'; type: { kind: 'SCALAR'; name: 'AiModelID'; ofType: null; }; defaultValue: null }, { name: 'namespaceId'; type: { kind: 'SCALAR'; name: 'NamespaceID'; ofType: null; }; defaultValue: null }, { name: 'agentVersionId'; type: { kind: 'SCALAR'; name: 'AiAgentVersionID'; ofType: null; }; defaultValue: null }, { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'AiCurrentFileInput': { kind: 'INPUT_OBJECT'; name: 'AiCurrentFileInput'; inputFields: [{ name: 'fileName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'selectedText'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'contentAboveCursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'contentBelowCursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'AiExplainCodeInput': { kind: 'INPUT_OBJECT'; name: 'AiExplainCodeInput'; inputFields: [{ name: 'resourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AiModelID'; ofType: null; }; }; defaultValue: null }, { name: 'messages'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AiExplainCodeMessageInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'AiExplainCodeMessageInput': { kind: 'INPUT_OBJECT'; name: 'AiExplainCodeMessageInput'; inputFields: [{ name: 'role'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'AiExplainVulnerabilityInput': { kind: 'INPUT_OBJECT'; name: 'AiExplainVulnerabilityInput'; inputFields: [{ name: 'resourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AiModelID'; ofType: null; }; }; defaultValue: null }, { name: 'includeSourceCode'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'AiFillInMergeRequestTemplateInput': { kind: 'INPUT_OBJECT'; name: 'AiFillInMergeRequestTemplateInput'; inputFields: [{ name: 'resourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AiModelID'; ofType: null; }; }; defaultValue: null }, { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'sourceProjectId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'sourceBranch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'targetBranch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'AiGenerateCommitMessageInput': { kind: 'INPUT_OBJECT'; name: 'AiGenerateCommitMessageInput'; inputFields: [{ name: 'resourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AiModelID'; ofType: null; }; }; defaultValue: null }]; };
    'AiGenerateCubeQueryInput': { kind: 'INPUT_OBJECT'; name: 'AiGenerateCubeQueryInput'; inputFields: [{ name: 'resourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AiModelID'; ofType: null; }; }; defaultValue: null }, { name: 'question'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'AiGenerateDescriptionInput': { kind: 'INPUT_OBJECT'; name: 'AiGenerateDescriptionInput'; inputFields: [{ name: 'resourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AiModelID'; ofType: null; }; }; defaultValue: null }, { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'descriptionTemplateName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'AiMessage': { kind: 'OBJECT'; name: 'AiMessage'; fields: { 'agentVersionId': { name: 'agentVersionId'; type: { kind: 'SCALAR'; name: 'AiAgentVersionID'; ofType: null; } }; 'chunkId': { name: 'chunkId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'content': { name: 'content'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'contentHtml': { name: 'contentHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'extras': { name: 'extras'; type: { kind: 'OBJECT'; name: 'AiMessageExtras'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'requestId': { name: 'requestId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'role': { name: 'role'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AiMessageRole'; ofType: null; }; } }; 'timestamp': { name: 'timestamp'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'AiMessageType'; ofType: null; } }; }; };
    'AiMessageConnection': { kind: 'OBJECT'; name: 'AiMessageConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AiMessageEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AiMessage'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AiMessageEdge': { kind: 'OBJECT'; name: 'AiMessageEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'AiMessage'; ofType: null; } }; }; };
    'AiMessageExtras': { kind: 'OBJECT'; name: 'AiMessageExtras'; fields: { 'hasFeedback': { name: 'hasFeedback'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'sources': { name: 'sources'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; }; } }; }; };
    'AiMessageRole': { kind: 'ENUM'; name: 'AiMessageRole'; type: 'USER' | 'ASSISTANT' | 'SYSTEM'; };
    'AiMessageType': { kind: 'ENUM'; name: 'AiMessageType'; type: 'TOOL'; };
    'AiModelID': unknown;
    'AiResolveVulnerabilityInput': { kind: 'INPUT_OBJECT'; name: 'AiResolveVulnerabilityInput'; inputFields: [{ name: 'resourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AiModelID'; ofType: null; }; }; defaultValue: null }]; };
    'AiSummarizeCommentsInput': { kind: 'INPUT_OBJECT'; name: 'AiSummarizeCommentsInput'; inputFields: [{ name: 'resourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AiModelID'; ofType: null; }; }; defaultValue: null }]; };
    'AiSummarizeNewMergeRequestInput': { kind: 'INPUT_OBJECT'; name: 'AiSummarizeNewMergeRequestInput'; inputFields: [{ name: 'resourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AiModelID'; ofType: null; }; }; defaultValue: null }, { name: 'sourceProjectId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'sourceBranch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'targetBranch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'AiSummarizeReviewInput': { kind: 'INPUT_OBJECT'; name: 'AiSummarizeReviewInput'; inputFields: [{ name: 'resourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AiModelID'; ofType: null; }; }; defaultValue: null }]; };
    'AlertManagementAlert': { kind: 'OBJECT'; name: 'AlertManagementAlert'; fields: { 'assignees': { name: 'assignees'; type: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; } }; 'commenters': { name: 'commenters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'details': { name: 'details'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'detailsUrl': { name: 'detailsUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'discussions': { name: 'discussions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscussionConnection'; ofType: null; }; } }; 'endedAt': { name: 'endedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'environment': { name: 'environment'; type: { kind: 'OBJECT'; name: 'Environment'; ofType: null; } }; 'eventCount': { name: 'eventCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'hosts': { name: 'hosts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'iid': { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; 'issueIid': { name: 'issueIid'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'metricsDashboardUrl': { name: 'metricsDashboardUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'monitoringTool': { name: 'monitoringTool'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'notes': { name: 'notes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NoteConnection'; ofType: null; }; } }; 'prometheusAlert': { name: 'prometheusAlert'; type: { kind: 'OBJECT'; name: 'PrometheusAlert'; ofType: null; } }; 'runbook': { name: 'runbook'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'service': { name: 'service'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'severity': { name: 'severity'; type: { kind: 'ENUM'; name: 'AlertManagementSeverity'; ofType: null; } }; 'startedAt': { name: 'startedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'AlertManagementStatus'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'todos': { name: 'todos'; type: { kind: 'OBJECT'; name: 'TodoConnection'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AlertManagementAlertConnection': { kind: 'OBJECT'; name: 'AlertManagementAlertConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AlertManagementAlertEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AlertManagementAlert'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AlertManagementAlertEdge': { kind: 'OBJECT'; name: 'AlertManagementAlertEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'AlertManagementAlert'; ofType: null; } }; }; };
    'AlertManagementAlertID': unknown;
    'AlertManagementAlertSort': { kind: 'ENUM'; name: 'AlertManagementAlertSort'; type: 'STARTED_AT_ASC' | 'STARTED_AT_DESC' | 'ENDED_AT_ASC' | 'ENDED_AT_DESC' | 'CREATED_TIME_ASC' | 'CREATED_TIME_DESC' | 'UPDATED_TIME_ASC' | 'UPDATED_TIME_DESC' | 'EVENT_COUNT_ASC' | 'EVENT_COUNT_DESC' | 'SEVERITY_ASC' | 'SEVERITY_DESC' | 'STATUS_ASC' | 'STATUS_DESC' | 'updated_desc' | 'updated_asc' | 'created_desc' | 'created_asc' | 'UPDATED_DESC' | 'UPDATED_ASC' | 'CREATED_DESC' | 'CREATED_ASC'; };
    'AlertManagementAlertStatusCountsType': { kind: 'OBJECT'; name: 'AlertManagementAlertStatusCountsType'; fields: { 'acknowledged': { name: 'acknowledged'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'all': { name: 'all'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'ignored': { name: 'ignored'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'open': { name: 'open'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'resolved': { name: 'resolved'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'triggered': { name: 'triggered'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'AlertManagementDomainFilter': { kind: 'ENUM'; name: 'AlertManagementDomainFilter'; type: 'operations' | 'threat_monitoring'; };
    'AlertManagementHttpIntegration': { kind: 'OBJECT'; name: 'AlertManagementHttpIntegration'; fields: { 'active': { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'apiUrl': { name: 'apiUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'payloadAlertFields': { name: 'payloadAlertFields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AlertManagementPayloadAlertField'; ofType: null; }; }; } }; 'payloadAttributeMappings': { name: 'payloadAttributeMappings'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AlertManagementPayloadAlertMappingField'; ofType: null; }; }; } }; 'payloadExample': { name: 'payloadExample'; type: { kind: 'SCALAR'; name: 'JsonString'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AlertManagementIntegrationType'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AlertManagementHttpIntegrationConnection': { kind: 'OBJECT'; name: 'AlertManagementHttpIntegrationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AlertManagementHttpIntegrationEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AlertManagementHttpIntegration'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AlertManagementHttpIntegrationEdge': { kind: 'OBJECT'; name: 'AlertManagementHttpIntegrationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'AlertManagementHttpIntegration'; ofType: null; } }; }; };
    'AlertManagementHttpIntegrationID': unknown;
    'AlertManagementIntegration': { kind: 'INTERFACE'; name: 'AlertManagementIntegration'; fields: { 'active': { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'apiUrl': { name: 'apiUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AlertManagementIntegrationType'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; possibleTypes: 'AlertManagementHttpIntegration' | 'AlertManagementPrometheusIntegration'; };
    'AlertManagementIntegrationConnection': { kind: 'OBJECT'; name: 'AlertManagementIntegrationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AlertManagementIntegrationEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'INTERFACE'; name: 'AlertManagementIntegration'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AlertManagementIntegrationEdge': { kind: 'OBJECT'; name: 'AlertManagementIntegrationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'INTERFACE'; name: 'AlertManagementIntegration'; ofType: null; } }; }; };
    'AlertManagementIntegrationType': { kind: 'ENUM'; name: 'AlertManagementIntegrationType'; type: 'PROMETHEUS' | 'HTTP'; };
    'AlertManagementPayloadAlertField': { kind: 'OBJECT'; name: 'AlertManagementPayloadAlertField'; fields: { 'label': { name: 'label'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PayloadAlertFieldPathSegment'; ofType: null; }; }; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'AlertManagementPayloadAlertFieldType'; ofType: null; } }; }; };
    'AlertManagementPayloadAlertFieldInput': { kind: 'INPUT_OBJECT'; name: 'AlertManagementPayloadAlertFieldInput'; inputFields: [{ name: 'fieldName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AlertManagementPayloadAlertFieldName'; ofType: null; }; }; defaultValue: null }, { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PayloadAlertFieldPathSegment'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'label'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AlertManagementPayloadAlertFieldType'; ofType: null; }; }; defaultValue: null }]; };
    'AlertManagementPayloadAlertFieldName': { kind: 'ENUM'; name: 'AlertManagementPayloadAlertFieldName'; type: 'TITLE' | 'DESCRIPTION' | 'START_TIME' | 'END_TIME' | 'SERVICE' | 'MONITORING_TOOL' | 'HOSTS' | 'SEVERITY' | 'FINGERPRINT' | 'GITLAB_ENVIRONMENT_NAME'; };
    'AlertManagementPayloadAlertFieldType': { kind: 'ENUM'; name: 'AlertManagementPayloadAlertFieldType'; type: 'ARRAY' | 'DATETIME' | 'STRING'; };
    'AlertManagementPayloadAlertMappingField': { kind: 'OBJECT'; name: 'AlertManagementPayloadAlertMappingField'; fields: { 'fieldName': { name: 'fieldName'; type: { kind: 'ENUM'; name: 'AlertManagementPayloadAlertFieldName'; ofType: null; } }; 'label': { name: 'label'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PayloadAlertFieldPathSegment'; ofType: null; }; }; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'AlertManagementPayloadAlertFieldType'; ofType: null; } }; }; };
    'AlertManagementPrometheusIntegration': { kind: 'OBJECT'; name: 'AlertManagementPrometheusIntegration'; fields: { 'active': { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'apiUrl': { name: 'apiUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AlertManagementIntegrationType'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AlertManagementSeverity': { kind: 'ENUM'; name: 'AlertManagementSeverity'; type: 'CRITICAL' | 'HIGH' | 'MEDIUM' | 'LOW' | 'INFO' | 'UNKNOWN'; };
    'AlertManagementStatus': { kind: 'ENUM'; name: 'AlertManagementStatus'; type: 'TRIGGERED' | 'ACKNOWLEDGED' | 'RESOLVED' | 'IGNORED'; };
    'AlertSetAssigneesInput': { kind: 'INPUT_OBJECT'; name: 'AlertSetAssigneesInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'assigneeUsernames'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'operationMode'; type: { kind: 'ENUM'; name: 'MutationOperationMode'; ofType: null; }; defaultValue: null }]; };
    'AlertSetAssigneesPayload': { kind: 'OBJECT'; name: 'AlertSetAssigneesPayload'; fields: { 'alert': { name: 'alert'; type: { kind: 'OBJECT'; name: 'AlertManagementAlert'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; 'todo': { name: 'todo'; type: { kind: 'OBJECT'; name: 'Todo'; ofType: null; } }; }; };
    'AlertTodoCreateInput': { kind: 'INPUT_OBJECT'; name: 'AlertTodoCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'AlertTodoCreatePayload': { kind: 'OBJECT'; name: 'AlertTodoCreatePayload'; fields: { 'alert': { name: 'alert'; type: { kind: 'OBJECT'; name: 'AlertManagementAlert'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; 'todo': { name: 'todo'; type: { kind: 'OBJECT'; name: 'Todo'; ofType: null; } }; }; };
    'AmazonS3ConfigurationInterface': { kind: 'INTERFACE'; name: 'AmazonS3ConfigurationInterface'; fields: { 'accessKeyXid': { name: 'accessKeyXid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'awsRegion': { name: 'awsRegion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'bucketName': { name: 'bucketName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'AmazonS3ConfigurationType' | 'InstanceAmazonS3ConfigurationType'; };
    'AmazonS3ConfigurationType': { kind: 'OBJECT'; name: 'AmazonS3ConfigurationType'; fields: { 'accessKeyXid': { name: 'accessKeyXid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'awsRegion': { name: 'awsRegion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'bucketName': { name: 'bucketName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'group': { name: 'group'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Group'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AmazonS3ConfigurationTypeConnection': { kind: 'OBJECT'; name: 'AmazonS3ConfigurationTypeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AmazonS3ConfigurationTypeEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AmazonS3ConfigurationType'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AmazonS3ConfigurationTypeEdge': { kind: 'OBJECT'; name: 'AmazonS3ConfigurationTypeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'AmazonS3ConfigurationType'; ofType: null; } }; }; };
    'AnalyticsCycleAnalyticsValueStreamID': unknown;
    'AnalyticsDevopsAdoptionEnabledNamespaceID': unknown;
    'AnalyzeCiJobFailureInput': { kind: 'INPUT_OBJECT'; name: 'AnalyzeCiJobFailureInput'; inputFields: [{ name: 'resourceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AiModelID'; ofType: null; }; }; defaultValue: null }]; };
    'ApiFuzzingCiConfiguration': { kind: 'OBJECT'; name: 'ApiFuzzingCiConfiguration'; fields: { 'scanModes': { name: 'scanModes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ApiFuzzingScanMode'; ofType: null; }; }; } }; 'scanProfiles': { name: 'scanProfiles'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ApiFuzzingScanProfile'; ofType: null; }; }; } }; }; };
    'ApiFuzzingScanMode': { kind: 'ENUM'; name: 'ApiFuzzingScanMode'; type: 'HAR' | 'OPENAPI' | 'POSTMAN'; };
    'ApiFuzzingScanProfile': { kind: 'OBJECT'; name: 'ApiFuzzingScanProfile'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'yaml': { name: 'yaml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AppSecFuzzingCoverageCorpusID': unknown;
    'ApprovalPolicy': { kind: 'OBJECT'; name: 'ApprovalPolicy'; fields: { 'allGroupApprovers': { name: 'allGroupApprovers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PolicyApprovalGroup'; ofType: null; }; }; } }; 'deprecatedProperties': { name: 'deprecatedProperties'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'editPath': { name: 'editPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'groupApprovers': { name: 'groupApprovers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Group'; ofType: null; }; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'policyScope': { name: 'policyScope'; type: { kind: 'OBJECT'; name: 'PolicyScope'; ofType: null; } }; 'roleApprovers': { name: 'roleApprovers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MemberAccessLevelName'; ofType: null; }; }; } }; 'source': { name: 'source'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'SecurityPolicySource'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'userApprovers': { name: 'userApprovers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; }; } }; 'yaml': { name: 'yaml'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ApprovalPolicyConnection': { kind: 'OBJECT'; name: 'ApprovalPolicyConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ApprovalPolicyEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ApprovalPolicy'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ApprovalPolicyEdge': { kind: 'OBJECT'; name: 'ApprovalPolicyEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ApprovalPolicy'; ofType: null; } }; }; };
    'ApprovalProjectRule': { kind: 'OBJECT'; name: 'ApprovalProjectRule'; fields: { 'approvalsRequired': { name: 'approvalsRequired'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'eligibleApprovers': { name: 'eligibleApprovers'; type: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GlobalID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'ApprovalRuleType'; ofType: null; } }; }; };
    'ApprovalProjectRuleConnection': { kind: 'OBJECT'; name: 'ApprovalProjectRuleConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ApprovalProjectRuleEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ApprovalProjectRule'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ApprovalProjectRuleEdge': { kind: 'OBJECT'; name: 'ApprovalProjectRuleEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ApprovalProjectRule'; ofType: null; } }; }; };
    'ApprovalProjectRuleID': unknown;
    'ApprovalReportType': { kind: 'ENUM'; name: 'ApprovalReportType'; type: 'SCAN_FINDING' | 'LICENSE_SCANNING' | 'ANY_MERGE_REQUEST'; };
    'ApprovalRule': { kind: 'OBJECT'; name: 'ApprovalRule'; fields: { 'allowMergeWhenInvalid': { name: 'allowMergeWhenInvalid'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'approvalsRequired': { name: 'approvalsRequired'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'approved': { name: 'approved'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'approvedBy': { name: 'approvedBy'; type: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; } }; 'commentedBy': { name: 'commentedBy'; type: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; } }; 'containsHiddenGroups': { name: 'containsHiddenGroups'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'eligibleApprovers': { name: 'eligibleApprovers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; }; } }; 'groups': { name: 'groups'; type: { kind: 'OBJECT'; name: 'GroupConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GlobalID'; ofType: null; }; } }; 'invalid': { name: 'invalid'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'overridden': { name: 'overridden'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'scanResultPolicies': { name: 'scanResultPolicies'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ApprovalScanResultPolicy'; ofType: null; }; }; } }; 'section': { name: 'section'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'sourceRule': { name: 'sourceRule'; type: { kind: 'OBJECT'; name: 'ApprovalRule'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'ApprovalRuleType'; ofType: null; } }; 'users': { name: 'users'; type: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; } }; }; };
    'ApprovalRuleType': { kind: 'ENUM'; name: 'ApprovalRuleType'; type: 'REGULAR' | 'CODE_OWNER' | 'REPORT_APPROVER' | 'ANY_APPROVER'; };
    'ApprovalScanResultPolicy': { kind: 'OBJECT'; name: 'ApprovalScanResultPolicy'; fields: { 'approvalsRequired': { name: 'approvalsRequired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'reportType': { name: 'reportType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ApprovalReportType'; ofType: null; }; } }; }; };
    'ApproveDeploymentInput': { kind: 'INPUT_OBJECT'; name: 'ApproveDeploymentInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DeploymentID'; ofType: null; }; }; defaultValue: null }, { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DeploymentsApprovalStatus'; ofType: null; }; }; defaultValue: null }, { name: 'comment'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'representedAs'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ApproveDeploymentPayload': { kind: 'OBJECT'; name: 'ApproveDeploymentPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deploymentApproval': { name: 'deploymentApproval'; type: { kind: 'OBJECT'; name: 'DeploymentApproval'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'ArtifactDestroyInput': { kind: 'INPUT_OBJECT'; name: 'ArtifactDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiJobArtifactID'; ofType: null; }; }; defaultValue: null }]; };
    'ArtifactDestroyPayload': { kind: 'OBJECT'; name: 'ArtifactDestroyPayload'; fields: { 'artifact': { name: 'artifact'; type: { kind: 'OBJECT'; name: 'CiJobArtifact'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'AssetType': { kind: 'OBJECT'; name: 'AssetType'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AssigneeWildcardId': { kind: 'ENUM'; name: 'AssigneeWildcardId'; type: 'NONE' | 'ANY'; };
    'AuditEventDefinition': { kind: 'OBJECT'; name: 'AuditEventDefinition'; fields: { 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'featureCategory': { name: 'featureCategory'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'introducedByIssue': { name: 'introducedByIssue'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'introducedByMr': { name: 'introducedByMr'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'milestone': { name: 'milestone'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'savedToDatabase': { name: 'savedToDatabase'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'streamed': { name: 'streamed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'AuditEventDefinitionConnection': { kind: 'OBJECT'; name: 'AuditEventDefinitionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AuditEventDefinitionEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AuditEventDefinition'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AuditEventDefinitionEdge': { kind: 'OBJECT'; name: 'AuditEventDefinitionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'AuditEventDefinition'; ofType: null; } }; }; };
    'AuditEventStreamingHTTPNamespaceFilter': { kind: 'OBJECT'; name: 'AuditEventStreamingHTTPNamespaceFilter'; fields: { 'externalAuditEventDestination': { name: 'externalAuditEventDestination'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExternalAuditEventDestination'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; }; } }; }; };
    'AuditEventStreamingHeader': { kind: 'OBJECT'; name: 'AuditEventStreamingHeader'; fields: { 'active': { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AuditEventStreamingHeaderConnection': { kind: 'OBJECT'; name: 'AuditEventStreamingHeaderConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AuditEventStreamingHeaderEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AuditEventStreamingHeader'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AuditEventStreamingHeaderEdge': { kind: 'OBJECT'; name: 'AuditEventStreamingHeaderEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'AuditEventStreamingHeader'; ofType: null; } }; }; };
    'AuditEventsAmazonS3ConfigurationCreateInput': { kind: 'INPUT_OBJECT'; name: 'AuditEventsAmazonS3ConfigurationCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'accessKeyXid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'secretAccessKey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'bucketName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'awsRegion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'AuditEventsAmazonS3ConfigurationCreatePayload': { kind: 'OBJECT'; name: 'AuditEventsAmazonS3ConfigurationCreatePayload'; fields: { 'amazonS3Configuration': { name: 'amazonS3Configuration'; type: { kind: 'OBJECT'; name: 'AmazonS3ConfigurationType'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'AuditEventsAmazonS3ConfigurationDeleteInput': { kind: 'INPUT_OBJECT'; name: 'AuditEventsAmazonS3ConfigurationDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsAmazonS3ConfigurationID'; ofType: null; }; }; defaultValue: null }]; };
    'AuditEventsAmazonS3ConfigurationDeletePayload': { kind: 'OBJECT'; name: 'AuditEventsAmazonS3ConfigurationDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'AuditEventsAmazonS3ConfigurationID': unknown;
    'AuditEventsAmazonS3ConfigurationUpdateInput': { kind: 'INPUT_OBJECT'; name: 'AuditEventsAmazonS3ConfigurationUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsAmazonS3ConfigurationID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'accessKeyXid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'secretAccessKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'bucketName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'awsRegion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'AuditEventsAmazonS3ConfigurationUpdatePayload': { kind: 'OBJECT'; name: 'AuditEventsAmazonS3ConfigurationUpdatePayload'; fields: { 'amazonS3Configuration': { name: 'amazonS3Configuration'; type: { kind: 'OBJECT'; name: 'AmazonS3ConfigurationType'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'AuditEventsExternalAuditEventDestinationID': unknown;
    'AuditEventsGoogleCloudLoggingConfigurationID': unknown;
    'AuditEventsInstanceAmazonS3ConfigurationCreateInput': { kind: 'INPUT_OBJECT'; name: 'AuditEventsInstanceAmazonS3ConfigurationCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'accessKeyXid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'secretAccessKey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'bucketName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'awsRegion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'AuditEventsInstanceAmazonS3ConfigurationCreatePayload': { kind: 'OBJECT'; name: 'AuditEventsInstanceAmazonS3ConfigurationCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'instanceAmazonS3Configuration': { name: 'instanceAmazonS3Configuration'; type: { kind: 'OBJECT'; name: 'InstanceAmazonS3ConfigurationType'; ofType: null; } }; }; };
    'AuditEventsInstanceAmazonS3ConfigurationDeleteInput': { kind: 'INPUT_OBJECT'; name: 'AuditEventsInstanceAmazonS3ConfigurationDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsInstanceAmazonS3ConfigurationID'; ofType: null; }; }; defaultValue: null }]; };
    'AuditEventsInstanceAmazonS3ConfigurationDeletePayload': { kind: 'OBJECT'; name: 'AuditEventsInstanceAmazonS3ConfigurationDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'AuditEventsInstanceAmazonS3ConfigurationID': unknown;
    'AuditEventsInstanceAmazonS3ConfigurationUpdateInput': { kind: 'INPUT_OBJECT'; name: 'AuditEventsInstanceAmazonS3ConfigurationUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsInstanceAmazonS3ConfigurationID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'accessKeyXid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'secretAccessKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'bucketName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'awsRegion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'AuditEventsInstanceAmazonS3ConfigurationUpdatePayload': { kind: 'OBJECT'; name: 'AuditEventsInstanceAmazonS3ConfigurationUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'instanceAmazonS3Configuration': { name: 'instanceAmazonS3Configuration'; type: { kind: 'OBJECT'; name: 'InstanceAmazonS3ConfigurationType'; ofType: null; } }; }; };
    'AuditEventsInstanceExternalAuditEventDestinationID': unknown;
    'AuditEventsInstanceGoogleCloudLoggingConfigurationID': unknown;
    'AuditEventsStreamingDestinationEventsAddInput': { kind: 'INPUT_OBJECT'; name: 'AuditEventsStreamingDestinationEventsAddInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'eventTypeFilters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'destinationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsExternalAuditEventDestinationID'; ofType: null; }; }; defaultValue: null }]; };
    'AuditEventsStreamingDestinationEventsAddPayload': { kind: 'OBJECT'; name: 'AuditEventsStreamingDestinationEventsAddPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'eventTypeFilters': { name: 'eventTypeFilters'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; }; };
    'AuditEventsStreamingDestinationEventsRemoveInput': { kind: 'INPUT_OBJECT'; name: 'AuditEventsStreamingDestinationEventsRemoveInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'eventTypeFilters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'destinationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsExternalAuditEventDestinationID'; ofType: null; }; }; defaultValue: null }]; };
    'AuditEventsStreamingDestinationEventsRemovePayload': { kind: 'OBJECT'; name: 'AuditEventsStreamingDestinationEventsRemovePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'AuditEventsStreamingDestinationInstanceEventsAddInput': { kind: 'INPUT_OBJECT'; name: 'AuditEventsStreamingDestinationInstanceEventsAddInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'eventTypeFilters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'destinationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsInstanceExternalAuditEventDestinationID'; ofType: null; }; }; defaultValue: null }]; };
    'AuditEventsStreamingDestinationInstanceEventsAddPayload': { kind: 'OBJECT'; name: 'AuditEventsStreamingDestinationInstanceEventsAddPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'eventTypeFilters': { name: 'eventTypeFilters'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; }; };
    'AuditEventsStreamingDestinationInstanceEventsRemoveInput': { kind: 'INPUT_OBJECT'; name: 'AuditEventsStreamingDestinationInstanceEventsRemoveInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'eventTypeFilters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'destinationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsInstanceExternalAuditEventDestinationID'; ofType: null; }; }; defaultValue: null }]; };
    'AuditEventsStreamingDestinationInstanceEventsRemovePayload': { kind: 'OBJECT'; name: 'AuditEventsStreamingDestinationInstanceEventsRemovePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'AuditEventsStreamingHTTPNamespaceFilterID': unknown;
    'AuditEventsStreamingHTTPNamespaceFiltersAddInput': { kind: 'INPUT_OBJECT'; name: 'AuditEventsStreamingHTTPNamespaceFiltersAddInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'destinationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsExternalAuditEventDestinationID'; ofType: null; }; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'AuditEventsStreamingHTTPNamespaceFiltersAddPayload': { kind: 'OBJECT'; name: 'AuditEventsStreamingHTTPNamespaceFiltersAddPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'namespaceFilter': { name: 'namespaceFilter'; type: { kind: 'OBJECT'; name: 'AuditEventStreamingHTTPNamespaceFilter'; ofType: null; } }; }; };
    'AuditEventsStreamingHTTPNamespaceFiltersDeleteInput': { kind: 'INPUT_OBJECT'; name: 'AuditEventsStreamingHTTPNamespaceFiltersDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'namespaceFilterId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsStreamingHTTPNamespaceFilterID'; ofType: null; }; }; defaultValue: null }]; };
    'AuditEventsStreamingHTTPNamespaceFiltersDeletePayload': { kind: 'OBJECT'; name: 'AuditEventsStreamingHTTPNamespaceFiltersDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'AuditEventsStreamingHeaderID': unknown;
    'AuditEventsStreamingHeadersCreateInput': { kind: 'INPUT_OBJECT'; name: 'AuditEventsStreamingHeadersCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'destinationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsExternalAuditEventDestinationID'; ofType: null; }; }; defaultValue: null }, { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "true" }]; };
    'AuditEventsStreamingHeadersCreatePayload': { kind: 'OBJECT'; name: 'AuditEventsStreamingHeadersCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'header': { name: 'header'; type: { kind: 'OBJECT'; name: 'AuditEventStreamingHeader'; ofType: null; } }; }; };
    'AuditEventsStreamingHeadersDestroyInput': { kind: 'INPUT_OBJECT'; name: 'AuditEventsStreamingHeadersDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'headerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsStreamingHeaderID'; ofType: null; }; }; defaultValue: null }]; };
    'AuditEventsStreamingHeadersDestroyPayload': { kind: 'OBJECT'; name: 'AuditEventsStreamingHeadersDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'AuditEventsStreamingHeadersUpdateInput': { kind: 'INPUT_OBJECT'; name: 'AuditEventsStreamingHeadersUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'headerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsStreamingHeaderID'; ofType: null; }; }; defaultValue: null }, { name: 'key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: "null" }, { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: "null" }, { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "null" }]; };
    'AuditEventsStreamingHeadersUpdatePayload': { kind: 'OBJECT'; name: 'AuditEventsStreamingHeadersUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'header': { name: 'header'; type: { kind: 'OBJECT'; name: 'AuditEventStreamingHeader'; ofType: null; } }; }; };
    'AuditEventsStreamingInstanceHeader': { kind: 'OBJECT'; name: 'AuditEventsStreamingInstanceHeader'; fields: { 'active': { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AuditEventsStreamingInstanceHeaderConnection': { kind: 'OBJECT'; name: 'AuditEventsStreamingInstanceHeaderConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AuditEventsStreamingInstanceHeaderEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AuditEventsStreamingInstanceHeader'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AuditEventsStreamingInstanceHeaderEdge': { kind: 'OBJECT'; name: 'AuditEventsStreamingInstanceHeaderEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'AuditEventsStreamingInstanceHeader'; ofType: null; } }; }; };
    'AuditEventsStreamingInstanceHeaderID': unknown;
    'AuditEventsStreamingInstanceHeadersCreateInput': { kind: 'INPUT_OBJECT'; name: 'AuditEventsStreamingInstanceHeadersCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'destinationId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsInstanceExternalAuditEventDestinationID'; ofType: null; }; }; defaultValue: null }, { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "true" }]; };
    'AuditEventsStreamingInstanceHeadersCreatePayload': { kind: 'OBJECT'; name: 'AuditEventsStreamingInstanceHeadersCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'header': { name: 'header'; type: { kind: 'OBJECT'; name: 'AuditEventsStreamingInstanceHeader'; ofType: null; } }; }; };
    'AuditEventsStreamingInstanceHeadersDestroyInput': { kind: 'INPUT_OBJECT'; name: 'AuditEventsStreamingInstanceHeadersDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'headerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsStreamingInstanceHeaderID'; ofType: null; }; }; defaultValue: null }]; };
    'AuditEventsStreamingInstanceHeadersDestroyPayload': { kind: 'OBJECT'; name: 'AuditEventsStreamingInstanceHeadersDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'AuditEventsStreamingInstanceHeadersUpdateInput': { kind: 'INPUT_OBJECT'; name: 'AuditEventsStreamingInstanceHeadersUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'headerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsStreamingInstanceHeaderID'; ofType: null; }; }; defaultValue: null }, { name: 'key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: "null" }, { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: "null" }, { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "null" }]; };
    'AuditEventsStreamingInstanceHeadersUpdatePayload': { kind: 'OBJECT'; name: 'AuditEventsStreamingInstanceHeadersUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'header': { name: 'header'; type: { kind: 'OBJECT'; name: 'AuditEventsStreamingInstanceHeader'; ofType: null; } }; }; };
    'AutocompletedUser': { kind: 'OBJECT'; name: 'AutocompletedUser'; fields: { 'assignedMergeRequests': { name: 'assignedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'authoredMergeRequests': { name: 'authoredMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bio': { name: 'bio'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bot': { name: 'bot'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'callouts': { name: 'callouts'; type: { kind: 'OBJECT'; name: 'UserCalloutConnection'; ofType: null; } }; 'commitEmail': { name: 'commitEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'discord': { name: 'discord'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'emails': { name: 'emails'; type: { kind: 'OBJECT'; name: 'EmailConnection'; ofType: null; } }; 'gitpodEnabled': { name: 'gitpodEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'groupCount': { name: 'groupCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'groupMemberships': { name: 'groupMemberships'; type: { kind: 'OBJECT'; name: 'GroupMemberConnection'; ofType: null; } }; 'groups': { name: 'groups'; type: { kind: 'OBJECT'; name: 'GroupConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'ide': { name: 'ide'; type: { kind: 'OBJECT'; name: 'Ide'; ofType: null; } }; 'jobTitle': { name: 'jobTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastActivityOn': { name: 'lastActivityOn'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'linkedin': { name: 'linkedin'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'mergeRequestInteraction': { name: 'mergeRequestInteraction'; type: { kind: 'OBJECT'; name: 'UserMergeRequestInteraction'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; 'namespaceCommitEmails': { name: 'namespaceCommitEmails'; type: { kind: 'OBJECT'; name: 'NamespaceCommitEmailConnection'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organizations': { name: 'organizations'; type: { kind: 'OBJECT'; name: 'OrganizationConnection'; ofType: null; } }; 'preferencesGitpodPath': { name: 'preferencesGitpodPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'profileEnableGitpodPath': { name: 'profileEnableGitpodPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'projectMemberships': { name: 'projectMemberships'; type: { kind: 'OBJECT'; name: 'ProjectMemberConnection'; ofType: null; } }; 'pronouns': { name: 'pronouns'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'publicEmail': { name: 'publicEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'reviewRequestedMergeRequests': { name: 'reviewRequestedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'savedReplies': { name: 'savedReplies'; type: { kind: 'OBJECT'; name: 'SavedReplyConnection'; ofType: null; } }; 'savedReply': { name: 'savedReply'; type: { kind: 'OBJECT'; name: 'SavedReply'; ofType: null; } }; 'snippets': { name: 'snippets'; type: { kind: 'OBJECT'; name: 'SnippetConnection'; ofType: null; } }; 'starredProjects': { name: 'starredProjects'; type: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'UserState'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'OBJECT'; name: 'UserStatus'; ofType: null; } }; 'timelogs': { name: 'timelogs'; type: { kind: 'OBJECT'; name: 'TimelogConnection'; ofType: null; } }; 'todos': { name: 'todos'; type: { kind: 'OBJECT'; name: 'TodoConnection'; ofType: null; } }; 'twitter': { name: 'twitter'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userAchievements': { name: 'userAchievements'; type: { kind: 'OBJECT'; name: 'UserAchievementConnection'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserPermissions'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'workspaces': { name: 'workspaces'; type: { kind: 'OBJECT'; name: 'WorkspaceConnection'; ofType: null; } }; }; };
    'AvailabilityEnum': { kind: 'ENUM'; name: 'AvailabilityEnum'; type: 'NOT_SET' | 'BUSY'; };
    'AvailableExportFields': { kind: 'ENUM'; name: 'AvailableExportFields'; type: 'ID' | 'TITLE' | 'DESCRIPTION' | 'TYPE' | 'AUTHOR' | 'AUTHOR_USERNAME' | 'CREATED_AT'; };
    'AwardEmoji': { kind: 'OBJECT'; name: 'AwardEmoji'; fields: { 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'emoji': { name: 'emoji'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'unicode': { name: 'unicode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'unicodeVersion': { name: 'unicodeVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; }; };
    'AwardEmojiAddInput': { kind: 'INPUT_OBJECT'; name: 'AwardEmojiAddInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'awardableId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AwardableID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'AwardEmojiAddPayload': { kind: 'OBJECT'; name: 'AwardEmojiAddPayload'; fields: { 'awardEmoji': { name: 'awardEmoji'; type: { kind: 'OBJECT'; name: 'AwardEmoji'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'AwardEmojiConnection': { kind: 'OBJECT'; name: 'AwardEmojiConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AwardEmojiEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'AwardEmoji'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'AwardEmojiEdge': { kind: 'OBJECT'; name: 'AwardEmojiEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'AwardEmoji'; ofType: null; } }; }; };
    'AwardEmojiRemoveInput': { kind: 'INPUT_OBJECT'; name: 'AwardEmojiRemoveInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'awardableId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AwardableID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'AwardEmojiRemovePayload': { kind: 'OBJECT'; name: 'AwardEmojiRemovePayload'; fields: { 'awardEmoji': { name: 'awardEmoji'; type: { kind: 'OBJECT'; name: 'AwardEmoji'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'AwardEmojiToggleInput': { kind: 'INPUT_OBJECT'; name: 'AwardEmojiToggleInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'awardableId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AwardableID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'AwardEmojiTogglePayload': { kind: 'OBJECT'; name: 'AwardEmojiTogglePayload'; fields: { 'awardEmoji': { name: 'awardEmoji'; type: { kind: 'OBJECT'; name: 'AwardEmoji'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'toggledOn': { name: 'toggledOn'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'AwardableID': unknown;
    'BaseHeaderInterface': { kind: 'INTERFACE'; name: 'BaseHeaderInterface'; fields: { 'active': { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'AuditEventStreamingHeader' | 'AuditEventsStreamingInstanceHeader'; };
    'BaseService': { kind: 'OBJECT'; name: 'BaseService'; fields: { 'active': { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'serviceType': { name: 'serviceType'; type: { kind: 'ENUM'; name: 'ServiceType'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'BigInt': unknown;
    'Blame': { kind: 'OBJECT'; name: 'Blame'; fields: { 'firstLine': { name: 'firstLine'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'groups': { name: 'groups'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Groups'; ofType: null; }; }; } }; }; };
    'Blob': { kind: 'OBJECT'; name: 'Blob'; fields: { 'flatPath': { name: 'flatPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lfsOid': { name: 'lfsOid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'mode': { name: 'mode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sha': { name: 'sha'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EntryType'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'BlobConnection': { kind: 'OBJECT'; name: 'BlobConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'BlobEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Blob'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'BlobEdge': { kind: 'OBJECT'; name: 'BlobEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Blob'; ofType: null; } }; }; };
    'BlobViewer': { kind: 'OBJECT'; name: 'BlobViewer'; fields: { 'collapsed': { name: 'collapsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'fileType': { name: 'fileType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'loadAsync': { name: 'loadAsync'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'loadingPartialName': { name: 'loadingPartialName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'renderError': { name: 'renderError'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tooLarge': { name: 'tooLarge'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'BlobViewersType'; ofType: null; }; } }; }; };
    'BlobViewersType': { kind: 'ENUM'; name: 'BlobViewersType'; type: 'rich' | 'simple' | 'auxiliary'; };
    'BlockingMergeRequests': { kind: 'OBJECT'; name: 'BlockingMergeRequests'; fields: { 'hiddenCount': { name: 'hiddenCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'visibleMergeRequests': { name: 'visibleMergeRequests'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; }; }; } }; }; };
    'Board': { kind: 'OBJECT'; name: 'Board'; fields: { 'assignee': { name: 'assignee'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'epics': { name: 'epics'; type: { kind: 'OBJECT'; name: 'BoardEpicConnection'; ofType: null; } }; 'hideBacklogList': { name: 'hideBacklogList'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'hideClosedList': { name: 'hideClosedList'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'iteration': { name: 'iteration'; type: { kind: 'OBJECT'; name: 'Iteration'; ofType: null; } }; 'iterationCadence': { name: 'iterationCadence'; type: { kind: 'OBJECT'; name: 'IterationCadence'; ofType: null; } }; 'labels': { name: 'labels'; type: { kind: 'OBJECT'; name: 'LabelConnection'; ofType: null; } }; 'lists': { name: 'lists'; type: { kind: 'OBJECT'; name: 'BoardListConnection'; ofType: null; } }; 'milestone': { name: 'milestone'; type: { kind: 'OBJECT'; name: 'Milestone'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'weight': { name: 'weight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'BoardConnection': { kind: 'OBJECT'; name: 'BoardConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'BoardEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Board'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'BoardEdge': { kind: 'OBJECT'; name: 'BoardEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Board'; ofType: null; } }; }; };
    'BoardEpic': { kind: 'OBJECT'; name: 'BoardEpic'; fields: { 'ancestors': { name: 'ancestors'; type: { kind: 'OBJECT'; name: 'EpicConnection'; ofType: null; } }; 'author': { name: 'author'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; 'awardEmoji': { name: 'awardEmoji'; type: { kind: 'OBJECT'; name: 'AwardEmojiConnection'; ofType: null; } }; 'blocked': { name: 'blocked'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'blockedByCount': { name: 'blockedByCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'blockedByEpics': { name: 'blockedByEpics'; type: { kind: 'OBJECT'; name: 'EpicConnection'; ofType: null; } }; 'blockingCount': { name: 'blockingCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'children': { name: 'children'; type: { kind: 'OBJECT'; name: 'EpicConnection'; ofType: null; } }; 'closedAt': { name: 'closedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'color': { name: 'color'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'commenters': { name: 'commenters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; }; } }; 'confidential': { name: 'confidential'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'currentUserTodos': { name: 'currentUserTodos'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TodoConnection'; ofType: null; }; } }; 'defaultProjectForIssueCreation': { name: 'defaultProjectForIssueCreation'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'descendantCounts': { name: 'descendantCounts'; type: { kind: 'OBJECT'; name: 'EpicDescendantCount'; ofType: null; } }; 'descendantWeightSum': { name: 'descendantWeightSum'; type: { kind: 'OBJECT'; name: 'EpicDescendantWeights'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'discussions': { name: 'discussions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscussionConnection'; ofType: null; }; } }; 'downvotes': { name: 'downvotes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'dueDate': { name: 'dueDate'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'dueDateFixed': { name: 'dueDateFixed'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'dueDateFromInheritedSource': { name: 'dueDateFromInheritedSource'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'dueDateFromMilestones': { name: 'dueDateFromMilestones'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'dueDateIsFixed': { name: 'dueDateIsFixed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'events': { name: 'events'; type: { kind: 'OBJECT'; name: 'EventConnection'; ofType: null; } }; 'group': { name: 'group'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Group'; ofType: null; }; } }; 'hasChildren': { name: 'hasChildren'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasIssues': { name: 'hasIssues'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasParent': { name: 'hasParent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'healthStatus': { name: 'healthStatus'; type: { kind: 'OBJECT'; name: 'EpicHealthStatus'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'iid': { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'issues': { name: 'issues'; type: { kind: 'OBJECT'; name: 'EpicIssueConnection'; ofType: null; } }; 'labels': { name: 'labels'; type: { kind: 'OBJECT'; name: 'LabelConnection'; ofType: null; } }; 'notes': { name: 'notes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NoteConnection'; ofType: null; }; } }; 'parent': { name: 'parent'; type: { kind: 'OBJECT'; name: 'Epic'; ofType: null; } }; 'participants': { name: 'participants'; type: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; } }; 'reference': { name: 'reference'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'relationPath': { name: 'relationPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'relativePosition': { name: 'relativePosition'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'startDate': { name: 'startDate'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'startDateFixed': { name: 'startDateFixed'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'startDateFromInheritedSource': { name: 'startDateFromInheritedSource'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'startDateFromMilestones': { name: 'startDateFromMilestones'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'startDateIsFixed': { name: 'startDateIsFixed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EpicState'; ofType: null; }; } }; 'subscribed': { name: 'subscribed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'textColor': { name: 'textColor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'titleHtml': { name: 'titleHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'upvotes': { name: 'upvotes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'userDiscussionsCount': { name: 'userDiscussionsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'userNotesCount': { name: 'userNotesCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EpicPermissions'; ofType: null; }; } }; 'userPreferences': { name: 'userPreferences'; type: { kind: 'OBJECT'; name: 'BoardEpicUserPreferences'; ofType: null; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'BoardEpicConnection': { kind: 'OBJECT'; name: 'BoardEpicConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'BoardEpicEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'BoardEpic'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'BoardEpicCreateInput': { kind: 'INPUT_OBJECT'; name: 'BoardEpicCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'boardId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BoardsEpicBoardID'; ofType: null; }; }; defaultValue: null }, { name: 'listId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BoardsEpicListID'; ofType: null; }; }; defaultValue: null }, { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'BoardEpicCreatePayload': { kind: 'OBJECT'; name: 'BoardEpicCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'epic': { name: 'epic'; type: { kind: 'OBJECT'; name: 'Epic'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'BoardEpicEdge': { kind: 'OBJECT'; name: 'BoardEpicEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'BoardEpic'; ofType: null; } }; }; };
    'BoardEpicUserPreferences': { kind: 'OBJECT'; name: 'BoardEpicUserPreferences'; fields: { 'collapsed': { name: 'collapsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'BoardID': unknown;
    'BoardIssueInput': { kind: 'INPUT_OBJECT'; name: 'BoardIssueInput'; inputFields: [{ name: 'labelName'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'authorUsername'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'myReactionEmoji'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'iids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'milestoneTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'assigneeUsername'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'releaseTag'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'types'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'IssueType'; ofType: null; }; }; }; defaultValue: null }, { name: 'milestoneWildcardId'; type: { kind: 'ENUM'; name: 'MilestoneWildcardId'; ofType: null; }; defaultValue: null }, { name: 'epicId'; type: { kind: 'SCALAR'; name: 'EpicID'; ofType: null; }; defaultValue: null }, { name: 'iterationTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'iterationId'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IterationID'; ofType: null; }; }; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'NegatedBoardIssueInput'; ofType: null; }; defaultValue: null }, { name: 'or'; type: { kind: 'INPUT_OBJECT'; name: 'UnionedIssueFilterInput'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'assigneeWildcardId'; type: { kind: 'ENUM'; name: 'AssigneeWildcardId'; ofType: null; }; defaultValue: null }, { name: 'confidential'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'epicWildcardId'; type: { kind: 'ENUM'; name: 'EpicWildcardId'; ofType: null; }; defaultValue: null }, { name: 'iterationWildcardId'; type: { kind: 'ENUM'; name: 'IterationWildcardId'; ofType: null; }; defaultValue: null }, { name: 'iterationCadenceId'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IterationsCadenceID'; ofType: null; }; }; }; defaultValue: null }, { name: 'weightWildcardId'; type: { kind: 'ENUM'; name: 'WeightWildcardId'; ofType: null; }; defaultValue: null }, { name: 'healthStatusFilter'; type: { kind: 'ENUM'; name: 'HealthStatusFilter'; ofType: null; }; defaultValue: null }]; };
    'BoardList': { kind: 'OBJECT'; name: 'BoardList'; fields: { 'assignee': { name: 'assignee'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'collapsed': { name: 'collapsed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'issues': { name: 'issues'; type: { kind: 'OBJECT'; name: 'IssueConnection'; ofType: null; } }; 'issuesCount': { name: 'issuesCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'iteration': { name: 'iteration'; type: { kind: 'OBJECT'; name: 'Iteration'; ofType: null; } }; 'label': { name: 'label'; type: { kind: 'OBJECT'; name: 'Label'; ofType: null; } }; 'limitMetric': { name: 'limitMetric'; type: { kind: 'ENUM'; name: 'ListLimitMetric'; ofType: null; } }; 'listType': { name: 'listType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'maxIssueCount': { name: 'maxIssueCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'maxIssueWeight': { name: 'maxIssueWeight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'milestone': { name: 'milestone'; type: { kind: 'OBJECT'; name: 'Milestone'; ofType: null; } }; 'position': { name: 'position'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'totalIssueWeight': { name: 'totalIssueWeight'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'totalWeight': { name: 'totalWeight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'BoardListConnection': { kind: 'OBJECT'; name: 'BoardListConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'BoardListEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'BoardList'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'BoardListCreateInput': { kind: 'INPUT_OBJECT'; name: 'BoardListCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'backlog'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'labelId'; type: { kind: 'SCALAR'; name: 'LabelID'; ofType: null; }; defaultValue: null }, { name: 'boardId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BoardID'; ofType: null; }; }; defaultValue: null }, { name: 'milestoneId'; type: { kind: 'SCALAR'; name: 'MilestoneID'; ofType: null; }; defaultValue: null }, { name: 'iterationId'; type: { kind: 'SCALAR'; name: 'IterationID'; ofType: null; }; defaultValue: null }, { name: 'assigneeId'; type: { kind: 'SCALAR'; name: 'UserID'; ofType: null; }; defaultValue: null }]; };
    'BoardListCreatePayload': { kind: 'OBJECT'; name: 'BoardListCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'list': { name: 'list'; type: { kind: 'OBJECT'; name: 'BoardList'; ofType: null; } }; }; };
    'BoardListEdge': { kind: 'OBJECT'; name: 'BoardListEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'BoardList'; ofType: null; } }; }; };
    'BoardListUpdateLimitMetricsInput': { kind: 'INPUT_OBJECT'; name: 'BoardListUpdateLimitMetricsInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'listId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ListID'; ofType: null; }; }; defaultValue: null }, { name: 'limitMetric'; type: { kind: 'ENUM'; name: 'ListLimitMetric'; ofType: null; }; defaultValue: null }, { name: 'maxIssueCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'maxIssueWeight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'BoardListUpdateLimitMetricsPayload': { kind: 'OBJECT'; name: 'BoardListUpdateLimitMetricsPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'list': { name: 'list'; type: { kind: 'OBJECT'; name: 'BoardList'; ofType: null; } }; }; };
    'BoardsEpicBoardID': unknown;
    'BoardsEpicListID': unknown;
    'Boolean': unknown;
    'Branch': { kind: 'OBJECT'; name: 'Branch'; fields: { 'commit': { name: 'commit'; type: { kind: 'OBJECT'; name: 'Commit'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'BranchProtection': { kind: 'OBJECT'; name: 'BranchProtection'; fields: { 'allowForcePush': { name: 'allowForcePush'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'codeOwnerApprovalRequired': { name: 'codeOwnerApprovalRequired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'mergeAccessLevels': { name: 'mergeAccessLevels'; type: { kind: 'OBJECT'; name: 'MergeAccessLevelConnection'; ofType: null; } }; 'pushAccessLevels': { name: 'pushAccessLevels'; type: { kind: 'OBJECT'; name: 'PushAccessLevelConnection'; ofType: null; } }; 'unprotectAccessLevels': { name: 'unprotectAccessLevels'; type: { kind: 'OBJECT'; name: 'UnprotectAccessLevelConnection'; ofType: null; } }; }; };
    'BranchRule': { kind: 'OBJECT'; name: 'BranchRule'; fields: { 'approvalRules': { name: 'approvalRules'; type: { kind: 'OBJECT'; name: 'ApprovalProjectRuleConnection'; ofType: null; } }; 'branchProtection': { name: 'branchProtection'; type: { kind: 'OBJECT'; name: 'BranchProtection'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'externalStatusChecks': { name: 'externalStatusChecks'; type: { kind: 'OBJECT'; name: 'ExternalStatusCheckConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ProjectsBranchRuleID'; ofType: null; } }; 'isDefault': { name: 'isDefault'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isProtected': { name: 'isProtected'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'matchingBranchesCount': { name: 'matchingBranchesCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'BranchRuleConnection': { kind: 'OBJECT'; name: 'BranchRuleConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'BranchRuleEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'BranchRule'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'BranchRuleCreateInput': { kind: 'INPUT_OBJECT'; name: 'BranchRuleCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'BranchRuleCreatePayload': { kind: 'OBJECT'; name: 'BranchRuleCreatePayload'; fields: { 'branchRule': { name: 'branchRule'; type: { kind: 'OBJECT'; name: 'BranchRule'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'BranchRuleDeleteInput': { kind: 'INPUT_OBJECT'; name: 'BranchRuleDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectsBranchRuleID'; ofType: null; }; }; defaultValue: null }]; };
    'BranchRuleDeletePayload': { kind: 'OBJECT'; name: 'BranchRuleDeletePayload'; fields: { 'branchRule': { name: 'branchRule'; type: { kind: 'OBJECT'; name: 'BranchRule'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'BranchRuleEdge': { kind: 'OBJECT'; name: 'BranchRuleEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'BranchRule'; ofType: null; } }; }; };
    'BranchRuleExternalStatusCheckCreateInput': { kind: 'INPUT_OBJECT'; name: 'BranchRuleExternalStatusCheckCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'branchRuleId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectsBranchRuleID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'externalUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'BranchRuleExternalStatusCheckCreatePayload': { kind: 'OBJECT'; name: 'BranchRuleExternalStatusCheckCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'externalStatusCheck': { name: 'externalStatusCheck'; type: { kind: 'OBJECT'; name: 'ExternalStatusCheck'; ofType: null; } }; }; };
    'BranchRuleUpdateInput': { kind: 'INPUT_OBJECT'; name: 'BranchRuleUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectsBranchRuleID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'BranchRuleUpdatePayload': { kind: 'OBJECT'; name: 'BranchRuleUpdatePayload'; fields: { 'branchRule': { name: 'branchRule'; type: { kind: 'OBJECT'; name: 'BranchRule'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'BuildForecastInput': { kind: 'INPUT_OBJECT'; name: 'BuildForecastInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'horizon'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'contextId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GlobalID'; ofType: null; }; }; defaultValue: null }]; };
    'BuildForecastPayload': { kind: 'OBJECT'; name: 'BuildForecastPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'forecast': { name: 'forecast'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Forecast'; ofType: null; }; } }; }; };
    'BulkDestroyJobArtifactsInput': { kind: 'INPUT_OBJECT'; name: 'BulkDestroyJobArtifactsInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiJobArtifactID'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'projectId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectID'; ofType: null; }; }; defaultValue: null }]; };
    'BulkDestroyJobArtifactsPayload': { kind: 'OBJECT'; name: 'BulkDestroyJobArtifactsPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'destroyedCount': { name: 'destroyedCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'destroyedIds': { name: 'destroyedIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiJobArtifactID'; ofType: null; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'BulkEnableDevopsAdoptionNamespacesInput': { kind: 'INPUT_OBJECT'; name: 'BulkEnableDevopsAdoptionNamespacesInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'namespaceIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'NamespaceID'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'displayNamespaceId'; type: { kind: 'SCALAR'; name: 'NamespaceID'; ofType: null; }; defaultValue: null }]; };
    'BulkEnableDevopsAdoptionNamespacesPayload': { kind: 'OBJECT'; name: 'BulkEnableDevopsAdoptionNamespacesPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'enabledNamespaces': { name: 'enabledNamespaces'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DevopsAdoptionEnabledNamespace'; ofType: null; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'BulkRunnerDeleteInput': { kind: 'INPUT_OBJECT'; name: 'BulkRunnerDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiRunnerID'; ofType: null; }; }; }; defaultValue: null }]; };
    'BulkRunnerDeletePayload': { kind: 'OBJECT'; name: 'BulkRunnerDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletedCount': { name: 'deletedCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'deletedIds': { name: 'deletedIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiRunnerID'; ofType: null; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'BurnupChartDailyTotals': { kind: 'OBJECT'; name: 'BurnupChartDailyTotals'; fields: { 'completedCount': { name: 'completedCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'completedWeight': { name: 'completedWeight'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'date': { name: 'date'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601Date'; ofType: null; }; } }; 'scopeCount': { name: 'scopeCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'scopeWeight': { name: 'scopeWeight'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'CatalogResourcesCreateInput': { kind: 'INPUT_OBJECT'; name: 'CatalogResourcesCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'CatalogResourcesCreatePayload': { kind: 'OBJECT'; name: 'CatalogResourcesCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CatalogResourcesDestroyInput': { kind: 'INPUT_OBJECT'; name: 'CatalogResourcesDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'CatalogResourcesDestroyPayload': { kind: 'OBJECT'; name: 'CatalogResourcesDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CiApplicationSettings': { kind: 'OBJECT'; name: 'CiApplicationSettings'; fields: { 'keepLatestArtifact': { name: 'keepLatestArtifact'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'CiBuildID': unknown;
    'CiBuildNeed': { kind: 'OBJECT'; name: 'CiBuildNeed'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CiBuildNeedConnection': { kind: 'OBJECT'; name: 'CiBuildNeedConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiBuildNeedEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiBuildNeed'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiBuildNeedEdge': { kind: 'OBJECT'; name: 'CiBuildNeedEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiBuildNeed'; ofType: null; } }; }; };
    'CiCatalogResource': { kind: 'OBJECT'; name: 'CiCatalogResource'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fullPath': { name: 'fullPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'icon': { name: 'icon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'latestReleasedAt': { name: 'latestReleasedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'openIssuesCount': { name: 'openIssuesCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'openMergeRequestsCount': { name: 'openMergeRequestsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'starCount': { name: 'starCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'starrersPath': { name: 'starrersPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationLevel': { name: 'verificationLevel'; type: { kind: 'ENUM'; name: 'CiCatalogResourceComponentVerificationLevel'; ofType: null; } }; 'versions': { name: 'versions'; type: { kind: 'OBJECT'; name: 'CiCatalogResourceVersionConnection'; ofType: null; } }; 'webPath': { name: 'webPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CiCatalogResourceComponent': { kind: 'OBJECT'; name: 'CiCatalogResourceComponent'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiCatalogResourcesComponentID'; ofType: null; }; } }; 'includePath': { name: 'includePath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'inputs': { name: 'inputs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CiCatalogResourceComponentInput'; ofType: null; }; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CiCatalogResourceComponentConnection': { kind: 'OBJECT'; name: 'CiCatalogResourceComponentConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiCatalogResourceComponentEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiCatalogResourceComponent'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiCatalogResourceComponentEdge': { kind: 'OBJECT'; name: 'CiCatalogResourceComponentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiCatalogResourceComponent'; ofType: null; } }; }; };
    'CiCatalogResourceComponentInput': { kind: 'OBJECT'; name: 'CiCatalogResourceComponentInput'; fields: { 'default': { name: 'default'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'required': { name: 'required'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'CiCatalogResourceComponentVerificationLevel': { kind: 'ENUM'; name: 'CiCatalogResourceComponentVerificationLevel'; type: 'UNVERIFIED' | 'GITLAB'; };
    'CiCatalogResourceConnection': { kind: 'OBJECT'; name: 'CiCatalogResourceConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiCatalogResourceEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiCatalogResource'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiCatalogResourceEdge': { kind: 'OBJECT'; name: 'CiCatalogResourceEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiCatalogResource'; ofType: null; } }; }; };
    'CiCatalogResourceID': unknown;
    'CiCatalogResourceScope': { kind: 'ENUM'; name: 'CiCatalogResourceScope'; type: 'ALL' | 'NAMESPACES'; };
    'CiCatalogResourceSort': { kind: 'ENUM'; name: 'CiCatalogResourceSort'; type: 'NAME_ASC' | 'NAME_DESC' | 'LATEST_RELEASED_AT_ASC' | 'LATEST_RELEASED_AT_DESC' | 'CREATED_ASC' | 'CREATED_DESC' | 'STAR_COUNT_ASC' | 'STAR_COUNT_DESC'; };
    'CiCatalogResourceVersion': { kind: 'OBJECT'; name: 'CiCatalogResourceVersion'; fields: { 'author': { name: 'author'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'commit': { name: 'commit'; type: { kind: 'OBJECT'; name: 'Commit'; ofType: null; } }; 'components': { name: 'components'; type: { kind: 'OBJECT'; name: 'CiCatalogResourceComponentConnection'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiCatalogResourcesVersionID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'readmeHtml': { name: 'readmeHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'releasedAt': { name: 'releasedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'CiCatalogResourceVersionConnection': { kind: 'OBJECT'; name: 'CiCatalogResourceVersionConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiCatalogResourceVersionEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiCatalogResourceVersion'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiCatalogResourceVersionEdge': { kind: 'OBJECT'; name: 'CiCatalogResourceVersionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiCatalogResourceVersion'; ofType: null; } }; }; };
    'CiCatalogResourcesComponentID': unknown;
    'CiCatalogResourcesVersionID': unknown;
    'CiConfig': { kind: 'OBJECT'; name: 'CiConfig'; fields: { 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'includes': { name: 'includes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CiConfigInclude'; ofType: null; }; }; } }; 'mergedYaml': { name: 'mergedYaml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'stages': { name: 'stages'; type: { kind: 'OBJECT'; name: 'CiConfigStageConnection'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'CiConfigStatus'; ofType: null; } }; 'warnings': { name: 'warnings'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; }; };
    'CiConfigGroup': { kind: 'OBJECT'; name: 'CiConfigGroup'; fields: { 'jobs': { name: 'jobs'; type: { kind: 'OBJECT'; name: 'CiConfigJobConnection'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'size': { name: 'size'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'CiConfigGroupConnection': { kind: 'OBJECT'; name: 'CiConfigGroupConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiConfigGroupEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiConfigGroup'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiConfigGroupEdge': { kind: 'OBJECT'; name: 'CiConfigGroupEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiConfigGroup'; ofType: null; } }; }; };
    'CiConfigInclude': { kind: 'OBJECT'; name: 'CiConfigInclude'; fields: { 'blob': { name: 'blob'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'contextProject': { name: 'contextProject'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'contextSha': { name: 'contextSha'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'extra': { name: 'extra'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'raw': { name: 'raw'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'CiConfigIncludeType'; ofType: null; } }; }; };
    'CiConfigIncludeType': { kind: 'ENUM'; name: 'CiConfigIncludeType'; type: 'remote' | 'local' | 'file' | 'template' | 'component'; };
    'CiConfigJob': { kind: 'OBJECT'; name: 'CiConfigJob'; fields: { 'afterScript': { name: 'afterScript'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'allowFailure': { name: 'allowFailure'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'beforeScript': { name: 'beforeScript'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'environment': { name: 'environment'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'except': { name: 'except'; type: { kind: 'OBJECT'; name: 'CiConfigJobRestriction'; ofType: null; } }; 'groupName': { name: 'groupName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'needs': { name: 'needs'; type: { kind: 'OBJECT'; name: 'CiConfigNeedConnection'; ofType: null; } }; 'only': { name: 'only'; type: { kind: 'OBJECT'; name: 'CiConfigJobRestriction'; ofType: null; } }; 'script': { name: 'script'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'stage': { name: 'stage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tags': { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'when': { name: 'when'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CiConfigJobConnection': { kind: 'OBJECT'; name: 'CiConfigJobConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiConfigJobEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiConfigJob'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiConfigJobEdge': { kind: 'OBJECT'; name: 'CiConfigJobEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiConfigJob'; ofType: null; } }; }; };
    'CiConfigJobRestriction': { kind: 'OBJECT'; name: 'CiConfigJobRestriction'; fields: { 'refs': { name: 'refs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; }; };
    'CiConfigNeed': { kind: 'OBJECT'; name: 'CiConfigNeed'; fields: { 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CiConfigNeedConnection': { kind: 'OBJECT'; name: 'CiConfigNeedConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiConfigNeedEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiConfigNeed'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiConfigNeedEdge': { kind: 'OBJECT'; name: 'CiConfigNeedEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiConfigNeed'; ofType: null; } }; }; };
    'CiConfigStage': { kind: 'OBJECT'; name: 'CiConfigStage'; fields: { 'groups': { name: 'groups'; type: { kind: 'OBJECT'; name: 'CiConfigGroupConnection'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CiConfigStageConnection': { kind: 'OBJECT'; name: 'CiConfigStageConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiConfigStageEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiConfigStage'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiConfigStageEdge': { kind: 'OBJECT'; name: 'CiConfigStageEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiConfigStage'; ofType: null; } }; }; };
    'CiConfigStatus': { kind: 'ENUM'; name: 'CiConfigStatus'; type: 'VALID' | 'INVALID'; };
    'CiConfigVariable': { kind: 'OBJECT'; name: 'CiConfigVariable'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'key': { name: 'key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'valueOptions': { name: 'valueOptions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; }; };
    'CiFreezePeriod': { kind: 'OBJECT'; name: 'CiFreezePeriod'; fields: { 'cronTimezone': { name: 'cronTimezone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'endCron': { name: 'endCron'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endTime': { name: 'endTime'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'startCron': { name: 'startCron'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'startTime': { name: 'startTime'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CiFreezePeriodStatus'; ofType: null; }; } }; }; };
    'CiFreezePeriodStatus': { kind: 'ENUM'; name: 'CiFreezePeriodStatus'; type: 'ACTIVE' | 'INACTIVE'; };
    'CiGroup': { kind: 'OBJECT'; name: 'CiGroup'; fields: { 'detailedStatus': { name: 'detailedStatus'; type: { kind: 'OBJECT'; name: 'DetailedStatus'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'jobs': { name: 'jobs'; type: { kind: 'OBJECT'; name: 'CiJobConnection'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'size': { name: 'size'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'CiGroupConnection': { kind: 'OBJECT'; name: 'CiGroupConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiGroupEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiGroup'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiGroupEdge': { kind: 'OBJECT'; name: 'CiGroupEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiGroup'; ofType: null; } }; }; };
    'CiGroupEnvironmentScope': { kind: 'OBJECT'; name: 'CiGroupEnvironmentScope'; fields: { 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CiGroupEnvironmentScopeConnection': { kind: 'OBJECT'; name: 'CiGroupEnvironmentScopeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiGroupEnvironmentScopeEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiGroupEnvironmentScope'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiGroupEnvironmentScopeEdge': { kind: 'OBJECT'; name: 'CiGroupEnvironmentScopeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiGroupEnvironmentScope'; ofType: null; } }; }; };
    'CiGroupVariable': { kind: 'OBJECT'; name: 'CiGroupVariable'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'environmentScope': { name: 'environmentScope'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hidden': { name: 'hidden'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'masked': { name: 'masked'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'protected': { name: 'protected'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'raw': { name: 'raw'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'variableType': { name: 'variableType'; type: { kind: 'ENUM'; name: 'CiVariableType'; ofType: null; } }; }; };
    'CiGroupVariableConnection': { kind: 'OBJECT'; name: 'CiGroupVariableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiGroupVariableEdge'; ofType: null; }; } }; 'limit': { name: 'limit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiGroupVariable'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiGroupVariableEdge': { kind: 'OBJECT'; name: 'CiGroupVariableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiGroupVariable'; ofType: null; } }; }; };
    'CiGroupVariablesSort': { kind: 'ENUM'; name: 'CiGroupVariablesSort'; type: 'CREATED_DESC' | 'CREATED_ASC' | 'KEY_DESC' | 'KEY_ASC'; };
    'CiInstanceVariable': { kind: 'OBJECT'; name: 'CiInstanceVariable'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'environmentScope': { name: 'environmentScope'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'masked': { name: 'masked'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'protected': { name: 'protected'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'raw': { name: 'raw'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'variableType': { name: 'variableType'; type: { kind: 'ENUM'; name: 'CiVariableType'; ofType: null; } }; }; };
    'CiInstanceVariableConnection': { kind: 'OBJECT'; name: 'CiInstanceVariableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiInstanceVariableEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiInstanceVariable'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiInstanceVariableEdge': { kind: 'OBJECT'; name: 'CiInstanceVariableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiInstanceVariable'; ofType: null; } }; }; };
    'CiJob': { kind: 'OBJECT'; name: 'CiJob'; fields: { 'active': { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'aiFailureAnalysis': { name: 'aiFailureAnalysis'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'allowFailure': { name: 'allowFailure'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'artifacts': { name: 'artifacts'; type: { kind: 'OBJECT'; name: 'CiJobArtifactConnection'; ofType: null; } }; 'browseArtifactsPath': { name: 'browseArtifactsPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'canPlayJob': { name: 'canPlayJob'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'cancelable': { name: 'cancelable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'commitPath': { name: 'commitPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'coverage': { name: 'coverage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'createdByTag': { name: 'createdByTag'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'detailedStatus': { name: 'detailedStatus'; type: { kind: 'OBJECT'; name: 'DetailedStatus'; ofType: null; } }; 'downstreamPipeline': { name: 'downstreamPipeline'; type: { kind: 'OBJECT'; name: 'Pipeline'; ofType: null; } }; 'duration': { name: 'duration'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'erasedAt': { name: 'erasedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'failureMessage': { name: 'failureMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'finishedAt': { name: 'finishedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'JobID'; ofType: null; } }; 'kind': { name: 'kind'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CiJobKind'; ofType: null; }; } }; 'manualJob': { name: 'manualJob'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'manualVariables': { name: 'manualVariables'; type: { kind: 'OBJECT'; name: 'CiManualVariableConnection'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'needs': { name: 'needs'; type: { kind: 'OBJECT'; name: 'CiBuildNeedConnection'; ofType: null; } }; 'pipeline': { name: 'pipeline'; type: { kind: 'OBJECT'; name: 'Pipeline'; ofType: null; } }; 'playPath': { name: 'playPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'playable': { name: 'playable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'previousStageJobs': { name: 'previousStageJobs'; type: { kind: 'OBJECT'; name: 'CiJobConnection'; ofType: null; } }; 'previousStageJobsOrNeeds': { name: 'previousStageJobsOrNeeds'; type: { kind: 'OBJECT'; name: 'JobNeedUnionConnection'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'queuedAt': { name: 'queuedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'queuedDuration': { name: 'queuedDuration'; type: { kind: 'SCALAR'; name: 'Duration'; ofType: null; } }; 'refName': { name: 'refName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'refPath': { name: 'refPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'retried': { name: 'retried'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'retryable': { name: 'retryable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'runner': { name: 'runner'; type: { kind: 'OBJECT'; name: 'CiRunner'; ofType: null; } }; 'runnerManager': { name: 'runnerManager'; type: { kind: 'OBJECT'; name: 'CiRunnerManager'; ofType: null; } }; 'scheduled': { name: 'scheduled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'scheduledAt': { name: 'scheduledAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'schedulingType': { name: 'schedulingType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shortSha': { name: 'shortSha'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'stage': { name: 'stage'; type: { kind: 'OBJECT'; name: 'CiStage'; ofType: null; } }; 'startedAt': { name: 'startedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'CiJobStatus'; ofType: null; } }; 'stuck': { name: 'stuck'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'tags': { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'trace': { name: 'trace'; type: { kind: 'OBJECT'; name: 'CiJobTrace'; ofType: null; } }; 'triggered': { name: 'triggered'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'JobPermissions'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CiJobArtifact': { kind: 'OBJECT'; name: 'CiJobArtifact'; fields: { 'downloadPath': { name: 'downloadPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'expireAt': { name: 'expireAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'fileType': { name: 'fileType'; type: { kind: 'ENUM'; name: 'JobArtifactFileType'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiJobArtifactID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'size': { name: 'size'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; }; };
    'CiJobArtifactConnection': { kind: 'OBJECT'; name: 'CiJobArtifactConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiJobArtifactEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiJobArtifact'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiJobArtifactEdge': { kind: 'OBJECT'; name: 'CiJobArtifactEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiJobArtifact'; ofType: null; } }; }; };
    'CiJobArtifactID': unknown;
    'CiJobConnection': { kind: 'OBJECT'; name: 'CiJobConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiJobEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiJob'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiJobEdge': { kind: 'OBJECT'; name: 'CiJobEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiJob'; ofType: null; } }; }; };
    'CiJobFailureReason': { kind: 'ENUM'; name: 'CiJobFailureReason'; type: 'UNKNOWN_FAILURE' | 'SCRIPT_FAILURE' | 'API_FAILURE' | 'STUCK_OR_TIMEOUT_FAILURE' | 'RUNNER_SYSTEM_FAILURE' | 'MISSING_DEPENDENCY_FAILURE' | 'RUNNER_UNSUPPORTED' | 'STALE_SCHEDULE' | 'JOB_EXECUTION_TIMEOUT' | 'ARCHIVED_FAILURE' | 'UNMET_PREREQUISITES' | 'SCHEDULER_FAILURE' | 'DATA_INTEGRITY_FAILURE' | 'FORWARD_DEPLOYMENT_FAILURE' | 'USER_BLOCKED' | 'PROJECT_DELETED' | 'CI_QUOTA_EXCEEDED' | 'PIPELINE_LOOP_DETECTED' | 'NO_MATCHING_RUNNER' | 'TRACE_SIZE_EXCEEDED' | 'BUILDS_DISABLED' | 'ENVIRONMENT_CREATION_FAILURE' | 'DEPLOYMENT_REJECTED' | 'FAILED_OUTDATED_DEPLOYMENT_JOB' | 'PROTECTED_ENVIRONMENT_FAILURE' | 'INSUFFICIENT_BRIDGE_PERMISSIONS' | 'DOWNSTREAM_BRIDGE_PROJECT_NOT_FOUND' | 'INVALID_BRIDGE_TRIGGER' | 'UPSTREAM_BRIDGE_PROJECT_NOT_FOUND' | 'INSUFFICIENT_UPSTREAM_PERMISSIONS' | 'BRIDGE_PIPELINE_IS_CHILD_PIPELINE' | 'DOWNSTREAM_PIPELINE_CREATION_FAILED' | 'SECRETS_PROVIDER_NOT_FOUND' | 'REACHED_MAX_DESCENDANT_PIPELINES_DEPTH' | 'IP_RESTRICTION_FAILURE' | 'REACHED_MAX_PIPELINE_HIERARCHY_SIZE' | 'REACHED_DOWNSTREAM_PIPELINE_TRIGGER_RATE_LIMIT'; };
    'CiJobKind': { kind: 'ENUM'; name: 'CiJobKind'; type: 'BUILD' | 'BRIDGE'; };
    'CiJobStatus': { kind: 'ENUM'; name: 'CiJobStatus'; type: 'CREATED' | 'WAITING_FOR_RESOURCE' | 'PREPARING' | 'WAITING_FOR_CALLBACK' | 'PENDING' | 'RUNNING' | 'SUCCESS' | 'FAILED' | 'CANCELING' | 'CANCELED' | 'SKIPPED' | 'MANUAL' | 'SCHEDULED'; };
    'CiJobTokenScopeAddGroupOrProjectInput': { kind: 'INPUT_OBJECT'; name: 'CiJobTokenScopeAddGroupOrProjectInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'targetPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'CiJobTokenScopeAddGroupOrProjectPayload': { kind: 'OBJECT'; name: 'CiJobTokenScopeAddGroupOrProjectPayload'; fields: { 'ciJobTokenScope': { name: 'ciJobTokenScope'; type: { kind: 'OBJECT'; name: 'CiJobTokenScopeType'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CiJobTokenScopeAddProjectInput': { kind: 'INPUT_OBJECT'; name: 'CiJobTokenScopeAddProjectInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'targetProjectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'CiJobTokenScopeAddProjectPayload': { kind: 'OBJECT'; name: 'CiJobTokenScopeAddProjectPayload'; fields: { 'ciJobTokenScope': { name: 'ciJobTokenScope'; type: { kind: 'OBJECT'; name: 'CiJobTokenScopeType'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CiJobTokenScopeDirection': { kind: 'ENUM'; name: 'CiJobTokenScopeDirection'; type: 'OUTBOUND' | 'INBOUND'; };
    'CiJobTokenScopeRemoveGroupInput': { kind: 'INPUT_OBJECT'; name: 'CiJobTokenScopeRemoveGroupInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'targetGroupPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'CiJobTokenScopeRemoveGroupPayload': { kind: 'OBJECT'; name: 'CiJobTokenScopeRemoveGroupPayload'; fields: { 'ciJobTokenScope': { name: 'ciJobTokenScope'; type: { kind: 'OBJECT'; name: 'CiJobTokenScopeType'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CiJobTokenScopeRemoveProjectInput': { kind: 'INPUT_OBJECT'; name: 'CiJobTokenScopeRemoveProjectInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'targetProjectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'CiJobTokenScopeRemoveProjectPayload': { kind: 'OBJECT'; name: 'CiJobTokenScopeRemoveProjectPayload'; fields: { 'ciJobTokenScope': { name: 'ciJobTokenScope'; type: { kind: 'OBJECT'; name: 'CiJobTokenScopeType'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CiJobTokenScopeType': { kind: 'OBJECT'; name: 'CiJobTokenScopeType'; fields: { 'groupsAllowlist': { name: 'groupsAllowlist'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupConnection'; ofType: null; }; } }; 'groupsAllowlistCount': { name: 'groupsAllowlistCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'inboundAllowlist': { name: 'inboundAllowlist'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; }; } }; 'inboundAllowlistCount': { name: 'inboundAllowlistCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'outboundAllowlist': { name: 'outboundAllowlist'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; }; } }; 'projects': { name: 'projects'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; }; } }; }; };
    'CiJobTrace': { kind: 'OBJECT'; name: 'CiJobTrace'; fields: { 'htmlSummary': { name: 'htmlSummary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CiJobsDurationStatistics': { kind: 'OBJECT'; name: 'CiJobsDurationStatistics'; fields: { 'p50': { name: 'p50'; type: { kind: 'SCALAR'; name: 'Duration'; ofType: null; } }; 'p75': { name: 'p75'; type: { kind: 'SCALAR'; name: 'Duration'; ofType: null; } }; 'p90': { name: 'p90'; type: { kind: 'SCALAR'; name: 'Duration'; ofType: null; } }; 'p95': { name: 'p95'; type: { kind: 'SCALAR'; name: 'Duration'; ofType: null; } }; 'p99': { name: 'p99'; type: { kind: 'SCALAR'; name: 'Duration'; ofType: null; } }; }; };
    'CiJobsStatistics': { kind: 'OBJECT'; name: 'CiJobsStatistics'; fields: { 'queuedDuration': { name: 'queuedDuration'; type: { kind: 'OBJECT'; name: 'CiJobsDurationStatistics'; ofType: null; } }; }; };
    'CiManualVariable': { kind: 'OBJECT'; name: 'CiManualVariable'; fields: { 'environmentScope': { name: 'environmentScope'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'raw': { name: 'raw'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'variableType': { name: 'variableType'; type: { kind: 'ENUM'; name: 'CiVariableType'; ofType: null; } }; }; };
    'CiManualVariableConnection': { kind: 'OBJECT'; name: 'CiManualVariableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiManualVariableEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiManualVariable'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiManualVariableEdge': { kind: 'OBJECT'; name: 'CiManualVariableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiManualVariable'; ofType: null; } }; }; };
    'CiMinutesNamespaceMonthlyUsage': { kind: 'OBJECT'; name: 'CiMinutesNamespaceMonthlyUsage'; fields: { 'minutes': { name: 'minutes'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'month': { name: 'month'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'monthIso8601': { name: 'monthIso8601'; type: { kind: 'SCALAR'; name: 'ISO8601Date'; ofType: null; } }; 'projects': { name: 'projects'; type: { kind: 'OBJECT'; name: 'CiMinutesProjectMonthlyUsageConnection'; ofType: null; } }; 'sharedRunnersDuration': { name: 'sharedRunnersDuration'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'CiMinutesNamespaceMonthlyUsageConnection': { kind: 'OBJECT'; name: 'CiMinutesNamespaceMonthlyUsageConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiMinutesNamespaceMonthlyUsageEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiMinutesNamespaceMonthlyUsage'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiMinutesNamespaceMonthlyUsageEdge': { kind: 'OBJECT'; name: 'CiMinutesNamespaceMonthlyUsageEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiMinutesNamespaceMonthlyUsage'; ofType: null; } }; }; };
    'CiMinutesProjectMonthlyUsage': { kind: 'OBJECT'; name: 'CiMinutesProjectMonthlyUsage'; fields: { 'minutes': { name: 'minutes'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'sharedRunnersDuration': { name: 'sharedRunnersDuration'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'CiMinutesProjectMonthlyUsageConnection': { kind: 'OBJECT'; name: 'CiMinutesProjectMonthlyUsageConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiMinutesProjectMonthlyUsageEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiMinutesProjectMonthlyUsage'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiMinutesProjectMonthlyUsageEdge': { kind: 'OBJECT'; name: 'CiMinutesProjectMonthlyUsageEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiMinutesProjectMonthlyUsage'; ofType: null; } }; }; };
    'CiPipelineID': unknown;
    'CiPipelineScheduleID': unknown;
    'CiPipelineScheduleVariableID': unknown;
    'CiProcessableID': unknown;
    'CiProjectVariable': { kind: 'OBJECT'; name: 'CiProjectVariable'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'environmentScope': { name: 'environmentScope'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hidden': { name: 'hidden'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'masked': { name: 'masked'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'protected': { name: 'protected'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'raw': { name: 'raw'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'variableType': { name: 'variableType'; type: { kind: 'ENUM'; name: 'CiVariableType'; ofType: null; } }; }; };
    'CiProjectVariableConnection': { kind: 'OBJECT'; name: 'CiProjectVariableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiProjectVariableEdge'; ofType: null; }; } }; 'limit': { name: 'limit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiProjectVariable'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiProjectVariableEdge': { kind: 'OBJECT'; name: 'CiProjectVariableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiProjectVariable'; ofType: null; } }; }; };
    'CiRunner': { kind: 'OBJECT'; name: 'CiRunner'; fields: { 'accessLevel': { name: 'accessLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CiRunnerAccessLevel'; ofType: null; }; } }; 'active': { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'adminUrl': { name: 'adminUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'architectureName': { name: 'architectureName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'contactedAt': { name: 'contactedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'createdBy': { name: 'createdBy'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'editAdminUrl': { name: 'editAdminUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'ephemeralAuthenticationToken': { name: 'ephemeralAuthenticationToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'ephemeralRegisterUrl': { name: 'ephemeralRegisterUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'executorName': { name: 'executorName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'groups': { name: 'groups'; type: { kind: 'OBJECT'; name: 'GroupConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiRunnerID'; ofType: null; }; } }; 'ipAddress': { name: 'ipAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'jobCount': { name: 'jobCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'jobExecutionStatus': { name: 'jobExecutionStatus'; type: { kind: 'ENUM'; name: 'CiRunnerJobExecutionStatus'; ofType: null; } }; 'jobs': { name: 'jobs'; type: { kind: 'OBJECT'; name: 'CiJobConnection'; ofType: null; } }; 'locked': { name: 'locked'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'maintenanceNote': { name: 'maintenanceNote'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'maintenanceNoteHtml': { name: 'maintenanceNoteHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'managers': { name: 'managers'; type: { kind: 'OBJECT'; name: 'CiRunnerManagerConnection'; ofType: null; } }; 'maximumTimeout': { name: 'maximumTimeout'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'ownerProject': { name: 'ownerProject'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'paused': { name: 'paused'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'platformName': { name: 'platformName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateProjectsMinutesCostFactor': { name: 'privateProjectsMinutesCostFactor'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'projectCount': { name: 'projectCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'projects': { name: 'projects'; type: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; } }; 'publicProjectsMinutesCostFactor': { name: 'publicProjectsMinutesCostFactor'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'registerAdminUrl': { name: 'registerAdminUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'revision': { name: 'revision'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'runUntagged': { name: 'runUntagged'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'runnerType': { name: 'runnerType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CiRunnerType'; ofType: null; }; } }; 'shortSha': { name: 'shortSha'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CiRunnerStatus'; ofType: null; }; } }; 'tagList': { name: 'tagList'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'tokenExpiresAt': { name: 'tokenExpiresAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'upgradeStatus': { name: 'upgradeStatus'; type: { kind: 'ENUM'; name: 'CiRunnerUpgradeStatus'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RunnerPermissions'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CiRunnerAccessLevel': { kind: 'ENUM'; name: 'CiRunnerAccessLevel'; type: 'NOT_PROTECTED' | 'REF_PROTECTED'; };
    'CiRunnerCloudProvider': { kind: 'ENUM'; name: 'CiRunnerCloudProvider'; type: 'GOOGLE_CLOUD'; };
    'CiRunnerCloudProvisioning': { kind: 'UNION'; name: 'CiRunnerCloudProvisioning'; fields: {}; possibleTypes: 'CiRunnerGoogleCloudProvisioning'; };
    'CiRunnerCloudProvisioningStep': { kind: 'OBJECT'; name: 'CiRunnerCloudProvisioningStep'; fields: { 'instructions': { name: 'instructions'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'languageIdentifier': { name: 'languageIdentifier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CiRunnerConnection': { kind: 'OBJECT'; name: 'CiRunnerConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiRunnerEdge'; ofType: null; }; } }; 'jobsStatistics': { name: 'jobsStatistics'; type: { kind: 'OBJECT'; name: 'CiJobsStatistics'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiRunner'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiRunnerEdge': { kind: 'OBJECT'; name: 'CiRunnerEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'editUrl': { name: 'editUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiRunner'; ofType: null; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CiRunnerGoogleCloudProvisioning': { kind: 'OBJECT'; name: 'CiRunnerGoogleCloudProvisioning'; fields: { 'projectSetupShellScript': { name: 'projectSetupShellScript'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'provisioningSteps': { name: 'provisioningSteps'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CiRunnerCloudProvisioningStep'; ofType: null; }; }; } }; }; };
    'CiRunnerID': unknown;
    'CiRunnerJobExecutionStatus': { kind: 'ENUM'; name: 'CiRunnerJobExecutionStatus'; type: 'IDLE' | 'RUNNING'; };
    'CiRunnerManager': { kind: 'OBJECT'; name: 'CiRunnerManager'; fields: { 'architectureName': { name: 'architectureName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'contactedAt': { name: 'contactedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'executorName': { name: 'executorName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiRunnerManagerID'; ofType: null; }; } }; 'ipAddress': { name: 'ipAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'jobExecutionStatus': { name: 'jobExecutionStatus'; type: { kind: 'ENUM'; name: 'CiRunnerJobExecutionStatus'; ofType: null; } }; 'platformName': { name: 'platformName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'revision': { name: 'revision'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'runner': { name: 'runner'; type: { kind: 'OBJECT'; name: 'CiRunner'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CiRunnerStatus'; ofType: null; }; } }; 'systemId': { name: 'systemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'upgradeStatus': { name: 'upgradeStatus'; type: { kind: 'ENUM'; name: 'CiRunnerUpgradeStatus'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CiRunnerManagerConnection': { kind: 'OBJECT'; name: 'CiRunnerManagerConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiRunnerManagerEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiRunnerManager'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiRunnerManagerEdge': { kind: 'OBJECT'; name: 'CiRunnerManagerEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiRunnerManager'; ofType: null; } }; }; };
    'CiRunnerManagerID': unknown;
    'CiRunnerMembershipFilter': { kind: 'ENUM'; name: 'CiRunnerMembershipFilter'; type: 'DIRECT' | 'DESCENDANTS' | 'ALL_AVAILABLE'; };
    'CiRunnerSort': { kind: 'ENUM'; name: 'CiRunnerSort'; type: 'CONTACTED_ASC' | 'CONTACTED_DESC' | 'CREATED_ASC' | 'CREATED_DESC' | 'TOKEN_EXPIRES_AT_ASC' | 'TOKEN_EXPIRES_AT_DESC' | 'MOST_ACTIVE_DESC'; };
    'CiRunnerStatus': { kind: 'ENUM'; name: 'CiRunnerStatus'; type: 'ACTIVE' | 'PAUSED' | 'ONLINE' | 'OFFLINE' | 'STALE' | 'NEVER_CONTACTED'; };
    'CiRunnerType': { kind: 'ENUM'; name: 'CiRunnerType'; type: 'INSTANCE_TYPE' | 'GROUP_TYPE' | 'PROJECT_TYPE'; };
    'CiRunnerUpgradeStatus': { kind: 'ENUM'; name: 'CiRunnerUpgradeStatus'; type: 'INVALID' | 'NOT_AVAILABLE' | 'AVAILABLE' | 'RECOMMENDED'; };
    'CiRunnerUsage': { kind: 'OBJECT'; name: 'CiRunnerUsage'; fields: { 'ciBuildCount': { name: 'ciBuildCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'ciMinutesUsed': { name: 'ciMinutesUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'runner': { name: 'runner'; type: { kind: 'OBJECT'; name: 'CiRunner'; ofType: null; } }; }; };
    'CiRunnerUsageByProject': { kind: 'OBJECT'; name: 'CiRunnerUsageByProject'; fields: { 'ciBuildCount': { name: 'ciBuildCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'ciMinutesUsed': { name: 'ciMinutesUsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; }; };
    'CiSecureFileRegistry': { kind: 'OBJECT'; name: 'CiSecureFileRegistry'; fields: { 'ciSecureFileId': { name: 'ciSecureFileId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSyncFailure': { name: 'lastSyncFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSyncedAt': { name: 'lastSyncedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryAt': { name: 'retryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryCount': { name: 'retryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'RegistryState'; ofType: null; } }; 'verificationChecksum': { name: 'verificationChecksum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationFailure': { name: 'verificationFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationRetryAt': { name: 'verificationRetryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationRetryCount': { name: 'verificationRetryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'verificationStartedAt': { name: 'verificationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationState': { name: 'verificationState'; type: { kind: 'ENUM'; name: 'VerificationStateEnum'; ofType: null; } }; 'verifiedAt': { name: 'verifiedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'CiSecureFileRegistryConnection': { kind: 'OBJECT'; name: 'CiSecureFileRegistryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiSecureFileRegistryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiSecureFileRegistry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiSecureFileRegistryEdge': { kind: 'OBJECT'; name: 'CiSecureFileRegistryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiSecureFileRegistry'; ofType: null; } }; }; };
    'CiStage': { kind: 'OBJECT'; name: 'CiStage'; fields: { 'detailedStatus': { name: 'detailedStatus'; type: { kind: 'OBJECT'; name: 'DetailedStatus'; ofType: null; } }; 'groups': { name: 'groups'; type: { kind: 'OBJECT'; name: 'CiGroupConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'jobs': { name: 'jobs'; type: { kind: 'OBJECT'; name: 'CiJobConnection'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CiStageConnection': { kind: 'OBJECT'; name: 'CiStageConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiStageEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiStage'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiStageEdge': { kind: 'OBJECT'; name: 'CiStageEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiStage'; ofType: null; } }; }; };
    'CiStageID': unknown;
    'CiSubscriptionsProject': { kind: 'OBJECT'; name: 'CiSubscriptionsProject'; fields: { 'author': { name: 'author'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'downstreamProject': { name: 'downstreamProject'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'CiSubscriptionsProjectID'; ofType: null; } }; 'upstreamProject': { name: 'upstreamProject'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; }; };
    'CiSubscriptionsProjectConnection': { kind: 'OBJECT'; name: 'CiSubscriptionsProjectConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiSubscriptionsProjectEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CiSubscriptionsProject'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CiSubscriptionsProjectEdge': { kind: 'OBJECT'; name: 'CiSubscriptionsProjectEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CiSubscriptionsProject'; ofType: null; } }; }; };
    'CiSubscriptionsProjectID': unknown;
    'CiTemplate': { kind: 'OBJECT'; name: 'CiTemplate'; fields: { 'content': { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CiTriggerID': unknown;
    'CiVariable': { kind: 'INTERFACE'; name: 'CiVariable'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'raw': { name: 'raw'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'variableType': { name: 'variableType'; type: { kind: 'ENUM'; name: 'CiVariableType'; ofType: null; } }; }; possibleTypes: 'CiGroupVariable' | 'CiInstanceVariable' | 'CiManualVariable' | 'CiProjectVariable' | 'PipelineScheduleVariable'; };
    'CiVariableInput': { kind: 'INPUT_OBJECT'; name: 'CiVariableInput'; inputFields: [{ name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CiVariableSort': { kind: 'ENUM'; name: 'CiVariableSort'; type: 'KEY_ASC' | 'KEY_DESC'; };
    'CiVariableType': { kind: 'ENUM'; name: 'CiVariableType'; type: 'ENV_VAR' | 'FILE'; };
    'ClusterAgent': { kind: 'OBJECT'; name: 'ClusterAgent'; fields: { 'activityEvents': { name: 'activityEvents'; type: { kind: 'OBJECT'; name: 'ClusterAgentActivityEventConnection'; ofType: null; } }; 'connections': { name: 'connections'; type: { kind: 'OBJECT'; name: 'ConnectedAgentConnection'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'createdByUser': { name: 'createdByUser'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'tokens': { name: 'tokens'; type: { kind: 'OBJECT'; name: 'ClusterAgentTokenConnection'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'vulnerabilityImages': { name: 'vulnerabilityImages'; type: { kind: 'OBJECT'; name: 'VulnerabilityContainerImageConnection'; ofType: null; } }; 'webPath': { name: 'webPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'workspaces': { name: 'workspaces'; type: { kind: 'OBJECT'; name: 'WorkspaceConnection'; ofType: null; } }; }; };
    'ClusterAgentActivityEvent': { kind: 'OBJECT'; name: 'ClusterAgentActivityEvent'; fields: { 'agentToken': { name: 'agentToken'; type: { kind: 'OBJECT'; name: 'ClusterAgentToken'; ofType: null; } }; 'kind': { name: 'kind'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'level': { name: 'level'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'recordedAt': { name: 'recordedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; }; };
    'ClusterAgentActivityEventConnection': { kind: 'OBJECT'; name: 'ClusterAgentActivityEventConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ClusterAgentActivityEventEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ClusterAgentActivityEvent'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ClusterAgentActivityEventEdge': { kind: 'OBJECT'; name: 'ClusterAgentActivityEventEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ClusterAgentActivityEvent'; ofType: null; } }; }; };
    'ClusterAgentAuthorizationCiAccess': { kind: 'OBJECT'; name: 'ClusterAgentAuthorizationCiAccess'; fields: { 'agent': { name: 'agent'; type: { kind: 'OBJECT'; name: 'ClusterAgent'; ofType: null; } }; 'config': { name: 'config'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; }; };
    'ClusterAgentAuthorizationCiAccessConnection': { kind: 'OBJECT'; name: 'ClusterAgentAuthorizationCiAccessConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ClusterAgentAuthorizationCiAccessEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ClusterAgentAuthorizationCiAccess'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ClusterAgentAuthorizationCiAccessEdge': { kind: 'OBJECT'; name: 'ClusterAgentAuthorizationCiAccessEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ClusterAgentAuthorizationCiAccess'; ofType: null; } }; }; };
    'ClusterAgentAuthorizationUserAccess': { kind: 'OBJECT'; name: 'ClusterAgentAuthorizationUserAccess'; fields: { 'agent': { name: 'agent'; type: { kind: 'OBJECT'; name: 'ClusterAgent'; ofType: null; } }; 'config': { name: 'config'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; }; };
    'ClusterAgentAuthorizationUserAccessConnection': { kind: 'OBJECT'; name: 'ClusterAgentAuthorizationUserAccessConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ClusterAgentAuthorizationUserAccessEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ClusterAgentAuthorizationUserAccess'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ClusterAgentAuthorizationUserAccessEdge': { kind: 'OBJECT'; name: 'ClusterAgentAuthorizationUserAccessEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ClusterAgentAuthorizationUserAccess'; ofType: null; } }; }; };
    'ClusterAgentConnection': { kind: 'OBJECT'; name: 'ClusterAgentConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ClusterAgentEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ClusterAgent'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ClusterAgentDeleteInput': { kind: 'INPUT_OBJECT'; name: 'ClusterAgentDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ClustersAgentID'; ofType: null; }; }; defaultValue: null }]; };
    'ClusterAgentDeletePayload': { kind: 'OBJECT'; name: 'ClusterAgentDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'ClusterAgentEdge': { kind: 'OBJECT'; name: 'ClusterAgentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ClusterAgent'; ofType: null; } }; }; };
    'ClusterAgentToken': { kind: 'OBJECT'; name: 'ClusterAgentToken'; fields: { 'clusterAgent': { name: 'clusterAgent'; type: { kind: 'OBJECT'; name: 'ClusterAgent'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'createdByUser': { name: 'createdByUser'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ClustersAgentTokenID'; ofType: null; }; } }; 'lastUsedAt': { name: 'lastUsedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'AgentTokenStatus'; ofType: null; } }; }; };
    'ClusterAgentTokenConnection': { kind: 'OBJECT'; name: 'ClusterAgentTokenConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ClusterAgentTokenEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ClusterAgentToken'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ClusterAgentTokenCreateInput': { kind: 'INPUT_OBJECT'; name: 'ClusterAgentTokenCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'clusterAgentId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ClustersAgentID'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'ClusterAgentTokenCreatePayload': { kind: 'OBJECT'; name: 'ClusterAgentTokenCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'secret': { name: 'secret'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'OBJECT'; name: 'ClusterAgentToken'; ofType: null; } }; }; };
    'ClusterAgentTokenEdge': { kind: 'OBJECT'; name: 'ClusterAgentTokenEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ClusterAgentToken'; ofType: null; } }; }; };
    'ClusterAgentTokenRevokeInput': { kind: 'INPUT_OBJECT'; name: 'ClusterAgentTokenRevokeInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ClustersAgentTokenID'; ofType: null; }; }; defaultValue: null }]; };
    'ClusterAgentTokenRevokePayload': { kind: 'OBJECT'; name: 'ClusterAgentTokenRevokePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'ClustersAgentID': unknown;
    'ClustersAgentTokenID': unknown;
    'ClustersClusterID': unknown;
    'CodeCoverageActivity': { kind: 'OBJECT'; name: 'CodeCoverageActivity'; fields: { 'averageCoverage': { name: 'averageCoverage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'coverageCount': { name: 'coverageCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'date': { name: 'date'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; } }; 'projectCount': { name: 'projectCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'CodeCoverageActivityConnection': { kind: 'OBJECT'; name: 'CodeCoverageActivityConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CodeCoverageActivityEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CodeCoverageActivity'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CodeCoverageActivityEdge': { kind: 'OBJECT'; name: 'CodeCoverageActivityEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CodeCoverageActivity'; ofType: null; } }; }; };
    'CodeCoverageSummary': { kind: 'OBJECT'; name: 'CodeCoverageSummary'; fields: { 'averageCoverage': { name: 'averageCoverage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'coverageCount': { name: 'coverageCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'lastUpdatedOn': { name: 'lastUpdatedOn'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; }; };
    'CodeQualityDegradation': { kind: 'OBJECT'; name: 'CodeQualityDegradation'; fields: { 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'engineName': { name: 'engineName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'fingerprint': { name: 'fingerprint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'line': { name: 'line'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'severity': { name: 'severity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CodeQualityDegradationSeverity'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CodeQualityDegradationConnection': { kind: 'OBJECT'; name: 'CodeQualityDegradationConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CodeQualityDegradationEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CodeQualityDegradation'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CodeQualityDegradationEdge': { kind: 'OBJECT'; name: 'CodeQualityDegradationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CodeQualityDegradation'; ofType: null; } }; }; };
    'CodeQualityDegradationSeverity': { kind: 'ENUM'; name: 'CodeQualityDegradationSeverity'; type: 'BLOCKER' | 'CRITICAL' | 'MAJOR' | 'MINOR' | 'INFO' | 'UNKNOWN'; };
    'CodeQualityReportSummary': { kind: 'OBJECT'; name: 'CodeQualityReportSummary'; fields: { 'blocker': { name: 'blocker'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'count': { name: 'count'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'critical': { name: 'critical'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'info': { name: 'info'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'major': { name: 'major'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'minor': { name: 'minor'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'unknown': { name: 'unknown'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'CodequalityReportsComparer': { kind: 'OBJECT'; name: 'CodequalityReportsComparer'; fields: { 'report': { name: 'report'; type: { kind: 'OBJECT'; name: 'CodequalityReportsComparerReport'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'CodequalityReportsComparerReportGenerationStatus'; ofType: null; } }; }; };
    'CodequalityReportsComparerReport': { kind: 'OBJECT'; name: 'CodequalityReportsComparerReport'; fields: { 'existingErrors': { name: 'existingErrors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CodequalityReportsComparerReportDegradation'; ofType: null; }; }; } }; 'newErrors': { name: 'newErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CodequalityReportsComparerReportDegradation'; ofType: null; }; }; }; } }; 'resolvedErrors': { name: 'resolvedErrors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CodequalityReportsComparerReportDegradation'; ofType: null; }; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CodequalityReportsComparerStatus'; ofType: null; }; } }; 'summary': { name: 'summary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CodequalityReportsComparerReportSummary'; ofType: null; }; } }; }; };
    'CodequalityReportsComparerReportDegradation': { kind: 'OBJECT'; name: 'CodequalityReportsComparerReportDegradation'; fields: { 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'engineName': { name: 'engineName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'filePath': { name: 'filePath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'fingerprint': { name: 'fingerprint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'line': { name: 'line'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'severity': { name: 'severity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CodeQualityDegradationSeverity'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CodequalityReportsComparerReportGenerationStatus': { kind: 'ENUM'; name: 'CodequalityReportsComparerReportGenerationStatus'; type: 'PARSED' | 'PARSING' | 'ERROR'; };
    'CodequalityReportsComparerReportSummary': { kind: 'OBJECT'; name: 'CodequalityReportsComparerReportSummary'; fields: { 'errored': { name: 'errored'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'resolved': { name: 'resolved'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'total': { name: 'total'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'CodequalityReportsComparerStatus': { kind: 'ENUM'; name: 'CodequalityReportsComparerStatus'; type: 'SUCCESS' | 'FAILED' | 'NOT_FOUND'; };
    'Color': unknown;
    'Commit': { kind: 'OBJECT'; name: 'Commit'; fields: { 'author': { name: 'author'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'authorEmail': { name: 'authorEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'authorGravatar': { name: 'authorGravatar'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'authorName': { name: 'authorName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'authoredDate': { name: 'authoredDate'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'committedDate': { name: 'committedDate'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'committerEmail': { name: 'committerEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'committerName': { name: 'committerName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'diffs': { name: 'diffs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Diff'; ofType: null; }; }; } }; 'fullTitle': { name: 'fullTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fullTitleHtml': { name: 'fullTitleHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'pipelines': { name: 'pipelines'; type: { kind: 'OBJECT'; name: 'PipelineConnection'; ofType: null; } }; 'sha': { name: 'sha'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'shortId': { name: 'shortId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'signature': { name: 'signature'; type: { kind: 'INTERFACE'; name: 'CommitSignature'; ofType: null; } }; 'signatureHtml': { name: 'signatureHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'titleHtml': { name: 'titleHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CommitAction': { kind: 'INPUT_OBJECT'; name: 'CommitAction'; inputFields: [{ name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CommitActionMode'; ofType: null; }; }; defaultValue: null }, { name: 'content'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'encoding'; type: { kind: 'ENUM'; name: 'CommitEncoding'; ofType: null; }; defaultValue: null }, { name: 'executeFilemode'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'filePath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'lastCommitId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'previousPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CommitActionMode': { kind: 'ENUM'; name: 'CommitActionMode'; type: 'CREATE' | 'DELETE' | 'MOVE' | 'UPDATE' | 'CHMOD'; };
    'CommitConnection': { kind: 'OBJECT'; name: 'CommitConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CommitEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Commit'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CommitCreateInput': { kind: 'INPUT_OBJECT'; name: 'CommitCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'branch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'startBranch'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'actions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CommitAction'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'CommitCreatePayload': { kind: 'OBJECT'; name: 'CommitCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'commit': { name: 'commit'; type: { kind: 'OBJECT'; name: 'Commit'; ofType: null; } }; 'commitPipelinePath': { name: 'commitPipelinePath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'content': { name: 'content'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CommitData': { kind: 'OBJECT'; name: 'CommitData'; fields: { 'ageMapClass': { name: 'ageMapClass'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'authorAvatar': { name: 'authorAvatar'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'commitAuthorLink': { name: 'commitAuthorLink'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'commitLink': { name: 'commitLink'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'projectBlameLink': { name: 'projectBlameLink'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'timeAgoTooltip': { name: 'timeAgoTooltip'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CommitEdge': { kind: 'OBJECT'; name: 'CommitEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Commit'; ofType: null; } }; }; };
    'CommitEncoding': { kind: 'ENUM'; name: 'CommitEncoding'; type: 'TEXT' | 'BASE64'; };
    'CommitParentNames': { kind: 'OBJECT'; name: 'CommitParentNames'; fields: { 'names': { name: 'names'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; }; };
    'CommitReferences': { kind: 'OBJECT'; name: 'CommitReferences'; fields: { 'containingBranches': { name: 'containingBranches'; type: { kind: 'OBJECT'; name: 'CommitParentNames'; ofType: null; } }; 'containingTags': { name: 'containingTags'; type: { kind: 'OBJECT'; name: 'CommitParentNames'; ofType: null; } }; 'tippingBranches': { name: 'tippingBranches'; type: { kind: 'OBJECT'; name: 'CommitParentNames'; ofType: null; } }; 'tippingTags': { name: 'tippingTags'; type: { kind: 'OBJECT'; name: 'CommitParentNames'; ofType: null; } }; }; };
    'CommitSignature': { kind: 'INTERFACE'; name: 'CommitSignature'; fields: { 'commitSha': { name: 'commitSha'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'verificationStatus': { name: 'verificationStatus'; type: { kind: 'ENUM'; name: 'VerificationStatus'; ofType: null; } }; }; possibleTypes: 'GpgSignature' | 'SshSignature' | 'X509Signature'; };
    'ComparableSecurityReportType': { kind: 'ENUM'; name: 'ComparableSecurityReportType'; type: 'SAST' | 'SECRET_DETECTION' | 'CONTAINER_SCANNING' | 'DEPENDENCY_SCANNING' | 'DAST' | 'COVERAGE_FUZZING' | 'API_FUZZING'; };
    'ComparedSecurityReport': { kind: 'OBJECT'; name: 'ComparedSecurityReport'; fields: { 'added': { name: 'added'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ComparedSecurityReportFinding'; ofType: null; }; }; } }; 'baseReportCreatedAt': { name: 'baseReportCreatedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'baseReportOutOfDate': { name: 'baseReportOutOfDate'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'fixed': { name: 'fixed'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ComparedSecurityReportFinding'; ofType: null; }; }; } }; 'headReportCreatedAt': { name: 'headReportCreatedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'ComparedSecurityReportFinding': { kind: 'OBJECT'; name: 'ComparedSecurityReportFinding'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'foundByPipelineIid': { name: 'foundByPipelineIid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'identifiers': { name: 'identifiers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityIdentifier'; ofType: null; }; }; } }; 'location': { name: 'location'; type: { kind: 'UNION'; name: 'VulnerabilityLocation'; ofType: null; } }; 'scanner': { name: 'scanner'; type: { kind: 'OBJECT'; name: 'ComparedSecurityReportScanner'; ofType: null; } }; 'severity': { name: 'severity'; type: { kind: 'ENUM'; name: 'VulnerabilitySeverity'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'VulnerabilityState'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'uuid': { name: 'uuid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ComparedSecurityReportScanner': { kind: 'OBJECT'; name: 'ComparedSecurityReportScanner'; fields: { 'externalId': { name: 'externalId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'vendor': { name: 'vendor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ComplianceFramework': { kind: 'OBJECT'; name: 'ComplianceFramework'; fields: { 'color': { name: 'color'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'default': { name: 'default'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'pipelineConfigurationFullPath': { name: 'pipelineConfigurationFullPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'projects': { name: 'projects'; type: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; } }; 'scanExecutionPolicies': { name: 'scanExecutionPolicies'; type: { kind: 'OBJECT'; name: 'ScanExecutionPolicyConnection'; ofType: null; } }; 'scanResultPolicies': { name: 'scanResultPolicies'; type: { kind: 'OBJECT'; name: 'ScanResultPolicyConnection'; ofType: null; } }; }; };
    'ComplianceFrameworkConnection': { kind: 'OBJECT'; name: 'ComplianceFrameworkConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ComplianceFrameworkEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ComplianceFramework'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ComplianceFrameworkEdge': { kind: 'OBJECT'; name: 'ComplianceFrameworkEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ComplianceFramework'; ofType: null; } }; }; };
    'ComplianceFrameworkFilters': { kind: 'INPUT_OBJECT'; name: 'ComplianceFrameworkFilters'; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ComplianceManagementFrameworkID'; ofType: null; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'NegatedComplianceFrameworkFilters'; ofType: null; }; defaultValue: null }, { name: 'presenceFilter'; type: { kind: 'ENUM'; name: 'ComplianceFrameworkPresenceFilter'; ofType: null; }; defaultValue: null }]; };
    'ComplianceFrameworkInput': { kind: 'INPUT_OBJECT'; name: 'ComplianceFrameworkInput'; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'color'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'default'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'pipelineConfigurationFullPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ComplianceFrameworkPresenceFilter': { kind: 'ENUM'; name: 'ComplianceFrameworkPresenceFilter'; type: 'NONE' | 'ANY'; };
    'ComplianceManagementFrameworkID': unknown;
    'ComplianceStandardsAdherence': { kind: 'OBJECT'; name: 'ComplianceStandardsAdherence'; fields: { 'checkName': { name: 'checkName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ComplianceStandardsAdherenceCheckName'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'project': { name: 'project'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; } }; 'standard': { name: 'standard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ComplianceStandardsAdherenceStandard'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ComplianceStandardsAdherenceStatus'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'ComplianceStandardsAdherenceCheckName': { kind: 'ENUM'; name: 'ComplianceStandardsAdherenceCheckName'; type: 'PREVENT_APPROVAL_BY_MERGE_REQUEST_AUTHOR' | 'PREVENT_APPROVAL_BY_MERGE_REQUEST_COMMITTERS' | 'AT_LEAST_TWO_APPROVALS' | 'AT_LEAST_ONE_NON_AUTHOR_APPROVAL'; };
    'ComplianceStandardsAdherenceConnection': { kind: 'OBJECT'; name: 'ComplianceStandardsAdherenceConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ComplianceStandardsAdherenceEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ComplianceStandardsAdherence'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ComplianceStandardsAdherenceEdge': { kind: 'OBJECT'; name: 'ComplianceStandardsAdherenceEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ComplianceStandardsAdherence'; ofType: null; } }; }; };
    'ComplianceStandardsAdherenceInput': { kind: 'INPUT_OBJECT'; name: 'ComplianceStandardsAdherenceInput'; inputFields: [{ name: 'projectIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectID'; ofType: null; }; }; }; defaultValue: null }, { name: 'checkName'; type: { kind: 'ENUM'; name: 'ComplianceStandardsAdherenceCheckName'; ofType: null; }; defaultValue: null }, { name: 'standard'; type: { kind: 'ENUM'; name: 'ComplianceStandardsAdherenceStandard'; ofType: null; }; defaultValue: null }]; };
    'ComplianceStandardsAdherenceStandard': { kind: 'ENUM'; name: 'ComplianceStandardsAdherenceStandard'; type: 'GITLAB' | 'SOC2'; };
    'ComplianceStandardsAdherenceStatus': { kind: 'ENUM'; name: 'ComplianceStandardsAdherenceStatus'; type: 'SUCCESS' | 'FAIL'; };
    'ComplianceViolation': { kind: 'OBJECT'; name: 'ComplianceViolation'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; }; } }; 'reason': { name: 'reason'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ComplianceViolationReason'; ofType: null; }; } }; 'severityLevel': { name: 'severityLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ComplianceViolationSeverity'; ofType: null; }; } }; 'violatingUser': { name: 'violatingUser'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; }; };
    'ComplianceViolationConnection': { kind: 'OBJECT'; name: 'ComplianceViolationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ComplianceViolationEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ComplianceViolation'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ComplianceViolationEdge': { kind: 'OBJECT'; name: 'ComplianceViolationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ComplianceViolation'; ofType: null; } }; }; };
    'ComplianceViolationInput': { kind: 'INPUT_OBJECT'; name: 'ComplianceViolationInput'; inputFields: [{ name: 'projectIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectID'; ofType: null; }; }; }; defaultValue: null }, { name: 'mergedBefore'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'mergedAfter'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'targetBranch'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ComplianceViolationReason': { kind: 'ENUM'; name: 'ComplianceViolationReason'; type: 'APPROVED_BY_MERGE_REQUEST_AUTHOR' | 'APPROVED_BY_COMMITTER' | 'APPROVED_BY_INSUFFICIENT_USERS'; };
    'ComplianceViolationSeverity': { kind: 'ENUM'; name: 'ComplianceViolationSeverity'; type: 'INFO' | 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL'; };
    'ComplianceViolationSort': { kind: 'ENUM'; name: 'ComplianceViolationSort'; type: 'SEVERITY_LEVEL_DESC' | 'SEVERITY_LEVEL_ASC' | 'VIOLATION_REASON_DESC' | 'VIOLATION_REASON_ASC' | 'MERGE_REQUEST_TITLE_DESC' | 'MERGE_REQUEST_TITLE_ASC' | 'MERGED_AT_DESC' | 'MERGED_AT_ASC'; };
    'ComposerMetadata': { kind: 'OBJECT'; name: 'ComposerMetadata'; fields: { 'composerJson': { name: 'composerJson'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageComposerJsonType'; ofType: null; }; } }; 'targetSha': { name: 'targetSha'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ConanFileMetadata': { kind: 'OBJECT'; name: 'ConanFileMetadata'; fields: { 'conanFileType': { name: 'conanFileType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ConanMetadatumFileTypeEnum'; ofType: null; }; } }; 'conanPackageReference': { name: 'conanPackageReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesConanFileMetadatumID'; ofType: null; }; } }; 'packageRevision': { name: 'packageRevision'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'recipeRevision': { name: 'recipeRevision'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'ConanMetadata': { kind: 'OBJECT'; name: 'ConanMetadata'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesConanMetadatumID'; ofType: null; }; } }; 'packageChannel': { name: 'packageChannel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'packageUsername': { name: 'packageUsername'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'recipe': { name: 'recipe'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'recipePath': { name: 'recipePath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'ConanMetadatumFileTypeEnum': { kind: 'ENUM'; name: 'ConanMetadatumFileTypeEnum'; type: 'RECIPE_FILE' | 'PACKAGE_FILE'; };
    'ConfigureContainerScanningInput': { kind: 'INPUT_OBJECT'; name: 'ConfigureContainerScanningInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'ConfigureContainerScanningPayload': { kind: 'OBJECT'; name: 'ConfigureContainerScanningPayload'; fields: { 'branch': { name: 'branch'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'successPath': { name: 'successPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ConfigureDependencyScanningInput': { kind: 'INPUT_OBJECT'; name: 'ConfigureDependencyScanningInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'ConfigureDependencyScanningPayload': { kind: 'OBJECT'; name: 'ConfigureDependencyScanningPayload'; fields: { 'branch': { name: 'branch'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'successPath': { name: 'successPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ConfigureSastIacInput': { kind: 'INPUT_OBJECT'; name: 'ConfigureSastIacInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'ConfigureSastIacPayload': { kind: 'OBJECT'; name: 'ConfigureSastIacPayload'; fields: { 'branch': { name: 'branch'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'successPath': { name: 'successPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ConfigureSastInput': { kind: 'INPUT_OBJECT'; name: 'ConfigureSastInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'configuration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SastCiConfigurationInput'; ofType: null; }; }; defaultValue: null }]; };
    'ConfigureSastPayload': { kind: 'OBJECT'; name: 'ConfigureSastPayload'; fields: { 'branch': { name: 'branch'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'successPath': { name: 'successPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ConfigureSecretDetectionInput': { kind: 'INPUT_OBJECT'; name: 'ConfigureSecretDetectionInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'ConfigureSecretDetectionPayload': { kind: 'OBJECT'; name: 'ConfigureSecretDetectionPayload'; fields: { 'branch': { name: 'branch'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'successPath': { name: 'successPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ConnectedAgent': { kind: 'OBJECT'; name: 'ConnectedAgent'; fields: { 'connectedAt': { name: 'connectedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'connectionId': { name: 'connectionId'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'OBJECT'; name: 'AgentMetadata'; ofType: null; } }; }; };
    'ConnectedAgentConnection': { kind: 'OBJECT'; name: 'ConnectedAgentConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ConnectedAgentEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ConnectedAgent'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ConnectedAgentEdge': { kind: 'OBJECT'; name: 'ConnectedAgentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ConnectedAgent'; ofType: null; } }; }; };
    'ContactSort': { kind: 'ENUM'; name: 'ContactSort'; type: 'FIRST_NAME_ASC' | 'FIRST_NAME_DESC' | 'LAST_NAME_ASC' | 'LAST_NAME_DESC' | 'EMAIL_ASC' | 'EMAIL_DESC' | 'PHONE_ASC' | 'PHONE_DESC' | 'DESCRIPTION_ASC' | 'DESCRIPTION_DESC' | 'ORGANIZATION_ASC' | 'ORGANIZATION_DESC' | 'updated_desc' | 'updated_asc' | 'created_desc' | 'created_asc' | 'UPDATED_DESC' | 'UPDATED_ASC' | 'CREATED_DESC' | 'CREATED_ASC'; };
    'ContactStateCounts': { kind: 'OBJECT'; name: 'ContactStateCounts'; fields: { 'active': { name: 'active'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'all': { name: 'all'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'inactive': { name: 'inactive'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'ContainerExpirationPolicy': { kind: 'OBJECT'; name: 'ContainerExpirationPolicy'; fields: { 'cadence': { name: 'cadence'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ContainerExpirationPolicyCadenceEnum'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'keepN': { name: 'keepN'; type: { kind: 'ENUM'; name: 'ContainerExpirationPolicyKeepEnum'; ofType: null; } }; 'nameRegex': { name: 'nameRegex'; type: { kind: 'SCALAR'; name: 'UntrustedRegexp'; ofType: null; } }; 'nameRegexKeep': { name: 'nameRegexKeep'; type: { kind: 'SCALAR'; name: 'UntrustedRegexp'; ofType: null; } }; 'nextRunAt': { name: 'nextRunAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'olderThan': { name: 'olderThan'; type: { kind: 'ENUM'; name: 'ContainerExpirationPolicyOlderThanEnum'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'ContainerExpirationPolicyCadenceEnum': { kind: 'ENUM'; name: 'ContainerExpirationPolicyCadenceEnum'; type: 'EVERY_DAY' | 'EVERY_WEEK' | 'EVERY_TWO_WEEKS' | 'EVERY_MONTH' | 'EVERY_THREE_MONTHS'; };
    'ContainerExpirationPolicyKeepEnum': { kind: 'ENUM'; name: 'ContainerExpirationPolicyKeepEnum'; type: 'ONE_TAG' | 'FIVE_TAGS' | 'TEN_TAGS' | 'TWENTY_FIVE_TAGS' | 'FIFTY_TAGS' | 'ONE_HUNDRED_TAGS'; };
    'ContainerExpirationPolicyOlderThanEnum': { kind: 'ENUM'; name: 'ContainerExpirationPolicyOlderThanEnum'; type: 'SEVEN_DAYS' | 'FOURTEEN_DAYS' | 'THIRTY_DAYS' | 'SIXTY_DAYS' | 'NINETY_DAYS'; };
    'ContainerRegistryProtectionRule': { kind: 'OBJECT'; name: 'ContainerRegistryProtectionRule'; fields: { 'deleteProtectedUpToAccessLevel': { name: 'deleteProtectedUpToAccessLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ContainerRegistryProtectionRuleAccessLevel'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ContainerRegistryProtectionRuleID'; ofType: null; }; } }; 'pushProtectedUpToAccessLevel': { name: 'pushProtectedUpToAccessLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ContainerRegistryProtectionRuleAccessLevel'; ofType: null; }; } }; 'repositoryPathPattern': { name: 'repositoryPathPattern'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ContainerRegistryProtectionRuleAccessLevel': { kind: 'ENUM'; name: 'ContainerRegistryProtectionRuleAccessLevel'; type: 'MAINTAINER' | 'OWNER' | 'DEVELOPER'; };
    'ContainerRegistryProtectionRuleConnection': { kind: 'OBJECT'; name: 'ContainerRegistryProtectionRuleConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ContainerRegistryProtectionRuleEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ContainerRegistryProtectionRule'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ContainerRegistryProtectionRuleEdge': { kind: 'OBJECT'; name: 'ContainerRegistryProtectionRuleEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ContainerRegistryProtectionRule'; ofType: null; } }; }; };
    'ContainerRegistryProtectionRuleID': unknown;
    'ContainerRepository': { kind: 'OBJECT'; name: 'ContainerRepository'; fields: { 'canDelete': { name: 'canDelete'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'expirationPolicyCleanupStatus': { name: 'expirationPolicyCleanupStatus'; type: { kind: 'ENUM'; name: 'ContainerRepositoryCleanupStatus'; ofType: null; } }; 'expirationPolicyStartedAt': { name: 'expirationPolicyStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastCleanupDeletedTagsCount': { name: 'lastCleanupDeletedTagsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'migrationState': { name: 'migrationState'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'project': { name: 'project'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'ContainerRepositoryStatus'; ofType: null; } }; 'tagsCount': { name: 'tagsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ContainerRepositoryPermissions'; ofType: null; }; } }; }; };
    'ContainerRepositoryCleanupStatus': { kind: 'ENUM'; name: 'ContainerRepositoryCleanupStatus'; type: 'UNSCHEDULED' | 'SCHEDULED' | 'UNFINISHED' | 'ONGOING'; };
    'ContainerRepositoryConnection': { kind: 'OBJECT'; name: 'ContainerRepositoryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ContainerRepositoryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ContainerRepository'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ContainerRepositoryDetails': { kind: 'OBJECT'; name: 'ContainerRepositoryDetails'; fields: { 'canDelete': { name: 'canDelete'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'expirationPolicyCleanupStatus': { name: 'expirationPolicyCleanupStatus'; type: { kind: 'ENUM'; name: 'ContainerRepositoryCleanupStatus'; ofType: null; } }; 'expirationPolicyStartedAt': { name: 'expirationPolicyStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastCleanupDeletedTagsCount': { name: 'lastCleanupDeletedTagsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'migrationState': { name: 'migrationState'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'project': { name: 'project'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; } }; 'size': { name: 'size'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'ContainerRepositoryStatus'; ofType: null; } }; 'tags': { name: 'tags'; type: { kind: 'OBJECT'; name: 'ContainerRepositoryTagConnection'; ofType: null; } }; 'tagsCount': { name: 'tagsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ContainerRepositoryPermissions'; ofType: null; }; } }; }; };
    'ContainerRepositoryEdge': { kind: 'OBJECT'; name: 'ContainerRepositoryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ContainerRepository'; ofType: null; } }; }; };
    'ContainerRepositoryID': unknown;
    'ContainerRepositoryPermissions': { kind: 'OBJECT'; name: 'ContainerRepositoryPermissions'; fields: { 'destroyContainerRepository': { name: 'destroyContainerRepository'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ContainerRepositoryReferrer': { kind: 'OBJECT'; name: 'ContainerRepositoryReferrer'; fields: { 'artifactType': { name: 'artifactType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'digest': { name: 'digest'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ContainerRepositoryTagPermissions'; ofType: null; }; } }; }; };
    'ContainerRepositoryRegistry': { kind: 'OBJECT'; name: 'ContainerRepositoryRegistry'; fields: { 'containerRepositoryId': { name: 'containerRepositoryId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSyncFailure': { name: 'lastSyncFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSyncedAt': { name: 'lastSyncedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryAt': { name: 'retryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryCount': { name: 'retryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'RegistryState'; ofType: null; } }; 'verificationChecksum': { name: 'verificationChecksum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationFailure': { name: 'verificationFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationRetryAt': { name: 'verificationRetryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationRetryCount': { name: 'verificationRetryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'verificationStartedAt': { name: 'verificationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationState': { name: 'verificationState'; type: { kind: 'ENUM'; name: 'VerificationStateEnum'; ofType: null; } }; 'verifiedAt': { name: 'verifiedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'ContainerRepositoryRegistryConnection': { kind: 'OBJECT'; name: 'ContainerRepositoryRegistryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ContainerRepositoryRegistryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ContainerRepositoryRegistry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ContainerRepositoryRegistryEdge': { kind: 'OBJECT'; name: 'ContainerRepositoryRegistryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ContainerRepositoryRegistry'; ofType: null; } }; }; };
    'ContainerRepositorySort': { kind: 'ENUM'; name: 'ContainerRepositorySort'; type: 'NAME_ASC' | 'NAME_DESC' | 'updated_desc' | 'updated_asc' | 'created_desc' | 'created_asc' | 'UPDATED_DESC' | 'UPDATED_ASC' | 'CREATED_DESC' | 'CREATED_ASC'; };
    'ContainerRepositoryStatus': { kind: 'ENUM'; name: 'ContainerRepositoryStatus'; type: 'DELETE_SCHEDULED' | 'DELETE_FAILED' | 'DELETE_ONGOING'; };
    'ContainerRepositoryTag': { kind: 'OBJECT'; name: 'ContainerRepositoryTag'; fields: { 'canDelete': { name: 'canDelete'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'digest': { name: 'digest'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'publishedAt': { name: 'publishedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'referrers': { name: 'referrers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ContainerRepositoryReferrer'; ofType: null; }; }; } }; 'revision': { name: 'revision'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shortRevision': { name: 'shortRevision'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'totalSize': { name: 'totalSize'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ContainerRepositoryTagPermissions'; ofType: null; }; } }; }; };
    'ContainerRepositoryTagConnection': { kind: 'OBJECT'; name: 'ContainerRepositoryTagConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ContainerRepositoryTagEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ContainerRepositoryTag'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ContainerRepositoryTagEdge': { kind: 'OBJECT'; name: 'ContainerRepositoryTagEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ContainerRepositoryTag'; ofType: null; } }; }; };
    'ContainerRepositoryTagPermissions': { kind: 'OBJECT'; name: 'ContainerRepositoryTagPermissions'; fields: { 'destroyContainerRepositoryTag': { name: 'destroyContainerRepositoryTag'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ContainerRepositoryTagSort': { kind: 'ENUM'; name: 'ContainerRepositoryTagSort'; type: 'NAME_ASC' | 'NAME_DESC'; };
    'ContributionAnalyticsContribution': { kind: 'OBJECT'; name: 'ContributionAnalyticsContribution'; fields: { 'issuesClosed': { name: 'issuesClosed'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'issuesCreated': { name: 'issuesCreated'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'mergeRequestsApproved': { name: 'mergeRequestsApproved'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'mergeRequestsClosed': { name: 'mergeRequestsClosed'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'mergeRequestsCreated': { name: 'mergeRequestsCreated'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'mergeRequestsMerged': { name: 'mergeRequestsMerged'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'repoPushed': { name: 'repoPushed'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'totalEvents': { name: 'totalEvents'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; }; };
    'ContributionAnalyticsContributionConnection': { kind: 'OBJECT'; name: 'ContributionAnalyticsContributionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ContributionAnalyticsContributionEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ContributionAnalyticsContribution'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ContributionAnalyticsContributionEdge': { kind: 'OBJECT'; name: 'ContributionAnalyticsContributionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ContributionAnalyticsContribution'; ofType: null; } }; }; };
    'CorpusCreateInput': { kind: 'INPUT_OBJECT'; name: 'CorpusCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'packageId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesPackageID'; ofType: null; }; }; defaultValue: null }, { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'CorpusCreatePayload': { kind: 'OBJECT'; name: 'CorpusCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CoverageFuzzingCorpus': { kind: 'OBJECT'; name: 'CoverageFuzzingCorpus'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AppSecFuzzingCoverageCorpusID'; ofType: null; }; } }; 'package': { name: 'package'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageDetailsType'; ofType: null; }; } }; }; };
    'CoverageFuzzingCorpusConnection': { kind: 'OBJECT'; name: 'CoverageFuzzingCorpusConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CoverageFuzzingCorpusEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CoverageFuzzingCorpus'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CoverageFuzzingCorpusEdge': { kind: 'OBJECT'; name: 'CoverageFuzzingCorpusEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CoverageFuzzingCorpus'; ofType: null; } }; }; };
    'CreateAlertIssueInput': { kind: 'INPUT_OBJECT'; name: 'CreateAlertIssueInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CreateAlertIssuePayload': { kind: 'OBJECT'; name: 'CreateAlertIssuePayload'; fields: { 'alert': { name: 'alert'; type: { kind: 'OBJECT'; name: 'AlertManagementAlert'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; 'todo': { name: 'todo'; type: { kind: 'OBJECT'; name: 'Todo'; ofType: null; } }; }; };
    'CreateAnnotationInput': { kind: 'INPUT_OBJECT'; name: 'CreateAnnotationInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'environmentId'; type: { kind: 'SCALAR'; name: 'EnvironmentID'; ofType: null; }; defaultValue: null }, { name: 'clusterId'; type: { kind: 'SCALAR'; name: 'ClustersClusterID'; ofType: null; }; defaultValue: null }, { name: 'startingAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; }; defaultValue: null }, { name: 'endingAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; defaultValue: null }, { name: 'dashboardPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CreateAnnotationPayload': { kind: 'OBJECT'; name: 'CreateAnnotationPayload'; fields: { 'annotation': { name: 'annotation'; type: { kind: 'OBJECT'; name: 'MetricsDashboardAnnotation'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CreateBoardInput': { kind: 'INPUT_OBJECT'; name: 'CreateBoardInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'hideBacklogList'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'hideClosedList'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'assigneeId'; type: { kind: 'SCALAR'; name: 'UserID'; ofType: null; }; defaultValue: null }, { name: 'milestoneId'; type: { kind: 'SCALAR'; name: 'MilestoneID'; ofType: null; }; defaultValue: null }, { name: 'iterationId'; type: { kind: 'SCALAR'; name: 'IterationID'; ofType: null; }; defaultValue: null }, { name: 'iterationCadenceId'; type: { kind: 'SCALAR'; name: 'IterationsCadenceID'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'labels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'labelIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'LabelID'; ofType: null; }; }; }; defaultValue: null }]; };
    'CreateBoardPayload': { kind: 'OBJECT'; name: 'CreateBoardPayload'; fields: { 'board': { name: 'board'; type: { kind: 'OBJECT'; name: 'Board'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CreateBranchInput': { kind: 'INPUT_OBJECT'; name: 'CreateBranchInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'ref'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CreateBranchPayload': { kind: 'OBJECT'; name: 'CreateBranchPayload'; fields: { 'branch': { name: 'branch'; type: { kind: 'OBJECT'; name: 'Branch'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CreateClusterAgentInput': { kind: 'INPUT_OBJECT'; name: 'CreateClusterAgentInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CreateClusterAgentPayload': { kind: 'OBJECT'; name: 'CreateClusterAgentPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'clusterAgent': { name: 'clusterAgent'; type: { kind: 'OBJECT'; name: 'ClusterAgent'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CreateComplianceFrameworkInput': { kind: 'INPUT_OBJECT'; name: 'CreateComplianceFrameworkInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'namespacePath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'params'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ComplianceFrameworkInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateComplianceFrameworkPayload': { kind: 'OBJECT'; name: 'CreateComplianceFrameworkPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'framework': { name: 'framework'; type: { kind: 'OBJECT'; name: 'ComplianceFramework'; ofType: null; } }; }; };
    'CreateContainerRegistryProtectionRuleInput': { kind: 'INPUT_OBJECT'; name: 'CreateContainerRegistryProtectionRuleInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'repositoryPathPattern'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'pushProtectedUpToAccessLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ContainerRegistryProtectionRuleAccessLevel'; ofType: null; }; }; defaultValue: null }, { name: 'deleteProtectedUpToAccessLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ContainerRegistryProtectionRuleAccessLevel'; ofType: null; }; }; defaultValue: null }]; };
    'CreateContainerRegistryProtectionRulePayload': { kind: 'OBJECT'; name: 'CreateContainerRegistryProtectionRulePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'containerRegistryProtectionRule': { name: 'containerRegistryProtectionRule'; type: { kind: 'OBJECT'; name: 'ContainerRegistryProtectionRule'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CreateCustomEmojiInput': { kind: 'INPUT_OBJECT'; name: 'CreateCustomEmojiInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'CreateCustomEmojiPayload': { kind: 'OBJECT'; name: 'CreateCustomEmojiPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'customEmoji': { name: 'customEmoji'; type: { kind: 'OBJECT'; name: 'CustomEmoji'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CreateDiffNoteInput': { kind: 'INPUT_OBJECT'; name: 'CreateDiffNoteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'noteableId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'NoteableID'; ofType: null; }; }; defaultValue: null }, { name: 'body'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'internal'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'position'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DiffPositionInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateDiffNotePayload': { kind: 'OBJECT'; name: 'CreateDiffNotePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'note': { name: 'note'; type: { kind: 'OBJECT'; name: 'Note'; ofType: null; } }; }; };
    'CreateDiscussionInput': { kind: 'INPUT_OBJECT'; name: 'CreateDiscussionInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'noteableId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'NoteableID'; ofType: null; }; }; defaultValue: null }, { name: 'body'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'internal'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'CreateDiscussionPayload': { kind: 'OBJECT'; name: 'CreateDiscussionPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'note': { name: 'note'; type: { kind: 'OBJECT'; name: 'Note'; ofType: null; } }; }; };
    'CreateEpicInput': { kind: 'INPUT_OBJECT'; name: 'CreateEpicInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'confidential'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'startDateFixed'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'dueDateFixed'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'startDateIsFixed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'dueDateIsFixed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'addLabelIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeLabelIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'addLabels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'color'; type: { kind: 'SCALAR'; name: 'Color'; ofType: null; }; defaultValue: null }]; };
    'CreateEpicPayload': { kind: 'OBJECT'; name: 'CreateEpicPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'epic': { name: 'epic'; type: { kind: 'OBJECT'; name: 'Epic'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CreateImageDiffNoteInput': { kind: 'INPUT_OBJECT'; name: 'CreateImageDiffNoteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'noteableId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'NoteableID'; ofType: null; }; }; defaultValue: null }, { name: 'body'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'internal'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'position'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DiffImagePositionInput'; ofType: null; }; }; defaultValue: null }]; };
    'CreateImageDiffNotePayload': { kind: 'OBJECT'; name: 'CreateImageDiffNotePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'note': { name: 'note'; type: { kind: 'OBJECT'; name: 'Note'; ofType: null; } }; }; };
    'CreateIssueInput': { kind: 'INPUT_OBJECT'; name: 'CreateIssueInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'dueDate'; type: { kind: 'SCALAR'; name: 'ISO8601Date'; ofType: null; }; defaultValue: null }, { name: 'confidential'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'locked'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'ENUM'; name: 'IssueType'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'milestoneId'; type: { kind: 'SCALAR'; name: 'MilestoneID'; ofType: null; }; defaultValue: null }, { name: 'labels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'labelIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'LabelID'; ofType: null; }; }; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; defaultValue: null }, { name: 'mergeRequestToResolveDiscussionsOf'; type: { kind: 'SCALAR'; name: 'MergeRequestID'; ofType: null; }; defaultValue: null }, { name: 'discussionToResolve'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'assigneeIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UserID'; ofType: null; }; }; }; defaultValue: null }, { name: 'moveBeforeId'; type: { kind: 'SCALAR'; name: 'IssueID'; ofType: null; }; defaultValue: null }, { name: 'moveAfterId'; type: { kind: 'SCALAR'; name: 'IssueID'; ofType: null; }; defaultValue: null }, { name: 'healthStatus'; type: { kind: 'ENUM'; name: 'HealthStatus'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'epicId'; type: { kind: 'SCALAR'; name: 'EpicID'; ofType: null; }; defaultValue: null }, { name: 'iterationId'; type: { kind: 'SCALAR'; name: 'IterationID'; ofType: null; }; defaultValue: null }, { name: 'iterationWildcardId'; type: { kind: 'ENUM'; name: 'IssueCreationIterationWildcardId'; ofType: null; }; defaultValue: null }, { name: 'iterationCadenceId'; type: { kind: 'SCALAR'; name: 'IterationsCadenceID'; ofType: null; }; defaultValue: null }]; };
    'CreateIssuePayload': { kind: 'OBJECT'; name: 'CreateIssuePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'CreateIterationInput': { kind: 'INPUT_OBJECT'; name: 'CreateIterationInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'iterationsCadenceId'; type: { kind: 'SCALAR'; name: 'IterationsCadenceID'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'startDate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'dueDate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CreateIterationPayload': { kind: 'OBJECT'; name: 'CreateIterationPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'iteration': { name: 'iteration'; type: { kind: 'OBJECT'; name: 'Iteration'; ofType: null; } }; }; };
    'CreateNoteInput': { kind: 'INPUT_OBJECT'; name: 'CreateNoteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'noteableId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'NoteableID'; ofType: null; }; }; defaultValue: null }, { name: 'body'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'internal'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'discussionId'; type: { kind: 'SCALAR'; name: 'DiscussionID'; ofType: null; }; defaultValue: null }, { name: 'mergeRequestDiffHeadSha'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CreateNotePayload': { kind: 'OBJECT'; name: 'CreateNotePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'note': { name: 'note'; type: { kind: 'OBJECT'; name: 'Note'; ofType: null; } }; }; };
    'CreatePackagesProtectionRuleInput': { kind: 'INPUT_OBJECT'; name: 'CreatePackagesProtectionRuleInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'packageNamePattern'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'packageType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PackagesProtectionRulePackageType'; ofType: null; }; }; defaultValue: null }, { name: 'pushProtectedUpToAccessLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PackagesProtectionRuleAccessLevel'; ofType: null; }; }; defaultValue: null }]; };
    'CreatePackagesProtectionRulePayload': { kind: 'OBJECT'; name: 'CreatePackagesProtectionRulePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'packageProtectionRule': { name: 'packageProtectionRule'; type: { kind: 'OBJECT'; name: 'PackagesProtectionRule'; ofType: null; } }; }; };
    'CreateRequirementInput': { kind: 'INPUT_OBJECT'; name: 'CreateRequirementInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'CreateRequirementPayload': { kind: 'OBJECT'; name: 'CreateRequirementPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'requirement': { name: 'requirement'; type: { kind: 'OBJECT'; name: 'Requirement'; ofType: null; } }; }; };
    'CreateSnippetInput': { kind: 'INPUT_OBJECT'; name: 'CreateSnippetInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'visibilityLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'VisibilityLevelsEnum'; ofType: null; }; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'uploadedFiles'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'blobActions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SnippetBlobActionInputType'; ofType: null; }; }; }; defaultValue: null }]; };
    'CreateSnippetPayload': { kind: 'OBJECT'; name: 'CreateSnippetPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'snippet': { name: 'snippet'; type: { kind: 'OBJECT'; name: 'Snippet'; ofType: null; } }; }; };
    'CreateTestCaseInput': { kind: 'INPUT_OBJECT'; name: 'CreateTestCaseInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'labelIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'confidential'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'CreateTestCasePayload': { kind: 'OBJECT'; name: 'CreateTestCasePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'testCase': { name: 'testCase'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'CurrentLicense': { kind: 'OBJECT'; name: 'CurrentLicense'; fields: { 'activatedAt': { name: 'activatedAt'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'billableUsersCount': { name: 'billableUsersCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'blockChangesAt': { name: 'blockChangesAt'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'company': { name: 'company'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'expiresAt': { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSync': { name: 'lastSync'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'maximumUserCount': { name: 'maximumUserCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'plan': { name: 'plan'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'startsAt': { name: 'startsAt'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'usersInLicenseCount': { name: 'usersInLicenseCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'usersOverLicenseCount': { name: 'usersOverLicenseCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'CurrentUser': { kind: 'OBJECT'; name: 'CurrentUser'; fields: { 'assignedMergeRequests': { name: 'assignedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'authoredMergeRequests': { name: 'authoredMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bio': { name: 'bio'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bot': { name: 'bot'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'callouts': { name: 'callouts'; type: { kind: 'OBJECT'; name: 'UserCalloutConnection'; ofType: null; } }; 'commitEmail': { name: 'commitEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'discord': { name: 'discord'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'duoChatAvailable': { name: 'duoChatAvailable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'duoCodeSuggestionsAvailable': { name: 'duoCodeSuggestionsAvailable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'emails': { name: 'emails'; type: { kind: 'OBJECT'; name: 'EmailConnection'; ofType: null; } }; 'gitpodEnabled': { name: 'gitpodEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'groupCount': { name: 'groupCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'groupMemberships': { name: 'groupMemberships'; type: { kind: 'OBJECT'; name: 'GroupMemberConnection'; ofType: null; } }; 'groups': { name: 'groups'; type: { kind: 'OBJECT'; name: 'GroupConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'ide': { name: 'ide'; type: { kind: 'OBJECT'; name: 'Ide'; ofType: null; } }; 'jobTitle': { name: 'jobTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastActivityOn': { name: 'lastActivityOn'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'linkedin': { name: 'linkedin'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; 'namespaceCommitEmails': { name: 'namespaceCommitEmails'; type: { kind: 'OBJECT'; name: 'NamespaceCommitEmailConnection'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organizations': { name: 'organizations'; type: { kind: 'OBJECT'; name: 'OrganizationConnection'; ofType: null; } }; 'preferencesGitpodPath': { name: 'preferencesGitpodPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'profileEnableGitpodPath': { name: 'profileEnableGitpodPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'projectMemberships': { name: 'projectMemberships'; type: { kind: 'OBJECT'; name: 'ProjectMemberConnection'; ofType: null; } }; 'pronouns': { name: 'pronouns'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'publicEmail': { name: 'publicEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'reviewRequestedMergeRequests': { name: 'reviewRequestedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'savedReplies': { name: 'savedReplies'; type: { kind: 'OBJECT'; name: 'SavedReplyConnection'; ofType: null; } }; 'savedReply': { name: 'savedReply'; type: { kind: 'OBJECT'; name: 'SavedReply'; ofType: null; } }; 'snippets': { name: 'snippets'; type: { kind: 'OBJECT'; name: 'SnippetConnection'; ofType: null; } }; 'starredProjects': { name: 'starredProjects'; type: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'UserState'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'OBJECT'; name: 'UserStatus'; ofType: null; } }; 'timelogs': { name: 'timelogs'; type: { kind: 'OBJECT'; name: 'TimelogConnection'; ofType: null; } }; 'todos': { name: 'todos'; type: { kind: 'OBJECT'; name: 'TodoConnection'; ofType: null; } }; 'twitter': { name: 'twitter'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userAchievements': { name: 'userAchievements'; type: { kind: 'OBJECT'; name: 'UserAchievementConnection'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserPermissions'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'workspaces': { name: 'workspaces'; type: { kind: 'OBJECT'; name: 'WorkspaceConnection'; ofType: null; } }; }; };
    'CurrentUserTodos': { kind: 'INTERFACE'; name: 'CurrentUserTodos'; fields: { 'currentUserTodos': { name: 'currentUserTodos'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TodoConnection'; ofType: null; }; } }; }; possibleTypes: 'BoardEpic' | 'Design' | 'Epic' | 'EpicIssue' | 'Issue' | 'MergeRequest' | 'WorkItemWidgetCurrentUserTodos'; };
    'CustomEmoji': { kind: 'OBJECT'; name: 'CustomEmoji'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'external': { name: 'external'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CustomEmojiID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomEmojiPermissions'; ofType: null; }; } }; }; };
    'CustomEmojiConnection': { kind: 'OBJECT'; name: 'CustomEmojiConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomEmojiEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomEmoji'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CustomEmojiEdge': { kind: 'OBJECT'; name: 'CustomEmojiEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CustomEmoji'; ofType: null; } }; }; };
    'CustomEmojiID': unknown;
    'CustomEmojiPermissions': { kind: 'OBJECT'; name: 'CustomEmojiPermissions'; fields: { 'createCustomEmoji': { name: 'createCustomEmoji'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deleteCustomEmoji': { name: 'deleteCustomEmoji'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readCustomEmoji': { name: 'readCustomEmoji'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'CustomerRelationsContact': { kind: 'OBJECT'; name: 'CustomerRelationsContact'; fields: { 'active': { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'firstName': { name: 'firstName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastName': { name: 'lastName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organization': { name: 'organization'; type: { kind: 'OBJECT'; name: 'CustomerRelationsOrganization'; ofType: null; } }; 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'CustomerRelationsContactConnection': { kind: 'OBJECT'; name: 'CustomerRelationsContactConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerRelationsContactEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerRelationsContact'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CustomerRelationsContactCreateInput': { kind: 'INPUT_OBJECT'; name: 'CustomerRelationsContactCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'groupId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GroupID'; ofType: null; }; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'SCALAR'; name: 'CustomerRelationsOrganizationID'; ofType: null; }; defaultValue: null }, { name: 'firstName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'lastName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CustomerRelationsContactCreatePayload': { kind: 'OBJECT'; name: 'CustomerRelationsContactCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'contact': { name: 'contact'; type: { kind: 'OBJECT'; name: 'CustomerRelationsContact'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CustomerRelationsContactEdge': { kind: 'OBJECT'; name: 'CustomerRelationsContactEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CustomerRelationsContact'; ofType: null; } }; }; };
    'CustomerRelationsContactID': unknown;
    'CustomerRelationsContactState': { kind: 'ENUM'; name: 'CustomerRelationsContactState'; type: 'all' | 'active' | 'inactive'; };
    'CustomerRelationsContactUpdateInput': { kind: 'INPUT_OBJECT'; name: 'CustomerRelationsContactUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CustomerRelationsContactID'; ofType: null; }; }; defaultValue: null }, { name: 'organizationId'; type: { kind: 'SCALAR'; name: 'CustomerRelationsOrganizationID'; ofType: null; }; defaultValue: null }, { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'CustomerRelationsContactUpdatePayload': { kind: 'OBJECT'; name: 'CustomerRelationsContactUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'contact': { name: 'contact'; type: { kind: 'OBJECT'; name: 'CustomerRelationsContact'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'CustomerRelationsOrganization': { kind: 'OBJECT'; name: 'CustomerRelationsOrganization'; fields: { 'active': { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'defaultRate': { name: 'defaultRate'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'CustomerRelationsOrganizationConnection': { kind: 'OBJECT'; name: 'CustomerRelationsOrganizationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerRelationsOrganizationEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerRelationsOrganization'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CustomerRelationsOrganizationCreateInput': { kind: 'INPUT_OBJECT'; name: 'CustomerRelationsOrganizationCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'groupId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GroupID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'defaultRate'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CustomerRelationsOrganizationCreatePayload': { kind: 'OBJECT'; name: 'CustomerRelationsOrganizationCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'organization': { name: 'organization'; type: { kind: 'OBJECT'; name: 'CustomerRelationsOrganization'; ofType: null; } }; }; };
    'CustomerRelationsOrganizationEdge': { kind: 'OBJECT'; name: 'CustomerRelationsOrganizationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CustomerRelationsOrganization'; ofType: null; } }; }; };
    'CustomerRelationsOrganizationID': unknown;
    'CustomerRelationsOrganizationState': { kind: 'ENUM'; name: 'CustomerRelationsOrganizationState'; type: 'all' | 'active' | 'inactive'; };
    'CustomerRelationsOrganizationUpdateInput': { kind: 'INPUT_OBJECT'; name: 'CustomerRelationsOrganizationUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CustomerRelationsOrganizationID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'defaultRate'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'CustomerRelationsOrganizationUpdatePayload': { kind: 'OBJECT'; name: 'CustomerRelationsOrganizationUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerRelationsOrganization'; ofType: null; }; } }; }; };
    'CustomizableDashboard': { kind: 'OBJECT'; name: 'CustomizableDashboard'; fields: { 'category': { name: 'category'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CustomizableDashboardCategory'; ofType: null; }; } }; 'configurationProject': { name: 'configurationProject'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'panels': { name: 'panels'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomizableDashboardPanelConnection'; ofType: null; }; } }; 'slug': { name: 'slug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'userDefined': { name: 'userDefined'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'CustomizableDashboardCategory': { kind: 'ENUM'; name: 'CustomizableDashboardCategory'; type: 'ANALYTICS'; };
    'CustomizableDashboardConnection': { kind: 'OBJECT'; name: 'CustomizableDashboardConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomizableDashboardEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomizableDashboard'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CustomizableDashboardEdge': { kind: 'OBJECT'; name: 'CustomizableDashboardEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CustomizableDashboard'; ofType: null; } }; }; };
    'CustomizableDashboardPanel': { kind: 'OBJECT'; name: 'CustomizableDashboardPanel'; fields: { 'gridAttributes': { name: 'gridAttributes'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'queryOverrides': { name: 'queryOverrides'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'visualization': { name: 'visualization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomizableDashboardVisualization'; ofType: null; }; } }; }; };
    'CustomizableDashboardPanelConnection': { kind: 'OBJECT'; name: 'CustomizableDashboardPanelConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomizableDashboardPanelEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomizableDashboardPanel'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CustomizableDashboardPanelEdge': { kind: 'OBJECT'; name: 'CustomizableDashboardPanelEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CustomizableDashboardPanel'; ofType: null; } }; }; };
    'CustomizableDashboardVisualization': { kind: 'OBJECT'; name: 'CustomizableDashboardVisualization'; fields: { 'data': { name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'options': { name: 'options'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; } }; 'slug': { name: 'slug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CustomizableDashboardVisualizationConnection': { kind: 'OBJECT'; name: 'CustomizableDashboardVisualizationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomizableDashboardVisualizationEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomizableDashboardVisualization'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CustomizableDashboardVisualizationEdge': { kind: 'OBJECT'; name: 'CustomizableDashboardVisualizationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CustomizableDashboardVisualization'; ofType: null; } }; }; };
    'CustomizablePermission': { kind: 'OBJECT'; name: 'CustomizablePermission'; fields: { 'availableFor': { name: 'availableFor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'availableFromAccessLevel': { name: 'availableFromAccessLevel'; type: { kind: 'OBJECT'; name: 'AccessLevel'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'requirements': { name: 'requirements'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MemberRolePermission'; ofType: null; }; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MemberRolePermission'; ofType: null; }; } }; }; };
    'CustomizablePermissionConnection': { kind: 'OBJECT'; name: 'CustomizablePermissionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomizablePermissionEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomizablePermission'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'CustomizablePermissionEdge': { kind: 'OBJECT'; name: 'CustomizablePermissionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'CustomizablePermission'; ofType: null; } }; }; };
    'CvssSeverity': { kind: 'ENUM'; name: 'CvssSeverity'; type: 'NONE' | 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL'; };
    'CvssType': { kind: 'OBJECT'; name: 'CvssType'; fields: { 'baseScore': { name: 'baseScore'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'overallScore': { name: 'overallScore'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'severity': { name: 'severity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CvssSeverity'; ofType: null; }; } }; 'vector': { name: 'vector'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'vendor': { name: 'vendor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'DastOnDemandScanCreateInput': { kind: 'INPUT_OBJECT'; name: 'DastOnDemandScanCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'dastSiteProfileId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DastSiteProfileID'; ofType: null; }; }; defaultValue: null }, { name: 'dastScannerProfileId'; type: { kind: 'SCALAR'; name: 'DastScannerProfileID'; ofType: null; }; defaultValue: null }]; };
    'DastOnDemandScanCreatePayload': { kind: 'OBJECT'; name: 'DastOnDemandScanCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'pipelineUrl': { name: 'pipelineUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DastPreScanVerification': { kind: 'OBJECT'; name: 'DastPreScanVerification'; fields: { 'preScanVerificationSteps': { name: 'preScanVerificationSteps'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DastPreScanVerificationStep'; ofType: null; }; }; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'DastPreScanVerificationStatus'; ofType: null; } }; 'valid': { name: 'valid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DastPreScanVerificationCheckType': { kind: 'ENUM'; name: 'DastPreScanVerificationCheckType'; type: 'CONNECTION' | 'AUTHENTICATION' | 'CRAWLING'; };
    'DastPreScanVerificationStatus': { kind: 'ENUM'; name: 'DastPreScanVerificationStatus'; type: 'RUNNING' | 'COMPLETE' | 'COMPLETE_WITH_ERRORS' | 'FAILED'; };
    'DastPreScanVerificationStep': { kind: 'OBJECT'; name: 'DastPreScanVerificationStep'; fields: { 'checkType': { name: 'checkType'; type: { kind: 'ENUM'; name: 'DastPreScanVerificationCheckType'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'success': { name: 'success'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DastProfile': { kind: 'OBJECT'; name: 'DastProfile'; fields: { 'branch': { name: 'branch'; type: { kind: 'OBJECT'; name: 'DastProfileBranch'; ofType: null; } }; 'dastPreScanVerification': { name: 'dastPreScanVerification'; type: { kind: 'OBJECT'; name: 'DastPreScanVerification'; ofType: null; } }; 'dastProfileSchedule': { name: 'dastProfileSchedule'; type: { kind: 'OBJECT'; name: 'DastProfileSchedule'; ofType: null; } }; 'dastScannerProfile': { name: 'dastScannerProfile'; type: { kind: 'OBJECT'; name: 'DastScannerProfile'; ofType: null; } }; 'dastSiteProfile': { name: 'dastSiteProfile'; type: { kind: 'OBJECT'; name: 'DastSiteProfile'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'editPath': { name: 'editPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DastProfileID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tagList': { name: 'tagList'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; }; };
    'DastProfileBranch': { kind: 'OBJECT'; name: 'DastProfileBranch'; fields: { 'exists': { name: 'exists'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DastProfileCadence': { kind: 'OBJECT'; name: 'DastProfileCadence'; fields: { 'duration': { name: 'duration'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'unit': { name: 'unit'; type: { kind: 'ENUM'; name: 'DastProfileCadenceUnit'; ofType: null; } }; }; };
    'DastProfileCadenceInput': { kind: 'INPUT_OBJECT'; name: 'DastProfileCadenceInput'; inputFields: [{ name: 'unit'; type: { kind: 'ENUM'; name: 'DastProfileCadenceUnit'; ofType: null; }; defaultValue: null }, { name: 'duration'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'DastProfileCadenceUnit': { kind: 'ENUM'; name: 'DastProfileCadenceUnit'; type: 'DAY' | 'WEEK' | 'MONTH' | 'YEAR'; };
    'DastProfileConnection': { kind: 'OBJECT'; name: 'DastProfileConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DastProfileEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DastProfile'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DastProfileCreateInput': { kind: 'INPUT_OBJECT'; name: 'DastProfileCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'dastProfileSchedule'; type: { kind: 'INPUT_OBJECT'; name: 'DastProfileScheduleInput'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: "\"\"" }, { name: 'branchName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'dastSiteProfileId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DastSiteProfileID'; ofType: null; }; }; defaultValue: null }, { name: 'dastScannerProfileId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DastScannerProfileID'; ofType: null; }; }; defaultValue: null }, { name: 'runAfterCreate'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'tagList'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'DastProfileCreatePayload': { kind: 'OBJECT'; name: 'DastProfileCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dastProfile': { name: 'dastProfile'; type: { kind: 'OBJECT'; name: 'DastProfile'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'pipelineUrl': { name: 'pipelineUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DastProfileDeleteInput': { kind: 'INPUT_OBJECT'; name: 'DastProfileDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DastProfileID'; ofType: null; }; }; defaultValue: null }]; };
    'DastProfileDeletePayload': { kind: 'OBJECT'; name: 'DastProfileDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DastProfileEdge': { kind: 'OBJECT'; name: 'DastProfileEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'DastProfile'; ofType: null; } }; }; };
    'DastProfileID': unknown;
    'DastProfileRunInput': { kind: 'INPUT_OBJECT'; name: 'DastProfileRunInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DastProfileID'; ofType: null; }; }; defaultValue: null }]; };
    'DastProfileRunPayload': { kind: 'OBJECT'; name: 'DastProfileRunPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'pipelineUrl': { name: 'pipelineUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DastProfileSchedule': { kind: 'OBJECT'; name: 'DastProfileSchedule'; fields: { 'active': { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'cadence': { name: 'cadence'; type: { kind: 'OBJECT'; name: 'DastProfileCadence'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DastProfileScheduleID'; ofType: null; }; } }; 'nextRunAt': { name: 'nextRunAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'ownerValid': { name: 'ownerValid'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'startsAt': { name: 'startsAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'timezone': { name: 'timezone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DastProfileScheduleID': unknown;
    'DastProfileScheduleInput': { kind: 'INPUT_OBJECT'; name: 'DastProfileScheduleInput'; inputFields: [{ name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'startsAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; defaultValue: null }, { name: 'timezone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'cadence'; type: { kind: 'INPUT_OBJECT'; name: 'DastProfileCadenceInput'; ofType: null; }; defaultValue: null }]; };
    'DastProfileUpdateInput': { kind: 'INPUT_OBJECT'; name: 'DastProfileUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DastProfileID'; ofType: null; }; }; defaultValue: null }, { name: 'dastProfileSchedule'; type: { kind: 'INPUT_OBJECT'; name: 'DastProfileScheduleInput'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: "\"\"" }, { name: 'branchName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'dastSiteProfileId'; type: { kind: 'SCALAR'; name: 'DastSiteProfileID'; ofType: null; }; defaultValue: null }, { name: 'dastScannerProfileId'; type: { kind: 'SCALAR'; name: 'DastScannerProfileID'; ofType: null; }; defaultValue: null }, { name: 'runAfterUpdate'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'tagList'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'DastProfileUpdatePayload': { kind: 'OBJECT'; name: 'DastProfileUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dastProfile': { name: 'dastProfile'; type: { kind: 'OBJECT'; name: 'DastProfile'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'pipelineUrl': { name: 'pipelineUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DastScanMethodType': { kind: 'ENUM'; name: 'DastScanMethodType'; type: 'WEBSITE' | 'OPENAPI' | 'HAR' | 'POSTMAN_COLLECTION' | 'GRAPHQL'; };
    'DastScanTypeEnum': { kind: 'ENUM'; name: 'DastScanTypeEnum'; type: 'PASSIVE' | 'ACTIVE'; };
    'DastScannerProfile': { kind: 'OBJECT'; name: 'DastScannerProfile'; fields: { 'editPath': { name: 'editPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DastScannerProfileID'; ofType: null; }; } }; 'profileName': { name: 'profileName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'referencedInSecurityPolicies': { name: 'referencedInSecurityPolicies'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'scanType': { name: 'scanType'; type: { kind: 'ENUM'; name: 'DastScanTypeEnum'; ofType: null; } }; 'showDebugMessages': { name: 'showDebugMessages'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'spiderTimeout': { name: 'spiderTimeout'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'tagList': { name: 'tagList'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'targetTimeout': { name: 'targetTimeout'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'useAjaxSpider': { name: 'useAjaxSpider'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DastScannerProfileConnection': { kind: 'OBJECT'; name: 'DastScannerProfileConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DastScannerProfileEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DastScannerProfile'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DastScannerProfileCreateInput': { kind: 'INPUT_OBJECT'; name: 'DastScannerProfileCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'profileName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'spiderTimeout'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'targetTimeout'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'scanType'; type: { kind: 'ENUM'; name: 'DastScanTypeEnum'; ofType: null; }; defaultValue: "PASSIVE" }, { name: 'useAjaxSpider'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'showDebugMessages'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'DastScannerProfileCreatePayload': { kind: 'OBJECT'; name: 'DastScannerProfileCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dastScannerProfile': { name: 'dastScannerProfile'; type: { kind: 'OBJECT'; name: 'DastScannerProfile'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'DastScannerProfileID'; ofType: null; } }; }; };
    'DastScannerProfileDeleteInput': { kind: 'INPUT_OBJECT'; name: 'DastScannerProfileDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DastScannerProfileID'; ofType: null; }; }; defaultValue: null }]; };
    'DastScannerProfileDeletePayload': { kind: 'OBJECT'; name: 'DastScannerProfileDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DastScannerProfileEdge': { kind: 'OBJECT'; name: 'DastScannerProfileEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'DastScannerProfile'; ofType: null; } }; }; };
    'DastScannerProfileID': unknown;
    'DastScannerProfileUpdateInput': { kind: 'INPUT_OBJECT'; name: 'DastScannerProfileUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DastScannerProfileID'; ofType: null; }; }; defaultValue: null }, { name: 'profileName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'spiderTimeout'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'targetTimeout'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'scanType'; type: { kind: 'ENUM'; name: 'DastScanTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'useAjaxSpider'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'showDebugMessages'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'DastScannerProfileUpdatePayload': { kind: 'OBJECT'; name: 'DastScannerProfileUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dastScannerProfile': { name: 'dastScannerProfile'; type: { kind: 'OBJECT'; name: 'DastScannerProfile'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'DastScannerProfileID'; ofType: null; } }; }; };
    'DastSiteProfile': { kind: 'OBJECT'; name: 'DastSiteProfile'; fields: { 'auth': { name: 'auth'; type: { kind: 'OBJECT'; name: 'DastSiteProfileAuth'; ofType: null; } }; 'editPath': { name: 'editPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'excludedUrls': { name: 'excludedUrls'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DastSiteProfileID'; ofType: null; }; } }; 'normalizedTargetUrl': { name: 'normalizedTargetUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'profileName': { name: 'profileName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'referencedInSecurityPolicies': { name: 'referencedInSecurityPolicies'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'requestHeaders': { name: 'requestHeaders'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'scanFilePath': { name: 'scanFilePath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'scanMethod': { name: 'scanMethod'; type: { kind: 'ENUM'; name: 'DastScanMethodType'; ofType: null; } }; 'targetType': { name: 'targetType'; type: { kind: 'ENUM'; name: 'DastTargetTypeEnum'; ofType: null; } }; 'targetUrl': { name: 'targetUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DastSiteProfilePermissions'; ofType: null; }; } }; 'validationStartedAt': { name: 'validationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'validationStatus': { name: 'validationStatus'; type: { kind: 'ENUM'; name: 'DastSiteProfileValidationStatusEnum'; ofType: null; } }; }; };
    'DastSiteProfileAuth': { kind: 'OBJECT'; name: 'DastSiteProfileAuth'; fields: { 'enabled': { name: 'enabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'password': { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'passwordField': { name: 'passwordField'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'submitField': { name: 'submitField'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'username': { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'usernameField': { name: 'usernameField'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DastSiteProfileAuthInput': { kind: 'INPUT_OBJECT'; name: 'DastSiteProfileAuthInput'; inputFields: [{ name: 'enabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'usernameField'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'passwordField'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'submitField'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'DastSiteProfileConnection': { kind: 'OBJECT'; name: 'DastSiteProfileConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DastSiteProfileEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DastSiteProfile'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DastSiteProfileCreateInput': { kind: 'INPUT_OBJECT'; name: 'DastSiteProfileCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'profileName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'targetUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'targetType'; type: { kind: 'ENUM'; name: 'DastTargetTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'scanMethod'; type: { kind: 'ENUM'; name: 'DastScanMethodType'; ofType: null; }; defaultValue: null }, { name: 'scanFilePath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'requestHeaders'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'auth'; type: { kind: 'INPUT_OBJECT'; name: 'DastSiteProfileAuthInput'; ofType: null; }; defaultValue: null }, { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'excludedUrls'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: "[]" }]; };
    'DastSiteProfileCreatePayload': { kind: 'OBJECT'; name: 'DastSiteProfileCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dastSiteProfile': { name: 'dastSiteProfile'; type: { kind: 'OBJECT'; name: 'DastSiteProfile'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'DastSiteProfileID'; ofType: null; } }; }; };
    'DastSiteProfileDeleteInput': { kind: 'INPUT_OBJECT'; name: 'DastSiteProfileDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DastSiteProfileID'; ofType: null; }; }; defaultValue: null }]; };
    'DastSiteProfileDeletePayload': { kind: 'OBJECT'; name: 'DastSiteProfileDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DastSiteProfileEdge': { kind: 'OBJECT'; name: 'DastSiteProfileEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'DastSiteProfile'; ofType: null; } }; }; };
    'DastSiteProfileID': unknown;
    'DastSiteProfilePermissions': { kind: 'OBJECT'; name: 'DastSiteProfilePermissions'; fields: { 'createOnDemandDastScan': { name: 'createOnDemandDastScan'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DastSiteProfileUpdateInput': { kind: 'INPUT_OBJECT'; name: 'DastSiteProfileUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'profileName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'targetUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'targetType'; type: { kind: 'ENUM'; name: 'DastTargetTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'scanMethod'; type: { kind: 'ENUM'; name: 'DastScanMethodType'; ofType: null; }; defaultValue: null }, { name: 'scanFilePath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'requestHeaders'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'auth'; type: { kind: 'INPUT_OBJECT'; name: 'DastSiteProfileAuthInput'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DastSiteProfileID'; ofType: null; }; }; defaultValue: null }, { name: 'excludedUrls'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'DastSiteProfileUpdatePayload': { kind: 'OBJECT'; name: 'DastSiteProfileUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dastSiteProfile': { name: 'dastSiteProfile'; type: { kind: 'OBJECT'; name: 'DastSiteProfile'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'DastSiteProfileID'; ofType: null; } }; }; };
    'DastSiteProfileValidationStatusEnum': { kind: 'ENUM'; name: 'DastSiteProfileValidationStatusEnum'; type: 'NONE' | 'PENDING_VALIDATION' | 'INPROGRESS_VALIDATION' | 'PASSED_VALIDATION' | 'FAILED_VALIDATION'; };
    'DastSiteTokenCreateInput': { kind: 'INPUT_OBJECT'; name: 'DastSiteTokenCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'targetUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'DastSiteTokenCreatePayload': { kind: 'OBJECT'; name: 'DastSiteTokenCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'DastSiteTokenID'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'DastSiteProfileValidationStatusEnum'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DastSiteTokenID': unknown;
    'DastSiteValidation': { kind: 'OBJECT'; name: 'DastSiteValidation'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DastSiteValidationID'; ofType: null; }; } }; 'normalizedTargetUrl': { name: 'normalizedTargetUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DastSiteProfileValidationStatusEnum'; ofType: null; }; } }; 'validationStartedAt': { name: 'validationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'DastSiteValidationConnection': { kind: 'OBJECT'; name: 'DastSiteValidationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DastSiteValidationEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DastSiteValidation'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DastSiteValidationCreateInput': { kind: 'INPUT_OBJECT'; name: 'DastSiteValidationCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'dastSiteTokenId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DastSiteTokenID'; ofType: null; }; }; defaultValue: null }, { name: 'validationPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'strategy'; type: { kind: 'ENUM'; name: 'DastSiteValidationStrategyEnum'; ofType: null; }; defaultValue: null }]; };
    'DastSiteValidationCreatePayload': { kind: 'OBJECT'; name: 'DastSiteValidationCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'DastSiteValidationID'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'DastSiteProfileValidationStatusEnum'; ofType: null; } }; }; };
    'DastSiteValidationEdge': { kind: 'OBJECT'; name: 'DastSiteValidationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'DastSiteValidation'; ofType: null; } }; }; };
    'DastSiteValidationID': unknown;
    'DastSiteValidationRevokeInput': { kind: 'INPUT_OBJECT'; name: 'DastSiteValidationRevokeInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'normalizedTargetUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'DastSiteValidationRevokePayload': { kind: 'OBJECT'; name: 'DastSiteValidationRevokePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DastSiteValidationStatusEnum': { kind: 'ENUM'; name: 'DastSiteValidationStatusEnum'; type: 'PENDING_VALIDATION' | 'INPROGRESS_VALIDATION' | 'PASSED_VALIDATION' | 'FAILED_VALIDATION'; };
    'DastSiteValidationStrategyEnum': { kind: 'ENUM'; name: 'DastSiteValidationStrategyEnum'; type: 'TEXT_FILE' | 'HEADER' | 'META_TAG'; };
    'DastTargetTypeEnum': { kind: 'ENUM'; name: 'DastTargetTypeEnum'; type: 'WEBSITE' | 'API'; };
    'DataVisualizationColorEnum': { kind: 'ENUM'; name: 'DataVisualizationColorEnum'; type: 'BLUE' | 'ORANGE' | 'AQUA' | 'GREEN' | 'MAGENTA'; };
    'DataVisualizationWeightEnum': { kind: 'ENUM'; name: 'DataVisualizationWeightEnum'; type: 'WEIGHT_50' | 'WEIGHT_100' | 'WEIGHT_200' | 'WEIGHT_300' | 'WEIGHT_400' | 'WEIGHT_500' | 'WEIGHT_600' | 'WEIGHT_700' | 'WEIGHT_800' | 'WEIGHT_900' | 'WEIGHT_950'; };
    'Date': unknown;
    'DeleteAnnotationInput': { kind: 'INPUT_OBJECT'; name: 'DeleteAnnotationInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteAnnotationPayload': { kind: 'OBJECT'; name: 'DeleteAnnotationPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DeleteContainerRegistryProtectionRuleInput': { kind: 'INPUT_OBJECT'; name: 'DeleteContainerRegistryProtectionRuleInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ContainerRegistryProtectionRuleID'; ofType: null; }; }; defaultValue: null }]; };
    'DeleteContainerRegistryProtectionRulePayload': { kind: 'OBJECT'; name: 'DeleteContainerRegistryProtectionRulePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'containerRegistryProtectionRule': { name: 'containerRegistryProtectionRule'; type: { kind: 'OBJECT'; name: 'ContainerRegistryProtectionRule'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DeleteJobsResponse': { kind: 'OBJECT'; name: 'DeleteJobsResponse'; fields: { 'completed': { name: 'completed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'deletedJobs': { name: 'deletedJobs'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'queueSize': { name: 'queueSize'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'DeletePackagesProtectionRuleInput': { kind: 'INPUT_OBJECT'; name: 'DeletePackagesProtectionRuleInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesProtectionRuleID'; ofType: null; }; }; defaultValue: null }]; };
    'DeletePackagesProtectionRulePayload': { kind: 'OBJECT'; name: 'DeletePackagesProtectionRulePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'packageProtectionRule': { name: 'packageProtectionRule'; type: { kind: 'OBJECT'; name: 'PackagesProtectionRule'; ofType: null; } }; }; };
    'DeletedNote': { kind: 'OBJECT'; name: 'DeletedNote'; fields: { 'discussionId': { name: 'discussionId'; type: { kind: 'SCALAR'; name: 'DiscussionID'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'NoteID'; ofType: null; }; } }; 'lastDiscussionNote': { name: 'lastDiscussionNote'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'Dependency': { kind: 'OBJECT'; name: 'Dependency'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GlobalID'; ofType: null; }; } }; 'licenses': { name: 'licenses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'License'; ofType: null; }; }; } }; 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'Location'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'packager': { name: 'packager'; type: { kind: 'ENUM'; name: 'PackageManager'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DependencyConnection': { kind: 'OBJECT'; name: 'DependencyConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DependencyEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Dependency'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DependencyEdge': { kind: 'OBJECT'; name: 'DependencyEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Dependency'; ofType: null; } }; }; };
    'DependencyLinkMetadata': { kind: 'UNION'; name: 'DependencyLinkMetadata'; fields: {}; possibleTypes: 'NugetDependencyLinkMetadata'; };
    'DependencyProxyBlob': { kind: 'OBJECT'; name: 'DependencyProxyBlob'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'fileName': { name: 'fileName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'size': { name: 'size'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'DependencyProxyBlobConnection': { kind: 'OBJECT'; name: 'DependencyProxyBlobConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DependencyProxyBlobEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DependencyProxyBlob'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DependencyProxyBlobEdge': { kind: 'OBJECT'; name: 'DependencyProxyBlobEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'DependencyProxyBlob'; ofType: null; } }; }; };
    'DependencyProxyBlobRegistry': { kind: 'OBJECT'; name: 'DependencyProxyBlobRegistry'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'dependencyProxyBlobId': { name: 'dependencyProxyBlobId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSyncFailure': { name: 'lastSyncFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSyncedAt': { name: 'lastSyncedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryAt': { name: 'retryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryCount': { name: 'retryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'RegistryState'; ofType: null; } }; 'verificationChecksum': { name: 'verificationChecksum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationFailure': { name: 'verificationFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationRetryAt': { name: 'verificationRetryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationRetryCount': { name: 'verificationRetryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'verificationStartedAt': { name: 'verificationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationState': { name: 'verificationState'; type: { kind: 'ENUM'; name: 'VerificationStateEnum'; ofType: null; } }; 'verifiedAt': { name: 'verifiedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'DependencyProxyBlobRegistryConnection': { kind: 'OBJECT'; name: 'DependencyProxyBlobRegistryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DependencyProxyBlobRegistryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DependencyProxyBlobRegistry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DependencyProxyBlobRegistryEdge': { kind: 'OBJECT'; name: 'DependencyProxyBlobRegistryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'DependencyProxyBlobRegistry'; ofType: null; } }; }; };
    'DependencyProxyImageTtlGroupPolicy': { kind: 'OBJECT'; name: 'DependencyProxyImageTtlGroupPolicy'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'ttl': { name: 'ttl'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'DependencyProxyManifest': { kind: 'OBJECT'; name: 'DependencyProxyManifest'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'digest': { name: 'digest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'fileName': { name: 'fileName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DependencyProxyManifestID'; ofType: null; }; } }; 'imageName': { name: 'imageName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'size': { name: 'size'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DependencyProxyManifestStatus'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'DependencyProxyManifestConnection': { kind: 'OBJECT'; name: 'DependencyProxyManifestConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DependencyProxyManifestEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DependencyProxyManifest'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DependencyProxyManifestEdge': { kind: 'OBJECT'; name: 'DependencyProxyManifestEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'DependencyProxyManifest'; ofType: null; } }; }; };
    'DependencyProxyManifestID': unknown;
    'DependencyProxyManifestRegistry': { kind: 'OBJECT'; name: 'DependencyProxyManifestRegistry'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'dependencyProxyManifestId': { name: 'dependencyProxyManifestId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSyncFailure': { name: 'lastSyncFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSyncedAt': { name: 'lastSyncedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryAt': { name: 'retryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryCount': { name: 'retryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'RegistryState'; ofType: null; } }; 'verificationChecksum': { name: 'verificationChecksum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationFailure': { name: 'verificationFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationRetryAt': { name: 'verificationRetryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationRetryCount': { name: 'verificationRetryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'verificationStartedAt': { name: 'verificationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationState': { name: 'verificationState'; type: { kind: 'ENUM'; name: 'VerificationStateEnum'; ofType: null; } }; 'verifiedAt': { name: 'verifiedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'DependencyProxyManifestRegistryConnection': { kind: 'OBJECT'; name: 'DependencyProxyManifestRegistryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DependencyProxyManifestRegistryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DependencyProxyManifestRegistry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DependencyProxyManifestRegistryEdge': { kind: 'OBJECT'; name: 'DependencyProxyManifestRegistryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'DependencyProxyManifestRegistry'; ofType: null; } }; }; };
    'DependencyProxyManifestStatus': { kind: 'ENUM'; name: 'DependencyProxyManifestStatus'; type: 'DEFAULT' | 'PENDING_DESTRUCTION' | 'PROCESSING' | 'ERROR'; };
    'DependencyProxyPackagesSetting': { kind: 'OBJECT'; name: 'DependencyProxyPackagesSetting'; fields: { 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'mavenExternalRegistryUrl': { name: 'mavenExternalRegistryUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'mavenExternalRegistryUsername': { name: 'mavenExternalRegistryUsername'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DependencyProxySetting': { kind: 'OBJECT'; name: 'DependencyProxySetting'; fields: { 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DependencySort': { kind: 'ENUM'; name: 'DependencySort'; type: 'NAME_DESC' | 'NAME_ASC' | 'PACKAGER_DESC' | 'PACKAGER_ASC' | 'SEVERITY_DESC' | 'SEVERITY_ASC'; };
    'Deployment': { kind: 'OBJECT'; name: 'Deployment'; fields: { 'approvalSummary': { name: 'approvalSummary'; type: { kind: 'OBJECT'; name: 'DeploymentApprovalSummary'; ofType: null; } }; 'approvals': { name: 'approvals'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeploymentApproval'; ofType: null; }; }; } }; 'commit': { name: 'commit'; type: { kind: 'OBJECT'; name: 'Commit'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'finishedAt': { name: 'finishedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'iid': { name: 'iid'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'CiJob'; ofType: null; } }; 'pendingApprovalCount': { name: 'pendingApprovalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'ref': { name: 'ref'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'refPath': { name: 'refPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'sha': { name: 'sha'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'DeploymentStatus'; ofType: null; } }; 'tag': { name: 'tag'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'tags': { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeploymentTag'; ofType: null; }; }; } }; 'triggerer': { name: 'triggerer'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeploymentPermissions'; ofType: null; }; } }; }; };
    'DeploymentApproval': { kind: 'OBJECT'; name: 'DeploymentApproval'; fields: { 'comment': { name: 'comment'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'DeploymentsApprovalStatus'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; }; };
    'DeploymentApprovalSummary': { kind: 'OBJECT'; name: 'DeploymentApprovalSummary'; fields: { 'rules': { name: 'rules'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProtectedEnvironmentApprovalRuleForSummary'; ofType: null; }; }; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'DeploymentApprovalSummaryStatus'; ofType: null; } }; 'totalPendingApprovalCount': { name: 'totalPendingApprovalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'totalRequiredApprovals': { name: 'totalRequiredApprovals'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'DeploymentApprovalSummaryStatus': { kind: 'ENUM'; name: 'DeploymentApprovalSummaryStatus'; type: 'APPROVED' | 'REJECTED' | 'PENDING_APPROVAL'; };
    'DeploymentConnection': { kind: 'OBJECT'; name: 'DeploymentConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DeploymentEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Deployment'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DeploymentEdge': { kind: 'OBJECT'; name: 'DeploymentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Deployment'; ofType: null; } }; }; };
    'DeploymentID': unknown;
    'DeploymentPermissions': { kind: 'OBJECT'; name: 'DeploymentPermissions'; fields: { 'approveDeployment': { name: 'approveDeployment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'destroyDeployment': { name: 'destroyDeployment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updateDeployment': { name: 'updateDeployment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DeploymentStatus': { kind: 'ENUM'; name: 'DeploymentStatus'; type: 'CREATED' | 'RUNNING' | 'SUCCESS' | 'FAILED' | 'CANCELED' | 'SKIPPED' | 'BLOCKED'; };
    'DeploymentTag': { kind: 'OBJECT'; name: 'DeploymentTag'; fields: { 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'webPath': { name: 'webPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DeploymentTier': { kind: 'ENUM'; name: 'DeploymentTier'; type: 'PRODUCTION' | 'STAGING' | 'TESTING' | 'DEVELOPMENT' | 'OTHER'; };
    'DeploymentsApprovalStatus': { kind: 'ENUM'; name: 'DeploymentsApprovalStatus'; type: 'APPROVED' | 'REJECTED'; };
    'DeploymentsOrderByInput': { kind: 'INPUT_OBJECT'; name: 'DeploymentsOrderByInput'; inputFields: [{ name: 'createdAt'; type: { kind: 'ENUM'; name: 'SortDirectionEnum'; ofType: null; }; defaultValue: null }, { name: 'finishedAt'; type: { kind: 'ENUM'; name: 'SortDirectionEnum'; ofType: null; }; defaultValue: null }]; };
    'DescriptionVersion': { kind: 'OBJECT'; name: 'DescriptionVersion'; fields: { 'canDelete': { name: 'canDelete'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'deletePath': { name: 'deletePath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deleted': { name: 'deleted'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'diff': { name: 'diff'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'diffPath': { name: 'diffPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DescriptionVersionID'; ofType: null; }; } }; }; };
    'DescriptionVersionID': unknown;
    'Design': { kind: 'OBJECT'; name: 'Design'; fields: { 'commenters': { name: 'commenters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; }; } }; 'currentUserTodos': { name: 'currentUserTodos'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TodoConnection'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'diffRefs': { name: 'diffRefs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiffRefs'; ofType: null; }; } }; 'discussions': { name: 'discussions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscussionConnection'; ofType: null; }; } }; 'event': { name: 'event'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DesignVersionEvent'; ofType: null; }; } }; 'filename': { name: 'filename'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'fullPath': { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'imageV432x230': { name: 'imageV432x230'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'issue': { name: 'issue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Issue'; ofType: null; }; } }; 'notes': { name: 'notes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NoteConnection'; ofType: null; }; } }; 'notesCount': { name: 'notesCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'project': { name: 'project'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; } }; 'versions': { name: 'versions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DesignVersionConnection'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DesignAtVersion': { kind: 'OBJECT'; name: 'DesignAtVersion'; fields: { 'design': { name: 'design'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Design'; ofType: null; }; } }; 'diffRefs': { name: 'diffRefs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiffRefs'; ofType: null; }; } }; 'event': { name: 'event'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DesignVersionEvent'; ofType: null; }; } }; 'filename': { name: 'filename'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'fullPath': { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'imageV432x230': { name: 'imageV432x230'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'issue': { name: 'issue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Issue'; ofType: null; }; } }; 'notesCount': { name: 'notesCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'project': { name: 'project'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DesignVersion'; ofType: null; }; } }; }; };
    'DesignAtVersionConnection': { kind: 'OBJECT'; name: 'DesignAtVersionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DesignAtVersionEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DesignAtVersion'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DesignAtVersionEdge': { kind: 'OBJECT'; name: 'DesignAtVersionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'DesignAtVersion'; ofType: null; } }; }; };
    'DesignCollection': { kind: 'OBJECT'; name: 'DesignCollection'; fields: { 'copyState': { name: 'copyState'; type: { kind: 'ENUM'; name: 'DesignCollectionCopyState'; ofType: null; } }; 'design': { name: 'design'; type: { kind: 'OBJECT'; name: 'Design'; ofType: null; } }; 'designAtVersion': { name: 'designAtVersion'; type: { kind: 'OBJECT'; name: 'DesignAtVersion'; ofType: null; } }; 'designs': { name: 'designs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DesignConnection'; ofType: null; }; } }; 'issue': { name: 'issue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Issue'; ofType: null; }; } }; 'project': { name: 'project'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'OBJECT'; name: 'DesignVersion'; ofType: null; } }; 'versions': { name: 'versions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DesignVersionConnection'; ofType: null; }; } }; }; };
    'DesignCollectionCopyState': { kind: 'ENUM'; name: 'DesignCollectionCopyState'; type: 'READY' | 'IN_PROGRESS' | 'ERROR'; };
    'DesignConnection': { kind: 'OBJECT'; name: 'DesignConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DesignEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Design'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DesignEdge': { kind: 'OBJECT'; name: 'DesignEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Design'; ofType: null; } }; }; };
    'DesignFields': { kind: 'INTERFACE'; name: 'DesignFields'; fields: { 'diffRefs': { name: 'diffRefs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiffRefs'; ofType: null; }; } }; 'event': { name: 'event'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DesignVersionEvent'; ofType: null; }; } }; 'filename': { name: 'filename'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'fullPath': { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'imageV432x230': { name: 'imageV432x230'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'issue': { name: 'issue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Issue'; ofType: null; }; } }; 'notesCount': { name: 'notesCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'project': { name: 'project'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; } }; }; possibleTypes: 'Design' | 'DesignAtVersion'; };
    'DesignManagement': { kind: 'OBJECT'; name: 'DesignManagement'; fields: { 'designAtVersion': { name: 'designAtVersion'; type: { kind: 'OBJECT'; name: 'DesignAtVersion'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'OBJECT'; name: 'DesignVersion'; ofType: null; } }; }; };
    'DesignManagementDeleteInput': { kind: 'INPUT_OBJECT'; name: 'DesignManagementDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'filenames'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'DesignManagementDeletePayload': { kind: 'OBJECT'; name: 'DesignManagementDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'version': { name: 'version'; type: { kind: 'OBJECT'; name: 'DesignVersion'; ofType: null; } }; }; };
    'DesignManagementDesignAtVersionID': unknown;
    'DesignManagementDesignID': unknown;
    'DesignManagementMoveInput': { kind: 'INPUT_OBJECT'; name: 'DesignManagementMoveInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DesignManagementDesignID'; ofType: null; }; }; defaultValue: null }, { name: 'previous'; type: { kind: 'SCALAR'; name: 'DesignManagementDesignID'; ofType: null; }; defaultValue: null }, { name: 'next'; type: { kind: 'SCALAR'; name: 'DesignManagementDesignID'; ofType: null; }; defaultValue: null }]; };
    'DesignManagementMovePayload': { kind: 'OBJECT'; name: 'DesignManagementMovePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'designCollection': { name: 'designCollection'; type: { kind: 'OBJECT'; name: 'DesignCollection'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DesignManagementRepositoryRegistry': { kind: 'OBJECT'; name: 'DesignManagementRepositoryRegistry'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'designManagementRepositoryId': { name: 'designManagementRepositoryId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSyncFailure': { name: 'lastSyncFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSyncedAt': { name: 'lastSyncedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryAt': { name: 'retryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryCount': { name: 'retryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'RegistryState'; ofType: null; } }; 'verificationChecksum': { name: 'verificationChecksum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationFailure': { name: 'verificationFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationRetryAt': { name: 'verificationRetryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationRetryCount': { name: 'verificationRetryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'verificationStartedAt': { name: 'verificationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationState': { name: 'verificationState'; type: { kind: 'ENUM'; name: 'VerificationStateEnum'; ofType: null; } }; 'verifiedAt': { name: 'verifiedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'DesignManagementRepositoryRegistryConnection': { kind: 'OBJECT'; name: 'DesignManagementRepositoryRegistryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DesignManagementRepositoryRegistryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DesignManagementRepositoryRegistry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DesignManagementRepositoryRegistryEdge': { kind: 'OBJECT'; name: 'DesignManagementRepositoryRegistryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'DesignManagementRepositoryRegistry'; ofType: null; } }; }; };
    'DesignManagementUpdateInput': { kind: 'INPUT_OBJECT'; name: 'DesignManagementUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DesignManagementDesignID'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'DesignManagementUpdatePayload': { kind: 'OBJECT'; name: 'DesignManagementUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'design': { name: 'design'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Design'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DesignManagementUploadInput': { kind: 'INPUT_OBJECT'; name: 'DesignManagementUploadInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'files'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Upload'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'DesignManagementUploadPayload': { kind: 'OBJECT'; name: 'DesignManagementUploadPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'designs': { name: 'designs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Design'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'skippedDesigns': { name: 'skippedDesigns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Design'; ofType: null; }; }; }; } }; }; };
    'DesignManagementVersionID': unknown;
    'DesignVersion': { kind: 'OBJECT'; name: 'DesignVersion'; fields: { 'author': { name: 'author'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'designAtVersion': { name: 'designAtVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DesignAtVersion'; ofType: null; }; } }; 'designs': { name: 'designs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DesignConnection'; ofType: null; }; } }; 'designsAtVersion': { name: 'designsAtVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DesignAtVersionConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'sha': { name: 'sha'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'DesignVersionConnection': { kind: 'OBJECT'; name: 'DesignVersionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DesignVersionEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DesignVersion'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DesignVersionEdge': { kind: 'OBJECT'; name: 'DesignVersionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'DesignVersion'; ofType: null; } }; }; };
    'DesignVersionEvent': { kind: 'ENUM'; name: 'DesignVersionEvent'; type: 'NONE' | 'CREATION' | 'MODIFICATION' | 'DELETION'; };
    'DestroyBoardInput': { kind: 'INPUT_OBJECT'; name: 'DestroyBoardInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BoardID'; ofType: null; }; }; defaultValue: null }]; };
    'DestroyBoardListInput': { kind: 'INPUT_OBJECT'; name: 'DestroyBoardListInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'listId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ListID'; ofType: null; }; }; defaultValue: null }]; };
    'DestroyBoardListPayload': { kind: 'OBJECT'; name: 'DestroyBoardListPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'list': { name: 'list'; type: { kind: 'OBJECT'; name: 'BoardList'; ofType: null; } }; }; };
    'DestroyBoardPayload': { kind: 'OBJECT'; name: 'DestroyBoardPayload'; fields: { 'board': { name: 'board'; type: { kind: 'OBJECT'; name: 'Board'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DestroyComplianceFrameworkInput': { kind: 'INPUT_OBJECT'; name: 'DestroyComplianceFrameworkInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ComplianceManagementFrameworkID'; ofType: null; }; }; defaultValue: null }]; };
    'DestroyComplianceFrameworkPayload': { kind: 'OBJECT'; name: 'DestroyComplianceFrameworkPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DestroyContainerRepositoryInput': { kind: 'INPUT_OBJECT'; name: 'DestroyContainerRepositoryInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ContainerRepositoryID'; ofType: null; }; }; defaultValue: null }]; };
    'DestroyContainerRepositoryPayload': { kind: 'OBJECT'; name: 'DestroyContainerRepositoryPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'containerRepository': { name: 'containerRepository'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ContainerRepository'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DestroyContainerRepositoryTagsInput': { kind: 'INPUT_OBJECT'; name: 'DestroyContainerRepositoryTagsInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ContainerRepositoryID'; ofType: null; }; }; defaultValue: null }, { name: 'tagNames'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'DestroyContainerRepositoryTagsPayload': { kind: 'OBJECT'; name: 'DestroyContainerRepositoryTagsPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletedTagNames': { name: 'deletedTagNames'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DestroyCustomEmojiInput': { kind: 'INPUT_OBJECT'; name: 'DestroyCustomEmojiInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CustomEmojiID'; ofType: null; }; }; defaultValue: null }]; };
    'DestroyCustomEmojiPayload': { kind: 'OBJECT'; name: 'DestroyCustomEmojiPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'customEmoji': { name: 'customEmoji'; type: { kind: 'OBJECT'; name: 'CustomEmoji'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DestroyEpicBoardInput': { kind: 'INPUT_OBJECT'; name: 'DestroyEpicBoardInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BoardsEpicBoardID'; ofType: null; }; }; defaultValue: null }]; };
    'DestroyEpicBoardPayload': { kind: 'OBJECT'; name: 'DestroyEpicBoardPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'epicBoard': { name: 'epicBoard'; type: { kind: 'OBJECT'; name: 'EpicBoard'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DestroyNoteInput': { kind: 'INPUT_OBJECT'; name: 'DestroyNoteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'NoteID'; ofType: null; }; }; defaultValue: null }]; };
    'DestroyNotePayload': { kind: 'OBJECT'; name: 'DestroyNotePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'note': { name: 'note'; type: { kind: 'OBJECT'; name: 'Note'; ofType: null; } }; }; };
    'DestroyPackageFileInput': { kind: 'INPUT_OBJECT'; name: 'DestroyPackageFileInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesPackageFileID'; ofType: null; }; }; defaultValue: null }]; };
    'DestroyPackageFilePayload': { kind: 'OBJECT'; name: 'DestroyPackageFilePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DestroyPackageFilesInput': { kind: 'INPUT_OBJECT'; name: 'DestroyPackageFilesInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'ids'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesPackageFileID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'DestroyPackageFilesPayload': { kind: 'OBJECT'; name: 'DestroyPackageFilesPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DestroyPackageInput': { kind: 'INPUT_OBJECT'; name: 'DestroyPackageInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesPackageID'; ofType: null; }; }; defaultValue: null }]; };
    'DestroyPackagePayload': { kind: 'OBJECT'; name: 'DestroyPackagePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DestroyPackagesInput': { kind: 'INPUT_OBJECT'; name: 'DestroyPackagesInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesPackageID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'DestroyPackagesPayload': { kind: 'OBJECT'; name: 'DestroyPackagesPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'DestroySnippetInput': { kind: 'INPUT_OBJECT'; name: 'DestroySnippetInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'SnippetID'; ofType: null; }; }; defaultValue: null }]; };
    'DestroySnippetPayload': { kind: 'OBJECT'; name: 'DestroySnippetPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'snippet': { name: 'snippet'; type: { kind: 'OBJECT'; name: 'Snippet'; ofType: null; } }; }; };
    'DetailedImportStatus': { kind: 'OBJECT'; name: 'DetailedImportStatus'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ProjectImportStateID'; ofType: null; } }; 'lastError': { name: 'lastError'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSuccessfulUpdateAt': { name: 'lastSuccessfulUpdateAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'lastUpdateAt': { name: 'lastUpdateAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'lastUpdateStartedAt': { name: 'lastUpdateStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DetailedMergeStatus': { kind: 'ENUM'; name: 'DetailedMergeStatus'; type: 'UNCHECKED' | 'CHECKING' | 'MERGEABLE' | 'COMMITS_STATUS' | 'CI_MUST_PASS' | 'CI_STILL_RUNNING' | 'DISCUSSIONS_NOT_RESOLVED' | 'DRAFT_STATUS' | 'NOT_OPEN' | 'NOT_APPROVED' | 'BLOCKED_STATUS' | 'EXTERNAL_STATUS_CHECKS' | 'PREPARING' | 'JIRA_ASSOCIATION' | 'CONFLICT' | 'NEED_REBASE' | 'REQUESTED_CHANGES'; };
    'DetailedStatus': { kind: 'OBJECT'; name: 'DetailedStatus'; fields: { 'action': { name: 'action'; type: { kind: 'OBJECT'; name: 'StatusAction'; ofType: null; } }; 'detailsPath': { name: 'detailsPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'favicon': { name: 'favicon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'group': { name: 'group'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hasDetails': { name: 'hasDetails'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'icon': { name: 'icon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'label': { name: 'label'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'text': { name: 'text'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tooltip': { name: 'tooltip'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DevopsAdoptionEnabledNamespace': { kind: 'OBJECT'; name: 'DevopsAdoptionEnabledNamespace'; fields: { 'displayNamespace': { name: 'displayNamespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'latestSnapshot': { name: 'latestSnapshot'; type: { kind: 'OBJECT'; name: 'DevopsAdoptionSnapshot'; ofType: null; } }; 'namespace': { name: 'namespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; 'snapshots': { name: 'snapshots'; type: { kind: 'OBJECT'; name: 'DevopsAdoptionSnapshotConnection'; ofType: null; } }; }; };
    'DevopsAdoptionEnabledNamespaceConnection': { kind: 'OBJECT'; name: 'DevopsAdoptionEnabledNamespaceConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DevopsAdoptionEnabledNamespaceEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DevopsAdoptionEnabledNamespace'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DevopsAdoptionEnabledNamespaceEdge': { kind: 'OBJECT'; name: 'DevopsAdoptionEnabledNamespaceEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'DevopsAdoptionEnabledNamespace'; ofType: null; } }; }; };
    'DevopsAdoptionSnapshot': { kind: 'OBJECT'; name: 'DevopsAdoptionSnapshot'; fields: { 'codeOwnersUsedCount': { name: 'codeOwnersUsedCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'coverageFuzzingEnabledCount': { name: 'coverageFuzzingEnabledCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'dastEnabledCount': { name: 'dastEnabledCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'dependencyScanningEnabledCount': { name: 'dependencyScanningEnabledCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'deploySucceeded': { name: 'deploySucceeded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'endTime': { name: 'endTime'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'issueOpened': { name: 'issueOpened'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'mergeRequestApproved': { name: 'mergeRequestApproved'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'mergeRequestOpened': { name: 'mergeRequestOpened'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'pipelineSucceeded': { name: 'pipelineSucceeded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'recordedAt': { name: 'recordedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'runnerConfigured': { name: 'runnerConfigured'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'sastEnabledCount': { name: 'sastEnabledCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'startTime': { name: 'startTime'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'totalProjectsCount': { name: 'totalProjectsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'vulnerabilityManagementUsedCount': { name: 'vulnerabilityManagementUsedCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'DevopsAdoptionSnapshotConnection': { kind: 'OBJECT'; name: 'DevopsAdoptionSnapshotConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DevopsAdoptionSnapshotEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DevopsAdoptionSnapshot'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DevopsAdoptionSnapshotEdge': { kind: 'OBJECT'; name: 'DevopsAdoptionSnapshotEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'DevopsAdoptionSnapshot'; ofType: null; } }; }; };
    'Diff': { kind: 'OBJECT'; name: 'Diff'; fields: { 'aMode': { name: 'aMode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bMode': { name: 'bMode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deletedFile': { name: 'deletedFile'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'diff': { name: 'diff'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'newFile': { name: 'newFile'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'newPath': { name: 'newPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'oldPath': { name: 'oldPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'renamedFile': { name: 'renamedFile'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DiffImagePositionInput': { kind: 'INPUT_OBJECT'; name: 'DiffImagePositionInput'; inputFields: [{ name: 'baseSha'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'headSha'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'startSha'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'paths'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DiffPathsInput'; ofType: null; }; }; defaultValue: null }, { name: 'height'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'width'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'x'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'y'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'DiffNoteID': unknown;
    'DiffPathsInput': { kind: 'INPUT_OBJECT'; name: 'DiffPathsInput'; inputFields: [{ name: 'newPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'oldPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'DiffPosition': { kind: 'OBJECT'; name: 'DiffPosition'; fields: { 'diffRefs': { name: 'diffRefs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiffRefs'; ofType: null; }; } }; 'filePath': { name: 'filePath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'height': { name: 'height'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'newLine': { name: 'newLine'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'newPath': { name: 'newPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'oldLine': { name: 'oldLine'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'oldPath': { name: 'oldPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'positionType': { name: 'positionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiffPositionType'; ofType: null; }; } }; 'width': { name: 'width'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'x': { name: 'x'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'y': { name: 'y'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'DiffPositionInput': { kind: 'INPUT_OBJECT'; name: 'DiffPositionInput'; inputFields: [{ name: 'baseSha'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'headSha'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'startSha'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'paths'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DiffPathsInput'; ofType: null; }; }; defaultValue: null }, { name: 'newLine'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'oldLine'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'DiffPositionType': { kind: 'ENUM'; name: 'DiffPositionType'; type: 'text' | 'image' | 'file'; };
    'DiffRefs': { kind: 'OBJECT'; name: 'DiffRefs'; fields: { 'baseSha': { name: 'baseSha'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'headSha': { name: 'headSha'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'startSha': { name: 'startSha'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DiffStats': { kind: 'OBJECT'; name: 'DiffStats'; fields: { 'additions': { name: 'additions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'deletions': { name: 'deletions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DiffStatsSummary': { kind: 'OBJECT'; name: 'DiffStatsSummary'; fields: { 'additions': { name: 'additions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'changes': { name: 'changes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'deletions': { name: 'deletions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'fileCount': { name: 'fileCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'DisableDevopsAdoptionNamespaceInput': { kind: 'INPUT_OBJECT'; name: 'DisableDevopsAdoptionNamespaceInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AnalyticsDevopsAdoptionEnabledNamespaceID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'DisableDevopsAdoptionNamespacePayload': { kind: 'OBJECT'; name: 'DisableDevopsAdoptionNamespacePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'Discussion': { kind: 'OBJECT'; name: 'Discussion'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DiscussionID'; ofType: null; }; } }; 'noteable': { name: 'noteable'; type: { kind: 'UNION'; name: 'NoteableType'; ofType: null; } }; 'notes': { name: 'notes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NoteConnection'; ofType: null; }; } }; 'replyId': { name: 'replyId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DiscussionID'; ofType: null; }; } }; 'resolvable': { name: 'resolvable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'resolved': { name: 'resolved'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'resolvedAt': { name: 'resolvedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'resolvedBy': { name: 'resolvedBy'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; }; };
    'DiscussionConnection': { kind: 'OBJECT'; name: 'DiscussionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscussionEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Discussion'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'DiscussionEdge': { kind: 'OBJECT'; name: 'DiscussionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Discussion'; ofType: null; } }; }; };
    'DiscussionID': unknown;
    'DiscussionToggleResolveInput': { kind: 'INPUT_OBJECT'; name: 'DiscussionToggleResolveInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DiscussionID'; ofType: null; }; }; defaultValue: null }, { name: 'resolve'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'DiscussionToggleResolvePayload': { kind: 'OBJECT'; name: 'DiscussionToggleResolvePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'discussion': { name: 'discussion'; type: { kind: 'OBJECT'; name: 'Discussion'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'Dora': { kind: 'OBJECT'; name: 'Dora'; fields: { 'metrics': { name: 'metrics'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DoraMetric'; ofType: null; }; }; } }; }; };
    'DoraMetric': { kind: 'OBJECT'; name: 'DoraMetric'; fields: { 'changeFailureRate': { name: 'changeFailureRate'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'date': { name: 'date'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'deploymentFrequency': { name: 'deploymentFrequency'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'leadTimeForChanges': { name: 'leadTimeForChanges'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'timeToRestoreService': { name: 'timeToRestoreService'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'DoraMetricBucketingInterval': { kind: 'ENUM'; name: 'DoraMetricBucketingInterval'; type: 'ALL' | 'MONTHLY' | 'DAILY'; };
    'DoraMetricType': { kind: 'ENUM'; name: 'DoraMetricType'; type: 'DEPLOYMENT_FREQUENCY' | 'LEAD_TIME_FOR_CHANGES' | 'TIME_TO_RESTORE_SERVICE' | 'CHANGE_FAILURE_RATE'; };
    'DoraPerformanceScoreCount': { kind: 'OBJECT'; name: 'DoraPerformanceScoreCount'; fields: { 'highProjectsCount': { name: 'highProjectsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'lowProjectsCount': { name: 'lowProjectsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'mediumProjectsCount': { name: 'mediumProjectsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'metricName': { name: 'metricName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'noDataProjectsCount': { name: 'noDataProjectsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'DoraPerformanceScoreCountConnection': { kind: 'OBJECT'; name: 'DoraPerformanceScoreCountConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DoraPerformanceScoreCountEdge'; ofType: null; }; } }; 'noDoraDataProjectsCount': { name: 'noDoraDataProjectsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DoraPerformanceScoreCount'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalProjectsCount': { name: 'totalProjectsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'DoraPerformanceScoreCountEdge': { kind: 'OBJECT'; name: 'DoraPerformanceScoreCountEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'DoraPerformanceScoreCount'; ofType: null; } }; }; };
    'DoraProjectFilterInput': { kind: 'INPUT_OBJECT'; name: 'DoraProjectFilterInput'; inputFields: [{ name: 'topic'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'DuoUserFeedbackInput': { kind: 'INPUT_OBJECT'; name: 'DuoUserFeedbackInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'agentVersionId'; type: { kind: 'SCALAR'; name: 'AiAgentVersionID'; ofType: null; }; defaultValue: null }, { name: 'aiMessageId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'extendedFeedback'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'selectedFeedbackOptions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'DuoUserFeedbackPayload': { kind: 'OBJECT'; name: 'DuoUserFeedbackPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'Duration': unknown;
    'EchoCreateInput': { kind: 'INPUT_OBJECT'; name: 'EchoCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'messages'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'EchoCreatePayload': { kind: 'OBJECT'; name: 'EchoCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'echoes': { name: 'echoes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'EgressNode': { kind: 'OBJECT'; name: 'EgressNode'; fields: { 'artifactsEgress': { name: 'artifactsEgress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'date': { name: 'date'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'packagesEgress': { name: 'packagesEgress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'registryEgress': { name: 'registryEgress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'repositoryEgress': { name: 'repositoryEgress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'totalEgress': { name: 'totalEgress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; }; };
    'EgressNodeConnection': { kind: 'OBJECT'; name: 'EgressNodeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EgressNodeEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EgressNode'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'EgressNodeEdge': { kind: 'OBJECT'; name: 'EgressNodeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'EgressNode'; ofType: null; } }; }; };
    'Email': { kind: 'OBJECT'; name: 'Email'; fields: { 'confirmedAt': { name: 'confirmedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'email': { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'EmailConnection': { kind: 'OBJECT'; name: 'EmailConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EmailEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Email'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'EmailEdge': { kind: 'OBJECT'; name: 'EmailEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Email'; ofType: null; } }; }; };
    'EmailID': unknown;
    'EnableDevopsAdoptionNamespaceInput': { kind: 'INPUT_OBJECT'; name: 'EnableDevopsAdoptionNamespaceInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'namespaceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'NamespaceID'; ofType: null; }; }; defaultValue: null }, { name: 'displayNamespaceId'; type: { kind: 'SCALAR'; name: 'NamespaceID'; ofType: null; }; defaultValue: null }]; };
    'EnableDevopsAdoptionNamespacePayload': { kind: 'OBJECT'; name: 'EnableDevopsAdoptionNamespacePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'enabledNamespace': { name: 'enabledNamespace'; type: { kind: 'OBJECT'; name: 'DevopsAdoptionEnabledNamespace'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'Entry': { kind: 'INTERFACE'; name: 'Entry'; fields: { 'flatPath': { name: 'flatPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sha': { name: 'sha'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EntryType'; ofType: null; }; } }; }; possibleTypes: 'Blob' | 'Submodule' | 'TreeEntry'; };
    'EntryType': { kind: 'ENUM'; name: 'EntryType'; type: 'tree' | 'blob' | 'commit'; };
    'Environment': { kind: 'OBJECT'; name: 'Environment'; fields: { 'autoDeleteAt': { name: 'autoDeleteAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'autoStopAt': { name: 'autoStopAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'clusterAgent': { name: 'clusterAgent'; type: { kind: 'OBJECT'; name: 'ClusterAgent'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'deployFreezes': { name: 'deployFreezes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CiFreezePeriod'; ofType: null; }; }; } }; 'deployments': { name: 'deployments'; type: { kind: 'OBJECT'; name: 'DeploymentConnection'; ofType: null; } }; 'deploymentsDisplayCount': { name: 'deploymentsDisplayCount'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'environmentType': { name: 'environmentType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'externalUrl': { name: 'externalUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fluxResourcePath': { name: 'fluxResourcePath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'kubernetesNamespace': { name: 'kubernetesNamespace'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastDeployment': { name: 'lastDeployment'; type: { kind: 'OBJECT'; name: 'Deployment'; ofType: null; } }; 'latestOpenedMostSevereAlert': { name: 'latestOpenedMostSevereAlert'; type: { kind: 'OBJECT'; name: 'AlertManagementAlert'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'protectedEnvironments': { name: 'protectedEnvironments'; type: { kind: 'OBJECT'; name: 'ProtectedEnvironmentConnection'; ofType: null; } }; 'slug': { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'tier': { name: 'tier'; type: { kind: 'ENUM'; name: 'DeploymentTier'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EnvironmentPermissions'; ofType: null; }; } }; }; };
    'EnvironmentConnection': { kind: 'OBJECT'; name: 'EnvironmentConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EnvironmentEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Environment'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'EnvironmentCreateInput': { kind: 'INPUT_OBJECT'; name: 'EnvironmentCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'externalUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'tier'; type: { kind: 'ENUM'; name: 'DeploymentTier'; ofType: null; }; defaultValue: null }, { name: 'clusterAgentId'; type: { kind: 'SCALAR'; name: 'ClustersAgentID'; ofType: null; }; defaultValue: null }, { name: 'kubernetesNamespace'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fluxResourcePath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'EnvironmentCreatePayload': { kind: 'OBJECT'; name: 'EnvironmentCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'environment': { name: 'environment'; type: { kind: 'OBJECT'; name: 'Environment'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'EnvironmentDeleteInput': { kind: 'INPUT_OBJECT'; name: 'EnvironmentDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EnvironmentID'; ofType: null; }; }; defaultValue: null }]; };
    'EnvironmentDeletePayload': { kind: 'OBJECT'; name: 'EnvironmentDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'EnvironmentEdge': { kind: 'OBJECT'; name: 'EnvironmentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Environment'; ofType: null; } }; }; };
    'EnvironmentID': unknown;
    'EnvironmentPermissions': { kind: 'OBJECT'; name: 'EnvironmentPermissions'; fields: { 'destroyEnvironment': { name: 'destroyEnvironment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'stopEnvironment': { name: 'stopEnvironment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updateEnvironment': { name: 'updateEnvironment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'EnvironmentStopInput': { kind: 'INPUT_OBJECT'; name: 'EnvironmentStopInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EnvironmentID'; ofType: null; }; }; defaultValue: null }, { name: 'force'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'EnvironmentStopPayload': { kind: 'OBJECT'; name: 'EnvironmentStopPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'environment': { name: 'environment'; type: { kind: 'OBJECT'; name: 'Environment'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'EnvironmentUpdateInput': { kind: 'INPUT_OBJECT'; name: 'EnvironmentUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EnvironmentID'; ofType: null; }; }; defaultValue: null }, { name: 'externalUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'tier'; type: { kind: 'ENUM'; name: 'DeploymentTier'; ofType: null; }; defaultValue: null }, { name: 'clusterAgentId'; type: { kind: 'SCALAR'; name: 'ClustersAgentID'; ofType: null; }; defaultValue: null }, { name: 'kubernetesNamespace'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fluxResourcePath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'EnvironmentUpdatePayload': { kind: 'OBJECT'; name: 'EnvironmentUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'environment': { name: 'environment'; type: { kind: 'OBJECT'; name: 'Environment'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'EnvironmentsCanaryIngressUpdateInput': { kind: 'INPUT_OBJECT'; name: 'EnvironmentsCanaryIngressUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EnvironmentID'; ofType: null; }; }; defaultValue: null }, { name: 'weight'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'EnvironmentsCanaryIngressUpdatePayload': { kind: 'OBJECT'; name: 'EnvironmentsCanaryIngressUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'Epic': { kind: 'OBJECT'; name: 'Epic'; fields: { 'ancestors': { name: 'ancestors'; type: { kind: 'OBJECT'; name: 'EpicConnection'; ofType: null; } }; 'author': { name: 'author'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; 'awardEmoji': { name: 'awardEmoji'; type: { kind: 'OBJECT'; name: 'AwardEmojiConnection'; ofType: null; } }; 'blocked': { name: 'blocked'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'blockedByCount': { name: 'blockedByCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'blockedByEpics': { name: 'blockedByEpics'; type: { kind: 'OBJECT'; name: 'EpicConnection'; ofType: null; } }; 'blockingCount': { name: 'blockingCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'children': { name: 'children'; type: { kind: 'OBJECT'; name: 'EpicConnection'; ofType: null; } }; 'closedAt': { name: 'closedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'color': { name: 'color'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'commenters': { name: 'commenters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; }; } }; 'confidential': { name: 'confidential'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'currentUserTodos': { name: 'currentUserTodos'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TodoConnection'; ofType: null; }; } }; 'defaultProjectForIssueCreation': { name: 'defaultProjectForIssueCreation'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'descendantCounts': { name: 'descendantCounts'; type: { kind: 'OBJECT'; name: 'EpicDescendantCount'; ofType: null; } }; 'descendantWeightSum': { name: 'descendantWeightSum'; type: { kind: 'OBJECT'; name: 'EpicDescendantWeights'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'discussions': { name: 'discussions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscussionConnection'; ofType: null; }; } }; 'downvotes': { name: 'downvotes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'dueDate': { name: 'dueDate'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'dueDateFixed': { name: 'dueDateFixed'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'dueDateFromInheritedSource': { name: 'dueDateFromInheritedSource'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'dueDateFromMilestones': { name: 'dueDateFromMilestones'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'dueDateIsFixed': { name: 'dueDateIsFixed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'events': { name: 'events'; type: { kind: 'OBJECT'; name: 'EventConnection'; ofType: null; } }; 'group': { name: 'group'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Group'; ofType: null; }; } }; 'hasChildren': { name: 'hasChildren'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasIssues': { name: 'hasIssues'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasParent': { name: 'hasParent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'healthStatus': { name: 'healthStatus'; type: { kind: 'OBJECT'; name: 'EpicHealthStatus'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'iid': { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'issues': { name: 'issues'; type: { kind: 'OBJECT'; name: 'EpicIssueConnection'; ofType: null; } }; 'labels': { name: 'labels'; type: { kind: 'OBJECT'; name: 'LabelConnection'; ofType: null; } }; 'notes': { name: 'notes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NoteConnection'; ofType: null; }; } }; 'parent': { name: 'parent'; type: { kind: 'OBJECT'; name: 'Epic'; ofType: null; } }; 'participants': { name: 'participants'; type: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; } }; 'reference': { name: 'reference'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'relationPath': { name: 'relationPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'relativePosition': { name: 'relativePosition'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'startDate': { name: 'startDate'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'startDateFixed': { name: 'startDateFixed'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'startDateFromInheritedSource': { name: 'startDateFromInheritedSource'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'startDateFromMilestones': { name: 'startDateFromMilestones'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'startDateIsFixed': { name: 'startDateIsFixed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EpicState'; ofType: null; }; } }; 'subscribed': { name: 'subscribed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'textColor': { name: 'textColor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'titleHtml': { name: 'titleHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'upvotes': { name: 'upvotes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'userDiscussionsCount': { name: 'userDiscussionsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'userNotesCount': { name: 'userNotesCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EpicPermissions'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'EpicAddIssueInput': { kind: 'INPUT_OBJECT'; name: 'EpicAddIssueInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'issueIid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'EpicAddIssuePayload': { kind: 'OBJECT'; name: 'EpicAddIssuePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'epic': { name: 'epic'; type: { kind: 'OBJECT'; name: 'Epic'; ofType: null; } }; 'epicIssue': { name: 'epicIssue'; type: { kind: 'OBJECT'; name: 'EpicIssue'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'EpicBoard': { kind: 'OBJECT'; name: 'EpicBoard'; fields: { 'displayColors': { name: 'displayColors'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'hideBacklogList': { name: 'hideBacklogList'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'hideClosedList': { name: 'hideClosedList'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BoardsEpicBoardID'; ofType: null; }; } }; 'labels': { name: 'labels'; type: { kind: 'OBJECT'; name: 'LabelConnection'; ofType: null; } }; 'lists': { name: 'lists'; type: { kind: 'OBJECT'; name: 'EpicListConnection'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'EpicBoardConnection': { kind: 'OBJECT'; name: 'EpicBoardConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EpicBoardEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EpicBoard'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'EpicBoardCreateInput': { kind: 'INPUT_OBJECT'; name: 'EpicBoardCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'displayColors'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'hideBacklogList'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'hideClosedList'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'labels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'labelIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'LabelID'; ofType: null; }; }; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'EpicBoardCreatePayload': { kind: 'OBJECT'; name: 'EpicBoardCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'epicBoard': { name: 'epicBoard'; type: { kind: 'OBJECT'; name: 'EpicBoard'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'EpicBoardEdge': { kind: 'OBJECT'; name: 'EpicBoardEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'EpicBoard'; ofType: null; } }; }; };
    'EpicBoardListCreateInput': { kind: 'INPUT_OBJECT'; name: 'EpicBoardListCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'backlog'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'labelId'; type: { kind: 'SCALAR'; name: 'LabelID'; ofType: null; }; defaultValue: null }, { name: 'boardId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BoardsEpicBoardID'; ofType: null; }; }; defaultValue: null }]; };
    'EpicBoardListCreatePayload': { kind: 'OBJECT'; name: 'EpicBoardListCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'list': { name: 'list'; type: { kind: 'OBJECT'; name: 'EpicList'; ofType: null; } }; }; };
    'EpicBoardListDestroyInput': { kind: 'INPUT_OBJECT'; name: 'EpicBoardListDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'listId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BoardsEpicListID'; ofType: null; }; }; defaultValue: null }]; };
    'EpicBoardListDestroyPayload': { kind: 'OBJECT'; name: 'EpicBoardListDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'list': { name: 'list'; type: { kind: 'OBJECT'; name: 'EpicList'; ofType: null; } }; }; };
    'EpicBoardUpdateInput': { kind: 'INPUT_OBJECT'; name: 'EpicBoardUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'displayColors'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'hideBacklogList'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'hideClosedList'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'labels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'labelIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'LabelID'; ofType: null; }; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BoardsEpicBoardID'; ofType: null; }; }; defaultValue: null }]; };
    'EpicBoardUpdatePayload': { kind: 'OBJECT'; name: 'EpicBoardUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'epicBoard': { name: 'epicBoard'; type: { kind: 'OBJECT'; name: 'EpicBoard'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'EpicConnection': { kind: 'OBJECT'; name: 'EpicConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EpicEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Epic'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'EpicDescendantCount': { kind: 'OBJECT'; name: 'EpicDescendantCount'; fields: { 'closedEpics': { name: 'closedEpics'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'closedIssues': { name: 'closedIssues'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'openedEpics': { name: 'openedEpics'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'openedIssues': { name: 'openedIssues'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'EpicDescendantWeights': { kind: 'OBJECT'; name: 'EpicDescendantWeights'; fields: { 'closedIssues': { name: 'closedIssues'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'closedIssuesTotal': { name: 'closedIssuesTotal'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'openedIssues': { name: 'openedIssues'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'openedIssuesTotal': { name: 'openedIssuesTotal'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; }; };
    'EpicEdge': { kind: 'OBJECT'; name: 'EpicEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Epic'; ofType: null; } }; }; };
    'EpicFilters': { kind: 'INPUT_OBJECT'; name: 'EpicFilters'; inputFields: [{ name: 'labelName'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'authorUsername'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'myReactionEmoji'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'not'; type: { kind: 'INPUT_OBJECT'; name: 'NegatedEpicBoardIssueInput'; ofType: null; }; defaultValue: null }, { name: 'or'; type: { kind: 'INPUT_OBJECT'; name: 'UnionedEpicFilterInput'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'confidential'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'EpicHealthStatus': { kind: 'OBJECT'; name: 'EpicHealthStatus'; fields: { 'issuesAtRisk': { name: 'issuesAtRisk'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'issuesNeedingAttention': { name: 'issuesNeedingAttention'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'issuesOnTrack': { name: 'issuesOnTrack'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'EpicID': unknown;
    'EpicIssue': { kind: 'OBJECT'; name: 'EpicIssue'; fields: { 'alertManagementAlert': { name: 'alertManagementAlert'; type: { kind: 'OBJECT'; name: 'AlertManagementAlert'; ofType: null; } }; 'alertManagementAlerts': { name: 'alertManagementAlerts'; type: { kind: 'OBJECT'; name: 'AlertManagementAlertConnection'; ofType: null; } }; 'assignees': { name: 'assignees'; type: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; } }; 'author': { name: 'author'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; 'blocked': { name: 'blocked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'blockedByCount': { name: 'blockedByCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'blockedByIssues': { name: 'blockedByIssues'; type: { kind: 'OBJECT'; name: 'IssueConnection'; ofType: null; } }; 'blockingCount': { name: 'blockingCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'closedAsDuplicateOf': { name: 'closedAsDuplicateOf'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; 'closedAt': { name: 'closedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'commenters': { name: 'commenters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; }; } }; 'confidential': { name: 'confidential'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createNoteEmail': { name: 'createNoteEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'currentUserTodos': { name: 'currentUserTodos'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TodoConnection'; ofType: null; }; } }; 'customerRelationsContacts': { name: 'customerRelationsContacts'; type: { kind: 'OBJECT'; name: 'CustomerRelationsContactConnection'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'designCollection': { name: 'designCollection'; type: { kind: 'OBJECT'; name: 'DesignCollection'; ofType: null; } }; 'discussionLocked': { name: 'discussionLocked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'discussions': { name: 'discussions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscussionConnection'; ofType: null; }; } }; 'downvotes': { name: 'downvotes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'dueDate': { name: 'dueDate'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'emailsDisabled': { name: 'emailsDisabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'emailsEnabled': { name: 'emailsEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'epic': { name: 'epic'; type: { kind: 'OBJECT'; name: 'Epic'; ofType: null; } }; 'epicIssueId': { name: 'epicIssueId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'escalationPolicy': { name: 'escalationPolicy'; type: { kind: 'OBJECT'; name: 'EscalationPolicyType'; ofType: null; } }; 'escalationStatus': { name: 'escalationStatus'; type: { kind: 'ENUM'; name: 'IssueEscalationStatus'; ofType: null; } }; 'externalAuthor': { name: 'externalAuthor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hasEpic': { name: 'hasEpic'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasParent': { name: 'hasParent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'healthStatus': { name: 'healthStatus'; type: { kind: 'ENUM'; name: 'HealthStatus'; ofType: null; } }; 'hidden': { name: 'hidden'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'humanTimeEstimate': { name: 'humanTimeEstimate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'humanTotalTimeSpent': { name: 'humanTotalTimeSpent'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'iid': { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'issuableResourceLinks': { name: 'issuableResourceLinks'; type: { kind: 'OBJECT'; name: 'IssuableResourceLinkConnection'; ofType: null; } }; 'iteration': { name: 'iteration'; type: { kind: 'OBJECT'; name: 'Iteration'; ofType: null; } }; 'labels': { name: 'labels'; type: { kind: 'OBJECT'; name: 'LabelConnection'; ofType: null; } }; 'mergeRequestsCount': { name: 'mergeRequestsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'metricImages': { name: 'metricImages'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetricImage'; ofType: null; }; }; } }; 'milestone': { name: 'milestone'; type: { kind: 'OBJECT'; name: 'Milestone'; ofType: null; } }; 'moved': { name: 'moved'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'movedTo': { name: 'movedTo'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; 'notes': { name: 'notes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NoteConnection'; ofType: null; }; } }; 'participants': { name: 'participants'; type: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; } }; 'projectId': { name: 'projectId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'reference': { name: 'reference'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'relatedMergeRequests': { name: 'relatedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'relatedVulnerabilities': { name: 'relatedVulnerabilities'; type: { kind: 'OBJECT'; name: 'VulnerabilityConnection'; ofType: null; } }; 'relationPath': { name: 'relationPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'relativePosition': { name: 'relativePosition'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'severity': { name: 'severity'; type: { kind: 'ENUM'; name: 'IssuableSeverity'; ofType: null; } }; 'slaDueAt': { name: 'slaDueAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'IssueState'; ofType: null; }; } }; 'statusPagePublishedIncident': { name: 'statusPagePublishedIncident'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'subscribed': { name: 'subscribed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'taskCompletionStatus': { name: 'taskCompletionStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaskCompletionStatus'; ofType: null; }; } }; 'timeEstimate': { name: 'timeEstimate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'timelogs': { name: 'timelogs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TimelogConnection'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'titleHtml': { name: 'titleHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'totalTimeSpent': { name: 'totalTimeSpent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'IssueType'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'updatedBy': { name: 'updatedBy'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'upvotes': { name: 'upvotes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'userDiscussionsCount': { name: 'userDiscussionsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'userNotesCount': { name: 'userNotesCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'IssuePermissions'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'weight': { name: 'weight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'EpicIssueConnection': { kind: 'OBJECT'; name: 'EpicIssueConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EpicIssueEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EpicIssue'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'weight': { name: 'weight'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'EpicIssueEdge': { kind: 'OBJECT'; name: 'EpicIssueEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'EpicIssue'; ofType: null; } }; }; };
    'EpicList': { kind: 'OBJECT'; name: 'EpicList'; fields: { 'collapsed': { name: 'collapsed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'epics': { name: 'epics'; type: { kind: 'OBJECT'; name: 'EpicConnection'; ofType: null; } }; 'epicsCount': { name: 'epicsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BoardsEpicListID'; ofType: null; }; } }; 'label': { name: 'label'; type: { kind: 'OBJECT'; name: 'Label'; ofType: null; } }; 'listType': { name: 'listType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'OBJECT'; name: 'EpicListMetadata'; ofType: null; } }; 'position': { name: 'position'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'EpicListConnection': { kind: 'OBJECT'; name: 'EpicListConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EpicListEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EpicList'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'EpicListEdge': { kind: 'OBJECT'; name: 'EpicListEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'EpicList'; ofType: null; } }; }; };
    'EpicListMetadata': { kind: 'OBJECT'; name: 'EpicListMetadata'; fields: { 'epicsCount': { name: 'epicsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'totalWeight': { name: 'totalWeight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'EpicMoveListInput': { kind: 'INPUT_OBJECT'; name: 'EpicMoveListInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'boardId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BoardsEpicBoardID'; ofType: null; }; }; defaultValue: null }, { name: 'epicId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EpicID'; ofType: null; }; }; defaultValue: null }, { name: 'fromListId'; type: { kind: 'SCALAR'; name: 'BoardsEpicListID'; ofType: null; }; defaultValue: null }, { name: 'toListId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BoardsEpicListID'; ofType: null; }; }; defaultValue: null }, { name: 'moveBeforeId'; type: { kind: 'SCALAR'; name: 'EpicID'; ofType: null; }; defaultValue: null }, { name: 'moveAfterId'; type: { kind: 'SCALAR'; name: 'EpicID'; ofType: null; }; defaultValue: null }, { name: 'positionInList'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'EpicMoveListPayload': { kind: 'OBJECT'; name: 'EpicMoveListPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'epic': { name: 'epic'; type: { kind: 'OBJECT'; name: 'Epic'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'EpicPermissions': { kind: 'OBJECT'; name: 'EpicPermissions'; fields: { 'adminEpic': { name: 'adminEpic'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'adminEpicRelation': { name: 'adminEpicRelation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'awardEmoji': { name: 'awardEmoji'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createEpic': { name: 'createEpic'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createNote': { name: 'createNote'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'destroyEpic': { name: 'destroyEpic'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readEpic': { name: 'readEpic'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readEpicIid': { name: 'readEpicIid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updateEpic': { name: 'updateEpic'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'EpicSetSubscriptionInput': { kind: 'INPUT_OBJECT'; name: 'EpicSetSubscriptionInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'subscribedState'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'EpicSetSubscriptionPayload': { kind: 'OBJECT'; name: 'EpicSetSubscriptionPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'epic': { name: 'epic'; type: { kind: 'OBJECT'; name: 'Epic'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'EpicSort': { kind: 'ENUM'; name: 'EpicSort'; type: 'start_date_desc' | 'start_date_asc' | 'end_date_desc' | 'end_date_asc' | 'START_DATE_DESC' | 'START_DATE_ASC' | 'END_DATE_DESC' | 'END_DATE_ASC' | 'TITLE_DESC' | 'TITLE_ASC' | 'CREATED_AT_ASC' | 'CREATED_AT_DESC' | 'UPDATED_AT_ASC' | 'UPDATED_AT_DESC'; };
    'EpicState': { kind: 'ENUM'; name: 'EpicState'; type: 'all' | 'opened' | 'closed'; };
    'EpicStateEvent': { kind: 'ENUM'; name: 'EpicStateEvent'; type: 'REOPEN' | 'CLOSE'; };
    'EpicTreeNodeFieldsInputType': { kind: 'INPUT_OBJECT'; name: 'EpicTreeNodeFieldsInputType'; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EpicTreeSortingID'; ofType: null; }; }; defaultValue: null }, { name: 'adjacentReferenceId'; type: { kind: 'SCALAR'; name: 'EpicTreeSortingID'; ofType: null; }; defaultValue: null }, { name: 'relativePosition'; type: { kind: 'ENUM'; name: 'MoveType'; ofType: null; }; defaultValue: null }, { name: 'newParentId'; type: { kind: 'SCALAR'; name: 'EpicID'; ofType: null; }; defaultValue: null }]; };
    'EpicTreeReorderInput': { kind: 'INPUT_OBJECT'; name: 'EpicTreeReorderInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'baseEpicId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EpicID'; ofType: null; }; }; defaultValue: null }, { name: 'moved'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EpicTreeNodeFieldsInputType'; ofType: null; }; }; defaultValue: null }]; };
    'EpicTreeReorderPayload': { kind: 'OBJECT'; name: 'EpicTreeReorderPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'EpicTreeSortingID': unknown;
    'EpicWildcardId': { kind: 'ENUM'; name: 'EpicWildcardId'; type: 'NONE' | 'ANY'; };
    'EscalationPolicyCreateInput': { kind: 'INPUT_OBJECT'; name: 'EscalationPolicyCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'rules'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EscalationRuleInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'EscalationPolicyCreatePayload': { kind: 'OBJECT'; name: 'EscalationPolicyCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'escalationPolicy': { name: 'escalationPolicy'; type: { kind: 'OBJECT'; name: 'EscalationPolicyType'; ofType: null; } }; }; };
    'EscalationPolicyDestroyInput': { kind: 'INPUT_OBJECT'; name: 'EscalationPolicyDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IncidentManagementEscalationPolicyID'; ofType: null; }; }; defaultValue: null }]; };
    'EscalationPolicyDestroyPayload': { kind: 'OBJECT'; name: 'EscalationPolicyDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'escalationPolicy': { name: 'escalationPolicy'; type: { kind: 'OBJECT'; name: 'EscalationPolicyType'; ofType: null; } }; }; };
    'EscalationPolicyType': { kind: 'OBJECT'; name: 'EscalationPolicyType'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'IncidentManagementEscalationPolicyID'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'rules': { name: 'rules'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EscalationRuleType'; ofType: null; }; }; } }; }; };
    'EscalationPolicyTypeConnection': { kind: 'OBJECT'; name: 'EscalationPolicyTypeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EscalationPolicyTypeEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EscalationPolicyType'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'EscalationPolicyTypeEdge': { kind: 'OBJECT'; name: 'EscalationPolicyTypeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'EscalationPolicyType'; ofType: null; } }; }; };
    'EscalationPolicyUpdateInput': { kind: 'INPUT_OBJECT'; name: 'EscalationPolicyUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IncidentManagementEscalationPolicyID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'rules'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'EscalationRuleInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'EscalationPolicyUpdatePayload': { kind: 'OBJECT'; name: 'EscalationPolicyUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'escalationPolicy': { name: 'escalationPolicy'; type: { kind: 'OBJECT'; name: 'EscalationPolicyType'; ofType: null; } }; }; };
    'EscalationRuleInput': { kind: 'INPUT_OBJECT'; name: 'EscalationRuleInput'; inputFields: [{ name: 'oncallScheduleIid'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'elapsedTimeSeconds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EscalationRuleStatus'; ofType: null; }; }; defaultValue: null }]; };
    'EscalationRuleStatus': { kind: 'ENUM'; name: 'EscalationRuleStatus'; type: 'ACKNOWLEDGED' | 'RESOLVED'; };
    'EscalationRuleType': { kind: 'OBJECT'; name: 'EscalationRuleType'; fields: { 'elapsedTimeSeconds': { name: 'elapsedTimeSeconds'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'IncidentManagementEscalationRuleID'; ofType: null; } }; 'oncallSchedule': { name: 'oncallSchedule'; type: { kind: 'OBJECT'; name: 'IncidentManagementOncallSchedule'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'EscalationRuleStatus'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; }; };
    'Event': { kind: 'OBJECT'; name: 'Event'; fields: { 'action': { name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EventAction'; ofType: null; }; } }; 'author': { name: 'author'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'EventAction': { kind: 'ENUM'; name: 'EventAction'; type: 'CREATED' | 'UPDATED' | 'CLOSED' | 'REOPENED' | 'PUSHED' | 'COMMENTED' | 'MERGED' | 'JOINED' | 'LEFT' | 'DESTROYED' | 'EXPIRED' | 'APPROVED'; };
    'EventConnection': { kind: 'OBJECT'; name: 'EventConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'EventEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Event'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'EventEdge': { kind: 'OBJECT'; name: 'EventEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Event'; ofType: null; } }; }; };
    'Eventable': { kind: 'INTERFACE'; name: 'Eventable'; fields: { 'events': { name: 'events'; type: { kind: 'OBJECT'; name: 'EventConnection'; ofType: null; } }; }; possibleTypes: 'BoardEpic' | 'Epic'; };
    'ExplainVulnerabilityPresubmissionCheckResults': { kind: 'OBJECT'; name: 'ExplainVulnerabilityPresubmissionCheckResults'; fields: { 'potentialSecretsInCode': { name: 'potentialSecretsInCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'secretDetectionResult': { name: 'secretDetectionResult'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ExplainVulnerabilityPrompt': { kind: 'OBJECT'; name: 'ExplainVulnerabilityPrompt'; fields: { 'presubmissionChecks': { name: 'presubmissionChecks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExplainVulnerabilityPresubmissionCheckResults'; ofType: null; }; } }; 'promptWithCode': { name: 'promptWithCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'promptWithoutCode': { name: 'promptWithoutCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ExportRequirementsInput': { kind: 'INPUT_OBJECT'; name: 'ExportRequirementsInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'sort'; type: { kind: 'ENUM'; name: 'Sort'; ofType: null; }; defaultValue: null }, { name: 'state'; type: { kind: 'ENUM'; name: 'RequirementState'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'authorUsername'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'selectedFields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'ExportRequirementsPayload': { kind: 'OBJECT'; name: 'ExportRequirementsPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'ExternalAuditEventDestination': { kind: 'OBJECT'; name: 'ExternalAuditEventDestination'; fields: { 'destinationUrl': { name: 'destinationUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'eventTypeFilters': { name: 'eventTypeFilters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'group': { name: 'group'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Group'; ofType: null; }; } }; 'headers': { name: 'headers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AuditEventStreamingHeaderConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespaceFilter': { name: 'namespaceFilter'; type: { kind: 'OBJECT'; name: 'AuditEventStreamingHTTPNamespaceFilter'; ofType: null; } }; 'verificationToken': { name: 'verificationToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ExternalAuditEventDestinationConnection': { kind: 'OBJECT'; name: 'ExternalAuditEventDestinationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ExternalAuditEventDestinationEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ExternalAuditEventDestination'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ExternalAuditEventDestinationCreateInput': { kind: 'INPUT_OBJECT'; name: 'ExternalAuditEventDestinationCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'destinationUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'verificationToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ExternalAuditEventDestinationCreatePayload': { kind: 'OBJECT'; name: 'ExternalAuditEventDestinationCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'externalAuditEventDestination': { name: 'externalAuditEventDestination'; type: { kind: 'OBJECT'; name: 'ExternalAuditEventDestination'; ofType: null; } }; }; };
    'ExternalAuditEventDestinationDestroyInput': { kind: 'INPUT_OBJECT'; name: 'ExternalAuditEventDestinationDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsExternalAuditEventDestinationID'; ofType: null; }; }; defaultValue: null }]; };
    'ExternalAuditEventDestinationDestroyPayload': { kind: 'OBJECT'; name: 'ExternalAuditEventDestinationDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'ExternalAuditEventDestinationEdge': { kind: 'OBJECT'; name: 'ExternalAuditEventDestinationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ExternalAuditEventDestination'; ofType: null; } }; }; };
    'ExternalAuditEventDestinationInterface': { kind: 'INTERFACE'; name: 'ExternalAuditEventDestinationInterface'; fields: { 'destinationUrl': { name: 'destinationUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'eventTypeFilters': { name: 'eventTypeFilters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'verificationToken': { name: 'verificationToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'ExternalAuditEventDestination' | 'InstanceExternalAuditEventDestination'; };
    'ExternalAuditEventDestinationUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ExternalAuditEventDestinationUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsExternalAuditEventDestinationID'; ofType: null; }; }; defaultValue: null }, { name: 'destinationUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ExternalAuditEventDestinationUpdatePayload': { kind: 'OBJECT'; name: 'ExternalAuditEventDestinationUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'externalAuditEventDestination': { name: 'externalAuditEventDestination'; type: { kind: 'OBJECT'; name: 'ExternalAuditEventDestination'; ofType: null; } }; }; };
    'ExternalIssue': { kind: 'OBJECT'; name: 'ExternalIssue'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'externalTracker': { name: 'externalTracker'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'relativeReference': { name: 'relativeReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ExternalStatusCheck': { kind: 'OBJECT'; name: 'ExternalStatusCheck'; fields: { 'externalUrl': { name: 'externalUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GlobalID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ExternalStatusCheckConnection': { kind: 'OBJECT'; name: 'ExternalStatusCheckConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ExternalStatusCheckEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ExternalStatusCheck'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ExternalStatusCheckEdge': { kind: 'OBJECT'; name: 'ExternalStatusCheckEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ExternalStatusCheck'; ofType: null; } }; }; };
    'FileUpload': { kind: 'OBJECT'; name: 'FileUpload'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UploadID'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'size': { name: 'size'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'FindingReportsComparer': { kind: 'OBJECT'; name: 'FindingReportsComparer'; fields: { 'report': { name: 'report'; type: { kind: 'OBJECT'; name: 'ComparedSecurityReport'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'FindingReportsComparerStatus'; ofType: null; } }; 'statusReason': { name: 'statusReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'FindingReportsComparerStatus': { kind: 'ENUM'; name: 'FindingReportsComparerStatus'; type: 'PARSED' | 'PARSING' | 'ERROR'; };
    'Float': unknown;
    'Forecast': { kind: 'OBJECT'; name: 'Forecast'; fields: { 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ForecastStatus'; ofType: null; }; } }; 'values': { name: 'values'; type: { kind: 'OBJECT'; name: 'ForecastDatapointConnection'; ofType: null; } }; }; };
    'ForecastDatapoint': { kind: 'OBJECT'; name: 'ForecastDatapoint'; fields: { 'datapoint': { name: 'datapoint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'ForecastDatapointConnection': { kind: 'OBJECT'; name: 'ForecastDatapointConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ForecastDatapointEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ForecastDatapoint'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ForecastDatapointEdge': { kind: 'OBJECT'; name: 'ForecastDatapointEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ForecastDatapoint'; ofType: null; } }; }; };
    'ForecastStatus': { kind: 'ENUM'; name: 'ForecastStatus'; type: 'READY' | 'UNAVAILABLE'; };
    'ForkDetails': { kind: 'OBJECT'; name: 'ForkDetails'; fields: { 'ahead': { name: 'ahead'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'behind': { name: 'behind'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'hasConflicts': { name: 'hasConflicts'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'isSyncing': { name: 'isSyncing'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'GeoBaseRegistryID': unknown;
    'GeoNode': { kind: 'OBJECT'; name: 'GeoNode'; fields: { 'ciSecureFileRegistries': { name: 'ciSecureFileRegistries'; type: { kind: 'OBJECT'; name: 'CiSecureFileRegistryConnection'; ofType: null; } }; 'containerRepositoriesMaxCapacity': { name: 'containerRepositoriesMaxCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'containerRepositoryRegistries': { name: 'containerRepositoryRegistries'; type: { kind: 'OBJECT'; name: 'ContainerRepositoryRegistryConnection'; ofType: null; } }; 'dependencyProxyBlobRegistries': { name: 'dependencyProxyBlobRegistries'; type: { kind: 'OBJECT'; name: 'DependencyProxyBlobRegistryConnection'; ofType: null; } }; 'dependencyProxyManifestRegistries': { name: 'dependencyProxyManifestRegistries'; type: { kind: 'OBJECT'; name: 'DependencyProxyManifestRegistryConnection'; ofType: null; } }; 'designManagementRepositoryRegistries': { name: 'designManagementRepositoryRegistries'; type: { kind: 'OBJECT'; name: 'DesignManagementRepositoryRegistryConnection'; ofType: null; } }; 'enabled': { name: 'enabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'filesMaxCapacity': { name: 'filesMaxCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'groupWikiRepositoryRegistries': { name: 'groupWikiRepositoryRegistries'; type: { kind: 'OBJECT'; name: 'GroupWikiRepositoryRegistryConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'internalUrl': { name: 'internalUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'jobArtifactRegistries': { name: 'jobArtifactRegistries'; type: { kind: 'OBJECT'; name: 'JobArtifactRegistryConnection'; ofType: null; } }; 'lfsObjectRegistries': { name: 'lfsObjectRegistries'; type: { kind: 'OBJECT'; name: 'LfsObjectRegistryConnection'; ofType: null; } }; 'mergeRequestDiffRegistries': { name: 'mergeRequestDiffRegistries'; type: { kind: 'OBJECT'; name: 'MergeRequestDiffRegistryConnection'; ofType: null; } }; 'minimumReverificationInterval': { name: 'minimumReverificationInterval'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'packageFileRegistries': { name: 'packageFileRegistries'; type: { kind: 'OBJECT'; name: 'PackageFileRegistryConnection'; ofType: null; } }; 'pagesDeploymentRegistries': { name: 'pagesDeploymentRegistries'; type: { kind: 'OBJECT'; name: 'PagesDeploymentRegistryConnection'; ofType: null; } }; 'pipelineArtifactRegistries': { name: 'pipelineArtifactRegistries'; type: { kind: 'OBJECT'; name: 'PipelineArtifactRegistryConnection'; ofType: null; } }; 'primary': { name: 'primary'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'projectRepositoryRegistries': { name: 'projectRepositoryRegistries'; type: { kind: 'OBJECT'; name: 'ProjectRepositoryRegistryConnection'; ofType: null; } }; 'projectWikiRepositoryRegistries': { name: 'projectWikiRepositoryRegistries'; type: { kind: 'OBJECT'; name: 'ProjectWikiRepositoryRegistryConnection'; ofType: null; } }; 'reposMaxCapacity': { name: 'reposMaxCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'selectiveSyncNamespaces': { name: 'selectiveSyncNamespaces'; type: { kind: 'OBJECT'; name: 'NamespaceConnection'; ofType: null; } }; 'selectiveSyncShards': { name: 'selectiveSyncShards'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'selectiveSyncType': { name: 'selectiveSyncType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'snippetRepositoryRegistries': { name: 'snippetRepositoryRegistries'; type: { kind: 'OBJECT'; name: 'SnippetRepositoryRegistryConnection'; ofType: null; } }; 'syncObjectStorage': { name: 'syncObjectStorage'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'terraformStateVersionRegistries': { name: 'terraformStateVersionRegistries'; type: { kind: 'OBJECT'; name: 'TerraformStateVersionRegistryConnection'; ofType: null; } }; 'uploadRegistries': { name: 'uploadRegistries'; type: { kind: 'OBJECT'; name: 'UploadRegistryConnection'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationMaxCapacity': { name: 'verificationMaxCapacity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'GeoRegistriesBulkAction': { kind: 'ENUM'; name: 'GeoRegistriesBulkAction'; type: 'REVERIFY_ALL' | 'RESYNC_ALL'; };
    'GeoRegistriesBulkUpdateInput': { kind: 'INPUT_OBJECT'; name: 'GeoRegistriesBulkUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'registryClass'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'GeoRegistryClass'; ofType: null; }; }; defaultValue: null }, { name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'GeoRegistriesBulkAction'; ofType: null; }; }; defaultValue: null }]; };
    'GeoRegistriesBulkUpdatePayload': { kind: 'OBJECT'; name: 'GeoRegistriesBulkUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'registryClass': { name: 'registryClass'; type: { kind: 'ENUM'; name: 'GeoRegistryClass'; ofType: null; } }; }; };
    'GeoRegistriesUpdateInput': { kind: 'INPUT_OBJECT'; name: 'GeoRegistriesUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'registryClass'; type: { kind: 'ENUM'; name: 'GeoRegistryClass'; ofType: null; }; defaultValue: "null" }, { name: 'registryId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GeoBaseRegistryID'; ofType: null; }; }; defaultValue: null }, { name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'GeoRegistryAction'; ofType: null; }; }; defaultValue: null }]; };
    'GeoRegistriesUpdatePayload': { kind: 'OBJECT'; name: 'GeoRegistriesUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'registry': { name: 'registry'; type: { kind: 'UNION'; name: 'Registrable'; ofType: null; } }; }; };
    'GeoRegistryAction': { kind: 'ENUM'; name: 'GeoRegistryAction'; type: 'REVERIFY' | 'RESYNC'; };
    'GeoRegistryClass': { kind: 'ENUM'; name: 'GeoRegistryClass'; type: 'CONTAINER_REPOSITORY_REGISTRY' | 'DESIGN_MANAGEMENT_REPOSITORY_REGISTRY' | 'JOB_ARTIFACT_REGISTRY' | 'LFS_OBJECT_REGISTRY' | 'MERGE_REQUEST_DIFF_REGISTRY' | 'PACKAGE_FILE_REGISTRY' | 'PIPELINE_ARTIFACT_REGISTRY' | 'TERRAFORM_STATE_VERSION_REGISTRY' | 'UPLOAD_REGISTRY' | 'SNIPPET_REPOSITORY_REGISTRY' | 'GROUP_WIKI_REPOSITORY_REGISTRY' | 'PAGES_DEPLOYMENT_REGISTRY' | 'CI_SECURE_FILE_REGISTRY' | 'DEPENDENCY_PROXY_BLOB_REGISTRY' | 'DEPENDENCY_PROXY_MANIFEST_REGISTRY' | 'PROJECT_WIKI_REPOSITORY_REGISTRY' | 'PROJECT_REPOSITORY_REGISTRY'; };
    'GitlabErrorTrackingDetailedErrorID': unknown;
    'GitlabSubscriptionActivateInput': { kind: 'INPUT_OBJECT'; name: 'GitlabSubscriptionActivateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'activationCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'GitlabSubscriptionActivatePayload': { kind: 'OBJECT'; name: 'GitlabSubscriptionActivatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'futureSubscriptions': { name: 'futureSubscriptions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionFutureEntry'; ofType: null; }; }; } }; 'license': { name: 'license'; type: { kind: 'OBJECT'; name: 'CurrentLicense'; ofType: null; } }; }; };
    'GitlabSubscriptionsAddOnPurchaseID': unknown;
    'GitlabSubscriptionsAddOnType': { kind: 'ENUM'; name: 'GitlabSubscriptionsAddOnType'; type: 'CODE_SUGGESTIONS'; };
    'GitlabSubscriptionsUserRole': { kind: 'ENUM'; name: 'GitlabSubscriptionsUserRole'; type: 'GUEST' | 'REPORTER' | 'DEVELOPER' | 'MAINTAINER' | 'OWNER'; };
    'GlobalID': unknown;
    'GoogleCloudArtifactRegistryArtifact': { kind: 'UNION'; name: 'GoogleCloudArtifactRegistryArtifact'; fields: {}; possibleTypes: 'GoogleCloudArtifactRegistryDockerImage'; };
    'GoogleCloudArtifactRegistryArtifactConnection': { kind: 'OBJECT'; name: 'GoogleCloudArtifactRegistryArtifactConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'GoogleCloudArtifactRegistryArtifactEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'UNION'; name: 'GoogleCloudArtifactRegistryArtifact'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'GoogleCloudArtifactRegistryArtifactDetails': { kind: 'UNION'; name: 'GoogleCloudArtifactRegistryArtifactDetails'; fields: {}; possibleTypes: 'GoogleCloudArtifactRegistryDockerImageDetails'; };
    'GoogleCloudArtifactRegistryArtifactEdge': { kind: 'OBJECT'; name: 'GoogleCloudArtifactRegistryArtifactEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'UNION'; name: 'GoogleCloudArtifactRegistryArtifact'; ofType: null; } }; }; };
    'GoogleCloudArtifactRegistryArtifactsSort': { kind: 'ENUM'; name: 'GoogleCloudArtifactRegistryArtifactsSort'; type: 'NAME_ASC' | 'NAME_DESC' | 'IMAGE_SIZE_BYTES_ASC' | 'IMAGE_SIZE_BYTES_DESC' | 'UPLOAD_TIME_ASC' | 'UPLOAD_TIME_DESC' | 'BUILD_TIME_ASC' | 'BUILD_TIME_DESC' | 'UPDATE_TIME_ASC' | 'UPDATE_TIME_DESC' | 'MEDIA_TYPE_ASC' | 'MEDIA_TYPE_DESC'; };
    'GoogleCloudArtifactRegistryDockerImage': { kind: 'OBJECT'; name: 'GoogleCloudArtifactRegistryDockerImage'; fields: { 'digest': { name: 'digest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'tags': { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'updateTime': { name: 'updateTime'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'uploadTime': { name: 'uploadTime'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'uri': { name: 'uri'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'GoogleCloudArtifactRegistryDockerImageDetails': { kind: 'OBJECT'; name: 'GoogleCloudArtifactRegistryDockerImageDetails'; fields: { 'artifactRegistryImageUrl': { name: 'artifactRegistryImageUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'buildTime': { name: 'buildTime'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'digest': { name: 'digest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'image': { name: 'image'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'imageSizeBytes': { name: 'imageSizeBytes'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'mediaType': { name: 'mediaType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'projectId': { name: 'projectId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'repository': { name: 'repository'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'tags': { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'updateTime': { name: 'updateTime'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'uploadTime': { name: 'uploadTime'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'uri': { name: 'uri'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'GoogleCloudArtifactRegistryRepository': { kind: 'OBJECT'; name: 'GoogleCloudArtifactRegistryRepository'; fields: { 'artifactRegistryRepositoryUrl': { name: 'artifactRegistryRepositoryUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'artifacts': { name: 'artifacts'; type: { kind: 'OBJECT'; name: 'GoogleCloudArtifactRegistryArtifactConnection'; ofType: null; } }; 'projectId': { name: 'projectId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'repository': { name: 'repository'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'GoogleCloudLoggingConfigurationCreateInput': { kind: 'INPUT_OBJECT'; name: 'GoogleCloudLoggingConfigurationCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'googleProjectIdName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'clientEmail'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'logIdName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: "\"audit_events\"" }, { name: 'privateKey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'GoogleCloudLoggingConfigurationCreatePayload': { kind: 'OBJECT'; name: 'GoogleCloudLoggingConfigurationCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'googleCloudLoggingConfiguration': { name: 'googleCloudLoggingConfiguration'; type: { kind: 'OBJECT'; name: 'GoogleCloudLoggingConfigurationType'; ofType: null; } }; }; };
    'GoogleCloudLoggingConfigurationDestroyInput': { kind: 'INPUT_OBJECT'; name: 'GoogleCloudLoggingConfigurationDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsGoogleCloudLoggingConfigurationID'; ofType: null; }; }; defaultValue: null }]; };
    'GoogleCloudLoggingConfigurationDestroyPayload': { kind: 'OBJECT'; name: 'GoogleCloudLoggingConfigurationDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'GoogleCloudLoggingConfigurationInterface': { kind: 'INTERFACE'; name: 'GoogleCloudLoggingConfigurationInterface'; fields: { 'clientEmail': { name: 'clientEmail'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'googleProjectIdName': { name: 'googleProjectIdName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'logIdName': { name: 'logIdName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'GoogleCloudLoggingConfigurationType' | 'InstanceGoogleCloudLoggingConfigurationType'; };
    'GoogleCloudLoggingConfigurationType': { kind: 'OBJECT'; name: 'GoogleCloudLoggingConfigurationType'; fields: { 'clientEmail': { name: 'clientEmail'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'googleProjectIdName': { name: 'googleProjectIdName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'group': { name: 'group'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Group'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'logIdName': { name: 'logIdName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'GoogleCloudLoggingConfigurationTypeConnection': { kind: 'OBJECT'; name: 'GoogleCloudLoggingConfigurationTypeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'GoogleCloudLoggingConfigurationTypeEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'GoogleCloudLoggingConfigurationType'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'GoogleCloudLoggingConfigurationTypeEdge': { kind: 'OBJECT'; name: 'GoogleCloudLoggingConfigurationTypeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'GoogleCloudLoggingConfigurationType'; ofType: null; } }; }; };
    'GoogleCloudLoggingConfigurationUpdateInput': { kind: 'INPUT_OBJECT'; name: 'GoogleCloudLoggingConfigurationUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'googleProjectIdName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'clientEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'logIdName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'privateKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsGoogleCloudLoggingConfigurationID'; ofType: null; }; }; defaultValue: null }]; };
    'GoogleCloudLoggingConfigurationUpdatePayload': { kind: 'OBJECT'; name: 'GoogleCloudLoggingConfigurationUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'googleCloudLoggingConfiguration': { name: 'googleCloudLoggingConfiguration'; type: { kind: 'OBJECT'; name: 'GoogleCloudLoggingConfigurationType'; ofType: null; } }; }; };
    'GoogleCloudMachineType': unknown;
    'GoogleCloudProject': unknown;
    'GoogleCloudRegion': unknown;
    'GoogleCloudZone': unknown;
    'GpgSignature': { kind: 'OBJECT'; name: 'GpgSignature'; fields: { 'commitSha': { name: 'commitSha'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'gpgKeyPrimaryKeyid': { name: 'gpgKeyPrimaryKeyid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'gpgKeyUserEmail': { name: 'gpgKeyUserEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'gpgKeyUserName': { name: 'gpgKeyUserName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'verificationStatus': { name: 'verificationStatus'; type: { kind: 'ENUM'; name: 'VerificationStatus'; ofType: null; } }; }; };
    'GrafanaIntegration': { kind: 'OBJECT'; name: 'GrafanaIntegration'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'grafanaUrl': { name: 'grafanaUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'Group': { kind: 'OBJECT'; name: 'Group'; fields: { 'achievements': { name: 'achievements'; type: { kind: 'OBJECT'; name: 'AchievementConnection'; ofType: null; } }; 'actualRepositorySizeLimit': { name: 'actualRepositorySizeLimit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'actualSizeLimit': { name: 'actualSizeLimit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'addOnEligibleUsers': { name: 'addOnEligibleUsers'; type: { kind: 'OBJECT'; name: 'AddOnUserConnection'; ofType: null; } }; 'addOnPurchase': { name: 'addOnPurchase'; type: { kind: 'OBJECT'; name: 'AddOnPurchase'; ofType: null; } }; 'additionalPurchasedStorageSize': { name: 'additionalPurchasedStorageSize'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'allowStaleRunnerPruning': { name: 'allowStaleRunnerPruning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'amazonS3Configurations': { name: 'amazonS3Configurations'; type: { kind: 'OBJECT'; name: 'AmazonS3ConfigurationTypeConnection'; ofType: null; } }; 'approvalPolicies': { name: 'approvalPolicies'; type: { kind: 'OBJECT'; name: 'ApprovalPolicyConnection'; ofType: null; } }; 'autoDevopsEnabled': { name: 'autoDevopsEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'autocompleteUsers': { name: 'autocompleteUsers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AutocompletedUser'; ofType: null; }; }; } }; 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'billableMembersCount': { name: 'billableMembersCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'board': { name: 'board'; type: { kind: 'OBJECT'; name: 'Board'; ofType: null; } }; 'boards': { name: 'boards'; type: { kind: 'OBJECT'; name: 'BoardConnection'; ofType: null; } }; 'ciVariables': { name: 'ciVariables'; type: { kind: 'OBJECT'; name: 'CiGroupVariableConnection'; ofType: null; } }; 'clusterAgents': { name: 'clusterAgents'; type: { kind: 'OBJECT'; name: 'ClusterAgentConnection'; ofType: null; } }; 'codeCoverageActivities': { name: 'codeCoverageActivities'; type: { kind: 'OBJECT'; name: 'CodeCoverageActivityConnection'; ofType: null; } }; 'complianceFrameworks': { name: 'complianceFrameworks'; type: { kind: 'OBJECT'; name: 'ComplianceFrameworkConnection'; ofType: null; } }; 'contactStateCounts': { name: 'contactStateCounts'; type: { kind: 'OBJECT'; name: 'ContactStateCounts'; ofType: null; } }; 'contacts': { name: 'contacts'; type: { kind: 'OBJECT'; name: 'CustomerRelationsContactConnection'; ofType: null; } }; 'containerRepositories': { name: 'containerRepositories'; type: { kind: 'OBJECT'; name: 'ContainerRepositoryConnection'; ofType: null; } }; 'containerRepositoriesCount': { name: 'containerRepositoriesCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'containsLockedProjects': { name: 'containsLockedProjects'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'contributions': { name: 'contributions'; type: { kind: 'OBJECT'; name: 'ContributionAnalyticsContributionConnection'; ofType: null; } }; 'crossProjectPipelineAvailable': { name: 'crossProjectPipelineAvailable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'customEmoji': { name: 'customEmoji'; type: { kind: 'OBJECT'; name: 'CustomEmojiConnection'; ofType: null; } }; 'customizableDashboardVisualizations': { name: 'customizableDashboardVisualizations'; type: { kind: 'OBJECT'; name: 'CustomizableDashboardVisualizationConnection'; ofType: null; } }; 'customizableDashboards': { name: 'customizableDashboards'; type: { kind: 'OBJECT'; name: 'CustomizableDashboardConnection'; ofType: null; } }; 'dataTransfer': { name: 'dataTransfer'; type: { kind: 'OBJECT'; name: 'GroupDataTransfer'; ofType: null; } }; 'dependencyProxyBlobCount': { name: 'dependencyProxyBlobCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'dependencyProxyBlobs': { name: 'dependencyProxyBlobs'; type: { kind: 'OBJECT'; name: 'DependencyProxyBlobConnection'; ofType: null; } }; 'dependencyProxyImageCount': { name: 'dependencyProxyImageCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'dependencyProxyImagePrefix': { name: 'dependencyProxyImagePrefix'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'dependencyProxyImageTtlPolicy': { name: 'dependencyProxyImageTtlPolicy'; type: { kind: 'OBJECT'; name: 'DependencyProxyImageTtlGroupPolicy'; ofType: null; } }; 'dependencyProxyManifests': { name: 'dependencyProxyManifests'; type: { kind: 'OBJECT'; name: 'DependencyProxyManifestConnection'; ofType: null; } }; 'dependencyProxySetting': { name: 'dependencyProxySetting'; type: { kind: 'OBJECT'; name: 'DependencyProxySetting'; ofType: null; } }; 'dependencyProxyTotalSize': { name: 'dependencyProxyTotalSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'dependencyProxyTotalSizeBytes': { name: 'dependencyProxyTotalSizeBytes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; 'dependencyProxyTotalSizeInBytes': { name: 'dependencyProxyTotalSizeInBytes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'descendantGroups': { name: 'descendantGroups'; type: { kind: 'OBJECT'; name: 'GroupConnection'; ofType: null; } }; 'descendantGroupsCount': { name: 'descendantGroupsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dora': { name: 'dora'; type: { kind: 'OBJECT'; name: 'Dora'; ofType: null; } }; 'doraPerformanceScoreCounts': { name: 'doraPerformanceScoreCounts'; type: { kind: 'OBJECT'; name: 'DoraPerformanceScoreCountConnection'; ofType: null; } }; 'duoFeaturesEnabled': { name: 'duoFeaturesEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'emailsDisabled': { name: 'emailsDisabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'emailsEnabled': { name: 'emailsEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'enforceFreeUserCap': { name: 'enforceFreeUserCap'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'environmentScopes': { name: 'environmentScopes'; type: { kind: 'OBJECT'; name: 'CiGroupEnvironmentScopeConnection'; ofType: null; } }; 'epic': { name: 'epic'; type: { kind: 'OBJECT'; name: 'Epic'; ofType: null; } }; 'epicBoard': { name: 'epicBoard'; type: { kind: 'OBJECT'; name: 'EpicBoard'; ofType: null; } }; 'epicBoards': { name: 'epicBoards'; type: { kind: 'OBJECT'; name: 'EpicBoardConnection'; ofType: null; } }; 'epics': { name: 'epics'; type: { kind: 'OBJECT'; name: 'EpicConnection'; ofType: null; } }; 'epicsEnabled': { name: 'epicsEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'externalAuditEventDestinations': { name: 'externalAuditEventDestinations'; type: { kind: 'OBJECT'; name: 'ExternalAuditEventDestinationConnection'; ofType: null; } }; 'flowMetrics': { name: 'flowMetrics'; type: { kind: 'OBJECT'; name: 'GroupValueStreamAnalyticsFlowMetrics'; ofType: null; } }; 'fullName': { name: 'fullName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'fullPath': { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'gitlabSubscriptionsPreviewBillableUserChange': { name: 'gitlabSubscriptionsPreviewBillableUserChange'; type: { kind: 'OBJECT'; name: 'PreviewBillableUserChange'; ofType: null; } }; 'googleCloudLoggingConfigurations': { name: 'googleCloudLoggingConfigurations'; type: { kind: 'OBJECT'; name: 'GoogleCloudLoggingConfigurationTypeConnection'; ofType: null; } }; 'groupMembers': { name: 'groupMembers'; type: { kind: 'OBJECT'; name: 'GroupMemberConnection'; ofType: null; } }; 'groupMembersCount': { name: 'groupMembersCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isTemporaryStorageIncreaseEnabled': { name: 'isTemporaryStorageIncreaseEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'issues': { name: 'issues'; type: { kind: 'OBJECT'; name: 'IssueConnection'; ofType: null; } }; 'iterationCadences': { name: 'iterationCadences'; type: { kind: 'OBJECT'; name: 'IterationCadenceConnection'; ofType: null; } }; 'iterations': { name: 'iterations'; type: { kind: 'OBJECT'; name: 'IterationConnection'; ofType: null; } }; 'label': { name: 'label'; type: { kind: 'OBJECT'; name: 'Label'; ofType: null; } }; 'labels': { name: 'labels'; type: { kind: 'OBJECT'; name: 'LabelConnection'; ofType: null; } }; 'lfsEnabled': { name: 'lfsEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'lockDuoFeaturesEnabled': { name: 'lockDuoFeaturesEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'lockMathRenderingLimitsEnabled': { name: 'lockMathRenderingLimitsEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'markedForDeletionOn': { name: 'markedForDeletionOn'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'mathRenderingLimitsEnabled': { name: 'mathRenderingLimitsEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'maxAccessLevel': { name: 'maxAccessLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccessLevel'; ofType: null; }; } }; 'memberRoles': { name: 'memberRoles'; type: { kind: 'OBJECT'; name: 'MemberRoleConnection'; ofType: null; } }; 'mentionsDisabled': { name: 'mentionsDisabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'mergeRequestViolations': { name: 'mergeRequestViolations'; type: { kind: 'OBJECT'; name: 'ComplianceViolationConnection'; ofType: null; } }; 'mergeRequests': { name: 'mergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'milestones': { name: 'milestones'; type: { kind: 'OBJECT'; name: 'MilestoneConnection'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organizationStateCounts': { name: 'organizationStateCounts'; type: { kind: 'OBJECT'; name: 'OrganizationStateCounts'; ofType: null; } }; 'organizations': { name: 'organizations'; type: { kind: 'OBJECT'; name: 'CustomerRelationsOrganizationConnection'; ofType: null; } }; 'packageSettings': { name: 'packageSettings'; type: { kind: 'OBJECT'; name: 'PackageSettings'; ofType: null; } }; 'packages': { name: 'packages'; type: { kind: 'OBJECT'; name: 'PackageConnection'; ofType: null; } }; 'parent': { name: 'parent'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'pendingMembers': { name: 'pendingMembers'; type: { kind: 'OBJECT'; name: 'PendingGroupMemberConnection'; ofType: null; } }; 'productAnalyticsStoredEventsLimit': { name: 'productAnalyticsStoredEventsLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'projectComplianceStandardsAdherence': { name: 'projectComplianceStandardsAdherence'; type: { kind: 'OBJECT'; name: 'ComplianceStandardsAdherenceConnection'; ofType: null; } }; 'projectCreationLevel': { name: 'projectCreationLevel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'projects': { name: 'projects'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; }; } }; 'projectsCount': { name: 'projectsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'recentIssueBoards': { name: 'recentIssueBoards'; type: { kind: 'OBJECT'; name: 'BoardConnection'; ofType: null; } }; 'releases': { name: 'releases'; type: { kind: 'OBJECT'; name: 'ReleaseConnection'; ofType: null; } }; 'repositorySizeExcessProjectCount': { name: 'repositorySizeExcessProjectCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'requestAccessEnabled': { name: 'requestAccessEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'requireTwoFactorAuthentication': { name: 'requireTwoFactorAuthentication'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'rootStorageStatistics': { name: 'rootStorageStatistics'; type: { kind: 'OBJECT'; name: 'RootStorageStatistics'; ofType: null; } }; 'runnerCloudProvisioning': { name: 'runnerCloudProvisioning'; type: { kind: 'UNION'; name: 'CiRunnerCloudProvisioning'; ofType: null; } }; 'runners': { name: 'runners'; type: { kind: 'OBJECT'; name: 'CiRunnerConnection'; ofType: null; } }; 'savedReplies': { name: 'savedReplies'; type: { kind: 'OBJECT'; name: 'GroupSavedReplyConnection'; ofType: null; } }; 'savedReply': { name: 'savedReply'; type: { kind: 'OBJECT'; name: 'GroupSavedReply'; ofType: null; } }; 'scanExecutionPolicies': { name: 'scanExecutionPolicies'; type: { kind: 'OBJECT'; name: 'ScanExecutionPolicyConnection'; ofType: null; } }; 'scanResultPolicies': { name: 'scanResultPolicies'; type: { kind: 'OBJECT'; name: 'ScanResultPolicyConnection'; ofType: null; } }; 'securityPolicyProject': { name: 'securityPolicyProject'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'securityPolicyProjectSuggestions': { name: 'securityPolicyProjectSuggestions'; type: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; } }; 'shareWithGroupLock': { name: 'shareWithGroupLock'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'sharedRunnersSetting': { name: 'sharedRunnersSetting'; type: { kind: 'ENUM'; name: 'SharedRunnersSetting'; ofType: null; } }; 'stats': { name: 'stats'; type: { kind: 'OBJECT'; name: 'GroupStats'; ofType: null; } }; 'storageSizeLimit': { name: 'storageSizeLimit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'subgroupCreationLevel': { name: 'subgroupCreationLevel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'temporaryStorageIncreaseEndsOn': { name: 'temporaryStorageIncreaseEndsOn'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'timelogCategories': { name: 'timelogCategories'; type: { kind: 'OBJECT'; name: 'TimeTrackingTimelogCategoryConnection'; ofType: null; } }; 'timelogs': { name: 'timelogs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TimelogConnection'; ofType: null; }; } }; 'totalRepositorySize': { name: 'totalRepositorySize'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'totalRepositorySizeExcess': { name: 'totalRepositorySizeExcess'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'twoFactorGracePeriod': { name: 'twoFactorGracePeriod'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupPermissions'; ofType: null; }; } }; 'valueStreamAnalytics': { name: 'valueStreamAnalytics'; type: { kind: 'OBJECT'; name: 'ValueStreamAnalytics'; ofType: null; } }; 'valueStreamDashboardUsageOverview': { name: 'valueStreamDashboardUsageOverview'; type: { kind: 'OBJECT'; name: 'ValueStreamDashboardCount'; ofType: null; } }; 'valueStreams': { name: 'valueStreams'; type: { kind: 'OBJECT'; name: 'ValueStreamConnection'; ofType: null; } }; 'visibility': { name: 'visibility'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'vulnerabilities': { name: 'vulnerabilities'; type: { kind: 'OBJECT'; name: 'VulnerabilityConnection'; ofType: null; } }; 'vulnerabilitiesCountByDay': { name: 'vulnerabilitiesCountByDay'; type: { kind: 'OBJECT'; name: 'VulnerabilitiesCountByDayConnection'; ofType: null; } }; 'vulnerabilityGrades': { name: 'vulnerabilityGrades'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerableProjectsByGrade'; ofType: null; }; }; } }; 'vulnerabilityScanners': { name: 'vulnerabilityScanners'; type: { kind: 'OBJECT'; name: 'VulnerabilityScannerConnection'; ofType: null; } }; 'vulnerabilitySeveritiesCount': { name: 'vulnerabilitySeveritiesCount'; type: { kind: 'OBJECT'; name: 'VulnerabilitySeveritiesCount'; ofType: null; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'workItem': { name: 'workItem'; type: { kind: 'OBJECT'; name: 'WorkItem'; ofType: null; } }; 'workItemStateCounts': { name: 'workItemStateCounts'; type: { kind: 'OBJECT'; name: 'WorkItemStateCountsType'; ofType: null; } }; 'workItemTypes': { name: 'workItemTypes'; type: { kind: 'OBJECT'; name: 'WorkItemTypeConnection'; ofType: null; } }; 'workItems': { name: 'workItems'; type: { kind: 'OBJECT'; name: 'WorkItemConnection'; ofType: null; } }; }; };
    'GroupConnection': { kind: 'OBJECT'; name: 'GroupConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Group'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'GroupDataTransfer': { kind: 'OBJECT'; name: 'GroupDataTransfer'; fields: { 'egressNodes': { name: 'egressNodes'; type: { kind: 'OBJECT'; name: 'EgressNodeConnection'; ofType: null; } }; }; };
    'GroupEdge': { kind: 'OBJECT'; name: 'GroupEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; }; };
    'GroupID': unknown;
    'GroupMember': { kind: 'OBJECT'; name: 'GroupMember'; fields: { 'accessLevel': { name: 'accessLevel'; type: { kind: 'OBJECT'; name: 'AccessLevel'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'createdBy': { name: 'createdBy'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'expiresAt': { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'group': { name: 'group'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'mergeRequestInteraction': { name: 'mergeRequestInteraction'; type: { kind: 'OBJECT'; name: 'UserMergeRequestInteraction'; ofType: null; } }; 'notificationEmail': { name: 'notificationEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupPermissions'; ofType: null; }; } }; }; };
    'GroupMemberBulkUpdateInput': { kind: 'INPUT_OBJECT'; name: 'GroupMemberBulkUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'userIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UserID'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'accessLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MemberAccessLevel'; ofType: null; }; }; defaultValue: null }, { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; defaultValue: null }, { name: 'groupId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GroupID'; ofType: null; }; }; defaultValue: null }]; };
    'GroupMemberBulkUpdatePayload': { kind: 'OBJECT'; name: 'GroupMemberBulkUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'groupMembers': { name: 'groupMembers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupMember'; ofType: null; }; }; } }; }; };
    'GroupMemberConnection': { kind: 'OBJECT'; name: 'GroupMemberConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupMemberEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupMember'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'GroupMemberEdge': { kind: 'OBJECT'; name: 'GroupMemberEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'GroupMember'; ofType: null; } }; }; };
    'GroupMemberRelation': { kind: 'ENUM'; name: 'GroupMemberRelation'; type: 'DIRECT' | 'INHERITED' | 'DESCENDANTS' | 'SHARED_FROM_GROUPS'; };
    'GroupPermission': { kind: 'ENUM'; name: 'GroupPermission'; type: 'CREATE_PROJECTS' | 'TRANSFER_PROJECTS' | 'IMPORT_PROJECTS'; };
    'GroupPermissions': { kind: 'OBJECT'; name: 'GroupPermissions'; fields: { 'createCustomEmoji': { name: 'createCustomEmoji'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createProjects': { name: 'createProjects'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readGroup': { name: 'readGroup'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'removeGroup': { name: 'removeGroup'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'GroupReleaseSort': { kind: 'ENUM'; name: 'GroupReleaseSort'; type: 'RELEASED_AT_DESC' | 'RELEASED_AT_ASC'; };
    'GroupReleaseStats': { kind: 'OBJECT'; name: 'GroupReleaseStats'; fields: { 'releasesCount': { name: 'releasesCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'releasesPercentage': { name: 'releasesPercentage'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'GroupSavedReply': { kind: 'OBJECT'; name: 'GroupSavedReply'; fields: { 'content': { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GroupsSavedReplyID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'GroupSavedReplyConnection': { kind: 'OBJECT'; name: 'GroupSavedReplyConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupSavedReplyEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupSavedReply'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'GroupSavedReplyCreateInput': { kind: 'INPUT_OBJECT'; name: 'GroupSavedReplyCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'groupId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GroupID'; ofType: null; }; }; defaultValue: null }]; };
    'GroupSavedReplyCreatePayload': { kind: 'OBJECT'; name: 'GroupSavedReplyCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'savedReply': { name: 'savedReply'; type: { kind: 'OBJECT'; name: 'GroupSavedReply'; ofType: null; } }; }; };
    'GroupSavedReplyDestroyInput': { kind: 'INPUT_OBJECT'; name: 'GroupSavedReplyDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GroupsSavedReplyID'; ofType: null; }; }; defaultValue: null }]; };
    'GroupSavedReplyDestroyPayload': { kind: 'OBJECT'; name: 'GroupSavedReplyDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'savedReply': { name: 'savedReply'; type: { kind: 'OBJECT'; name: 'GroupSavedReply'; ofType: null; } }; }; };
    'GroupSavedReplyEdge': { kind: 'OBJECT'; name: 'GroupSavedReplyEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'GroupSavedReply'; ofType: null; } }; }; };
    'GroupSavedReplyUpdateInput': { kind: 'INPUT_OBJECT'; name: 'GroupSavedReplyUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GroupsSavedReplyID'; ofType: null; }; }; defaultValue: null }]; };
    'GroupSavedReplyUpdatePayload': { kind: 'OBJECT'; name: 'GroupSavedReplyUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'savedReply': { name: 'savedReply'; type: { kind: 'OBJECT'; name: 'GroupSavedReply'; ofType: null; } }; }; };
    'GroupSecurityPolicySource': { kind: 'OBJECT'; name: 'GroupSecurityPolicySource'; fields: { 'inherited': { name: 'inherited'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; }; };
    'GroupStats': { kind: 'OBJECT'; name: 'GroupStats'; fields: { 'releaseStats': { name: 'releaseStats'; type: { kind: 'OBJECT'; name: 'GroupReleaseStats'; ofType: null; } }; }; };
    'GroupUpdateInput': { kind: 'INPUT_OBJECT'; name: 'GroupUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'lockMathRenderingLimitsEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'mathRenderingLimitsEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'sharedRunnersSetting'; type: { kind: 'ENUM'; name: 'SharedRunnersSetting'; ofType: null; }; defaultValue: null }, { name: 'duoFeaturesEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'lockDuoFeaturesEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'GroupUpdatePayload': { kind: 'OBJECT'; name: 'GroupUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'group': { name: 'group'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; }; };
    'GroupValueStreamAnalyticsFlowMetrics': { kind: 'OBJECT'; name: 'GroupValueStreamAnalyticsFlowMetrics'; fields: { 'cycleTime': { name: 'cycleTime'; type: { kind: 'OBJECT'; name: 'ValueStreamAnalyticsMetric'; ofType: null; } }; 'deploymentCount': { name: 'deploymentCount'; type: { kind: 'OBJECT'; name: 'ValueStreamAnalyticsMetric'; ofType: null; } }; 'issueCount': { name: 'issueCount'; type: { kind: 'OBJECT'; name: 'ValueStreamAnalyticsMetric'; ofType: null; } }; 'issuesCompletedCount': { name: 'issuesCompletedCount'; type: { kind: 'OBJECT'; name: 'ValueStreamAnalyticsMetric'; ofType: null; } }; 'leadTime': { name: 'leadTime'; type: { kind: 'OBJECT'; name: 'ValueStreamAnalyticsMetric'; ofType: null; } }; 'timeToMerge': { name: 'timeToMerge'; type: { kind: 'OBJECT'; name: 'ValueStreamAnalyticsMetric'; ofType: null; } }; }; };
    'GroupWikiRepositoryRegistry': { kind: 'OBJECT'; name: 'GroupWikiRepositoryRegistry'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'groupWikiRepositoryId': { name: 'groupWikiRepositoryId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSyncFailure': { name: 'lastSyncFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSyncedAt': { name: 'lastSyncedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryAt': { name: 'retryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryCount': { name: 'retryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'RegistryState'; ofType: null; } }; 'verificationChecksum': { name: 'verificationChecksum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationFailure': { name: 'verificationFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationRetryAt': { name: 'verificationRetryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationRetryCount': { name: 'verificationRetryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'verificationStartedAt': { name: 'verificationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationState': { name: 'verificationState'; type: { kind: 'ENUM'; name: 'VerificationStateEnum'; ofType: null; } }; 'verifiedAt': { name: 'verifiedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'GroupWikiRepositoryRegistryConnection': { kind: 'OBJECT'; name: 'GroupWikiRepositoryRegistryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupWikiRepositoryRegistryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupWikiRepositoryRegistry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'GroupWikiRepositoryRegistryEdge': { kind: 'OBJECT'; name: 'GroupWikiRepositoryRegistryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'GroupWikiRepositoryRegistry'; ofType: null; } }; }; };
    'Groups': { kind: 'OBJECT'; name: 'Groups'; fields: { 'commit': { name: 'commit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Commit'; ofType: null; }; } }; 'commitData': { name: 'commitData'; type: { kind: 'OBJECT'; name: 'CommitData'; ofType: null; } }; 'lineno': { name: 'lineno'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'lines': { name: 'lines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'span': { name: 'span'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'GroupsSavedReplyID': unknown;
    'HealthStatus': { kind: 'ENUM'; name: 'HealthStatus'; type: 'onTrack' | 'needsAttention' | 'atRisk'; };
    'HealthStatusFilter': { kind: 'ENUM'; name: 'HealthStatusFilter'; type: 'NONE' | 'ANY' | 'onTrack' | 'needsAttention' | 'atRisk'; };
    'HelmFileMetadata': { kind: 'OBJECT'; name: 'HelmFileMetadata'; fields: { 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageHelmMetadataType'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'HttpIntegrationCreateInput': { kind: 'INPUT_OBJECT'; name: 'HttpIntegrationCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'payloadExample'; type: { kind: 'SCALAR'; name: 'JsonString'; ofType: null; }; defaultValue: null }, { name: 'payloadAttributeMappings'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AlertManagementPayloadAlertFieldInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'HttpIntegrationCreatePayload': { kind: 'OBJECT'; name: 'HttpIntegrationCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'integration': { name: 'integration'; type: { kind: 'OBJECT'; name: 'AlertManagementHttpIntegration'; ofType: null; } }; }; };
    'HttpIntegrationDestroyInput': { kind: 'INPUT_OBJECT'; name: 'HttpIntegrationDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AlertManagementHttpIntegrationID'; ofType: null; }; }; defaultValue: null }]; };
    'HttpIntegrationDestroyPayload': { kind: 'OBJECT'; name: 'HttpIntegrationDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'integration': { name: 'integration'; type: { kind: 'OBJECT'; name: 'AlertManagementHttpIntegration'; ofType: null; } }; }; };
    'HttpIntegrationResetTokenInput': { kind: 'INPUT_OBJECT'; name: 'HttpIntegrationResetTokenInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AlertManagementHttpIntegrationID'; ofType: null; }; }; defaultValue: null }]; };
    'HttpIntegrationResetTokenPayload': { kind: 'OBJECT'; name: 'HttpIntegrationResetTokenPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'integration': { name: 'integration'; type: { kind: 'OBJECT'; name: 'AlertManagementHttpIntegration'; ofType: null; } }; }; };
    'HttpIntegrationUpdateInput': { kind: 'INPUT_OBJECT'; name: 'HttpIntegrationUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AlertManagementHttpIntegrationID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'payloadExample'; type: { kind: 'SCALAR'; name: 'JsonString'; ofType: null; }; defaultValue: null }, { name: 'payloadAttributeMappings'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AlertManagementPayloadAlertFieldInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'HttpIntegrationUpdatePayload': { kind: 'OBJECT'; name: 'HttpIntegrationUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'integration': { name: 'integration'; type: { kind: 'OBJECT'; name: 'AlertManagementHttpIntegration'; ofType: null; } }; }; };
    'ID': unknown;
    'ISO8601Date': unknown;
    'Ide': { kind: 'OBJECT'; name: 'Ide'; fields: { 'codeSuggestionsEnabled': { name: 'codeSuggestionsEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'IncidentManagementEscalationPolicyID': unknown;
    'IncidentManagementEscalationRuleID': unknown;
    'IncidentManagementIssuableResourceLinkID': unknown;
    'IncidentManagementOncallParticipantID': unknown;
    'IncidentManagementOncallRotation': { kind: 'OBJECT'; name: 'IncidentManagementOncallRotation'; fields: { 'activePeriod': { name: 'activePeriod'; type: { kind: 'OBJECT'; name: 'OncallRotationActivePeriodType'; ofType: null; } }; 'endsAt': { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IncidentManagementOncallRotationID'; ofType: null; }; } }; 'length': { name: 'length'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'lengthUnit': { name: 'lengthUnit'; type: { kind: 'ENUM'; name: 'OncallRotationUnitEnum'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'participants': { name: 'participants'; type: { kind: 'OBJECT'; name: 'OncallParticipantTypeConnection'; ofType: null; } }; 'shifts': { name: 'shifts'; type: { kind: 'OBJECT'; name: 'IncidentManagementOncallShiftConnection'; ofType: null; } }; 'startsAt': { name: 'startsAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'IncidentManagementOncallRotationConnection': { kind: 'OBJECT'; name: 'IncidentManagementOncallRotationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'IncidentManagementOncallRotationEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'IncidentManagementOncallRotation'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'IncidentManagementOncallRotationEdge': { kind: 'OBJECT'; name: 'IncidentManagementOncallRotationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'IncidentManagementOncallRotation'; ofType: null; } }; }; };
    'IncidentManagementOncallRotationID': unknown;
    'IncidentManagementOncallSchedule': { kind: 'OBJECT'; name: 'IncidentManagementOncallSchedule'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'iid': { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'oncallUsers': { name: 'oncallUsers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; }; } }; 'rotation': { name: 'rotation'; type: { kind: 'OBJECT'; name: 'IncidentManagementOncallRotation'; ofType: null; } }; 'rotations': { name: 'rotations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'IncidentManagementOncallRotationConnection'; ofType: null; }; } }; 'timezone': { name: 'timezone'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'IncidentManagementOncallScheduleConnection': { kind: 'OBJECT'; name: 'IncidentManagementOncallScheduleConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'IncidentManagementOncallScheduleEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'IncidentManagementOncallSchedule'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'IncidentManagementOncallScheduleEdge': { kind: 'OBJECT'; name: 'IncidentManagementOncallScheduleEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'IncidentManagementOncallSchedule'; ofType: null; } }; }; };
    'IncidentManagementOncallShift': { kind: 'OBJECT'; name: 'IncidentManagementOncallShift'; fields: { 'endsAt': { name: 'endsAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'participant': { name: 'participant'; type: { kind: 'OBJECT'; name: 'OncallParticipantType'; ofType: null; } }; 'startsAt': { name: 'startsAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'IncidentManagementOncallShiftConnection': { kind: 'OBJECT'; name: 'IncidentManagementOncallShiftConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'IncidentManagementOncallShiftEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'IncidentManagementOncallShift'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'IncidentManagementOncallShiftEdge': { kind: 'OBJECT'; name: 'IncidentManagementOncallShiftEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'IncidentManagementOncallShift'; ofType: null; } }; }; };
    'IncidentManagementTimelineEventID': unknown;
    'IncidentManagementTimelineEventTagID': unknown;
    'InheritedCiVariable': { kind: 'OBJECT'; name: 'InheritedCiVariable'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'environmentScope': { name: 'environmentScope'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'groupCiCdSettingsPath': { name: 'groupCiCdSettingsPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'groupName': { name: 'groupName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'masked': { name: 'masked'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'protected': { name: 'protected'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'raw': { name: 'raw'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'variableType': { name: 'variableType'; type: { kind: 'ENUM'; name: 'CiVariableType'; ofType: null; } }; }; };
    'InheritedCiVariableConnection': { kind: 'OBJECT'; name: 'InheritedCiVariableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'InheritedCiVariableEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'InheritedCiVariable'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'InheritedCiVariableEdge': { kind: 'OBJECT'; name: 'InheritedCiVariableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'InheritedCiVariable'; ofType: null; } }; }; };
    'InstanceAmazonS3ConfigurationType': { kind: 'OBJECT'; name: 'InstanceAmazonS3ConfigurationType'; fields: { 'accessKeyXid': { name: 'accessKeyXid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'awsRegion': { name: 'awsRegion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'bucketName': { name: 'bucketName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'InstanceAmazonS3ConfigurationTypeConnection': { kind: 'OBJECT'; name: 'InstanceAmazonS3ConfigurationTypeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'InstanceAmazonS3ConfigurationTypeEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'InstanceAmazonS3ConfigurationType'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'InstanceAmazonS3ConfigurationTypeEdge': { kind: 'OBJECT'; name: 'InstanceAmazonS3ConfigurationTypeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'InstanceAmazonS3ConfigurationType'; ofType: null; } }; }; };
    'InstanceExternalAuditEventDestination': { kind: 'OBJECT'; name: 'InstanceExternalAuditEventDestination'; fields: { 'destinationUrl': { name: 'destinationUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'eventTypeFilters': { name: 'eventTypeFilters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'headers': { name: 'headers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AuditEventsStreamingInstanceHeaderConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'verificationToken': { name: 'verificationToken'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'InstanceExternalAuditEventDestinationConnection': { kind: 'OBJECT'; name: 'InstanceExternalAuditEventDestinationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'InstanceExternalAuditEventDestinationEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'InstanceExternalAuditEventDestination'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'InstanceExternalAuditEventDestinationCreateInput': { kind: 'INPUT_OBJECT'; name: 'InstanceExternalAuditEventDestinationCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'destinationUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'InstanceExternalAuditEventDestinationCreatePayload': { kind: 'OBJECT'; name: 'InstanceExternalAuditEventDestinationCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'instanceExternalAuditEventDestination': { name: 'instanceExternalAuditEventDestination'; type: { kind: 'OBJECT'; name: 'InstanceExternalAuditEventDestination'; ofType: null; } }; }; };
    'InstanceExternalAuditEventDestinationDestroyInput': { kind: 'INPUT_OBJECT'; name: 'InstanceExternalAuditEventDestinationDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsInstanceExternalAuditEventDestinationID'; ofType: null; }; }; defaultValue: null }]; };
    'InstanceExternalAuditEventDestinationDestroyPayload': { kind: 'OBJECT'; name: 'InstanceExternalAuditEventDestinationDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'InstanceExternalAuditEventDestinationEdge': { kind: 'OBJECT'; name: 'InstanceExternalAuditEventDestinationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'InstanceExternalAuditEventDestination'; ofType: null; } }; }; };
    'InstanceExternalAuditEventDestinationUpdateInput': { kind: 'INPUT_OBJECT'; name: 'InstanceExternalAuditEventDestinationUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsInstanceExternalAuditEventDestinationID'; ofType: null; }; }; defaultValue: null }, { name: 'destinationUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'InstanceExternalAuditEventDestinationUpdatePayload': { kind: 'OBJECT'; name: 'InstanceExternalAuditEventDestinationUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'instanceExternalAuditEventDestination': { name: 'instanceExternalAuditEventDestination'; type: { kind: 'OBJECT'; name: 'InstanceExternalAuditEventDestination'; ofType: null; } }; }; };
    'InstanceGoogleCloudLoggingConfigurationCreateInput': { kind: 'INPUT_OBJECT'; name: 'InstanceGoogleCloudLoggingConfigurationCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'googleProjectIdName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'clientEmail'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'logIdName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: "\"audit_events\"" }, { name: 'privateKey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'InstanceGoogleCloudLoggingConfigurationCreatePayload': { kind: 'OBJECT'; name: 'InstanceGoogleCloudLoggingConfigurationCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'instanceGoogleCloudLoggingConfiguration': { name: 'instanceGoogleCloudLoggingConfiguration'; type: { kind: 'OBJECT'; name: 'InstanceGoogleCloudLoggingConfigurationType'; ofType: null; } }; }; };
    'InstanceGoogleCloudLoggingConfigurationDestroyInput': { kind: 'INPUT_OBJECT'; name: 'InstanceGoogleCloudLoggingConfigurationDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsInstanceGoogleCloudLoggingConfigurationID'; ofType: null; }; }; defaultValue: null }]; };
    'InstanceGoogleCloudLoggingConfigurationDestroyPayload': { kind: 'OBJECT'; name: 'InstanceGoogleCloudLoggingConfigurationDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'InstanceGoogleCloudLoggingConfigurationType': { kind: 'OBJECT'; name: 'InstanceGoogleCloudLoggingConfigurationType'; fields: { 'clientEmail': { name: 'clientEmail'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'googleProjectIdName': { name: 'googleProjectIdName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'logIdName': { name: 'logIdName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'InstanceGoogleCloudLoggingConfigurationTypeConnection': { kind: 'OBJECT'; name: 'InstanceGoogleCloudLoggingConfigurationTypeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'InstanceGoogleCloudLoggingConfigurationTypeEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'InstanceGoogleCloudLoggingConfigurationType'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'InstanceGoogleCloudLoggingConfigurationTypeEdge': { kind: 'OBJECT'; name: 'InstanceGoogleCloudLoggingConfigurationTypeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'InstanceGoogleCloudLoggingConfigurationType'; ofType: null; } }; }; };
    'InstanceGoogleCloudLoggingConfigurationUpdateInput': { kind: 'INPUT_OBJECT'; name: 'InstanceGoogleCloudLoggingConfigurationUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'googleProjectIdName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'clientEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'logIdName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'privateKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AuditEventsInstanceGoogleCloudLoggingConfigurationID'; ofType: null; }; }; defaultValue: null }]; };
    'InstanceGoogleCloudLoggingConfigurationUpdatePayload': { kind: 'OBJECT'; name: 'InstanceGoogleCloudLoggingConfigurationUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'instanceGoogleCloudLoggingConfiguration': { name: 'instanceGoogleCloudLoggingConfiguration'; type: { kind: 'OBJECT'; name: 'InstanceGoogleCloudLoggingConfigurationType'; ofType: null; } }; }; };
    'InstanceSecurityDashboard': { kind: 'OBJECT'; name: 'InstanceSecurityDashboard'; fields: { 'clusterAgents': { name: 'clusterAgents'; type: { kind: 'OBJECT'; name: 'ClusterAgentConnection'; ofType: null; } }; 'projects': { name: 'projects'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; }; } }; 'vulnerabilityGrades': { name: 'vulnerabilityGrades'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerableProjectsByGrade'; ofType: null; }; }; }; } }; 'vulnerabilityScanners': { name: 'vulnerabilityScanners'; type: { kind: 'OBJECT'; name: 'VulnerabilityScannerConnection'; ofType: null; } }; 'vulnerabilitySeveritiesCount': { name: 'vulnerabilitySeveritiesCount'; type: { kind: 'OBJECT'; name: 'VulnerabilitySeveritiesCount'; ofType: null; } }; }; };
    'Int': unknown;
    'IntegrationsPrometheusID': unknown;
    'Issuable': { kind: 'UNION'; name: 'Issuable'; fields: {}; possibleTypes: 'Epic' | 'Issue' | 'MergeRequest' | 'WorkItem'; };
    'IssuableID': unknown;
    'IssuableResourceLink': { kind: 'OBJECT'; name: 'IssuableResourceLink'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IncidentManagementIssuableResourceLinkID'; ofType: null; }; } }; 'issue': { name: 'issue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Issue'; ofType: null; }; } }; 'link': { name: 'link'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'linkText': { name: 'linkText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'linkType': { name: 'linkType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'IssuableResourceLinkType'; ofType: null; }; } }; }; };
    'IssuableResourceLinkConnection': { kind: 'OBJECT'; name: 'IssuableResourceLinkConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'IssuableResourceLinkEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'IssuableResourceLink'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'IssuableResourceLinkCreateInput': { kind: 'INPUT_OBJECT'; name: 'IssuableResourceLinkCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IssueID'; ofType: null; }; }; defaultValue: null }, { name: 'link'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'linkText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'linkType'; type: { kind: 'ENUM'; name: 'IssuableResourceLinkType'; ofType: null; }; defaultValue: null }]; };
    'IssuableResourceLinkCreatePayload': { kind: 'OBJECT'; name: 'IssuableResourceLinkCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issuableResourceLink': { name: 'issuableResourceLink'; type: { kind: 'OBJECT'; name: 'IssuableResourceLink'; ofType: null; } }; }; };
    'IssuableResourceLinkDestroyInput': { kind: 'INPUT_OBJECT'; name: 'IssuableResourceLinkDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IncidentManagementIssuableResourceLinkID'; ofType: null; }; }; defaultValue: null }]; };
    'IssuableResourceLinkDestroyPayload': { kind: 'OBJECT'; name: 'IssuableResourceLinkDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issuableResourceLink': { name: 'issuableResourceLink'; type: { kind: 'OBJECT'; name: 'IssuableResourceLink'; ofType: null; } }; }; };
    'IssuableResourceLinkEdge': { kind: 'OBJECT'; name: 'IssuableResourceLinkEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'IssuableResourceLink'; ofType: null; } }; }; };
    'IssuableResourceLinkType': { kind: 'ENUM'; name: 'IssuableResourceLinkType'; type: 'general' | 'zoom' | 'slack' | 'pagerduty'; };
    'IssuableSearchableField': { kind: 'ENUM'; name: 'IssuableSearchableField'; type: 'TITLE' | 'DESCRIPTION'; };
    'IssuableSeverity': { kind: 'ENUM'; name: 'IssuableSeverity'; type: 'UNKNOWN' | 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL'; };
    'IssuableState': { kind: 'ENUM'; name: 'IssuableState'; type: 'opened' | 'closed' | 'locked' | 'all'; };
    'IssuableSubscriptionEvent': { kind: 'ENUM'; name: 'IssuableSubscriptionEvent'; type: 'SUBSCRIBE' | 'UNSUBSCRIBE'; };
    'Issue': { kind: 'OBJECT'; name: 'Issue'; fields: { 'alertManagementAlert': { name: 'alertManagementAlert'; type: { kind: 'OBJECT'; name: 'AlertManagementAlert'; ofType: null; } }; 'alertManagementAlerts': { name: 'alertManagementAlerts'; type: { kind: 'OBJECT'; name: 'AlertManagementAlertConnection'; ofType: null; } }; 'assignees': { name: 'assignees'; type: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; } }; 'author': { name: 'author'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; 'blocked': { name: 'blocked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'blockedByCount': { name: 'blockedByCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'blockedByIssues': { name: 'blockedByIssues'; type: { kind: 'OBJECT'; name: 'IssueConnection'; ofType: null; } }; 'blockingCount': { name: 'blockingCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'closedAsDuplicateOf': { name: 'closedAsDuplicateOf'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; 'closedAt': { name: 'closedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'commenters': { name: 'commenters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; }; } }; 'confidential': { name: 'confidential'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createNoteEmail': { name: 'createNoteEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'currentUserTodos': { name: 'currentUserTodos'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TodoConnection'; ofType: null; }; } }; 'customerRelationsContacts': { name: 'customerRelationsContacts'; type: { kind: 'OBJECT'; name: 'CustomerRelationsContactConnection'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'designCollection': { name: 'designCollection'; type: { kind: 'OBJECT'; name: 'DesignCollection'; ofType: null; } }; 'discussionLocked': { name: 'discussionLocked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'discussions': { name: 'discussions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscussionConnection'; ofType: null; }; } }; 'downvotes': { name: 'downvotes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'dueDate': { name: 'dueDate'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'emailsDisabled': { name: 'emailsDisabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'emailsEnabled': { name: 'emailsEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'epic': { name: 'epic'; type: { kind: 'OBJECT'; name: 'Epic'; ofType: null; } }; 'escalationPolicy': { name: 'escalationPolicy'; type: { kind: 'OBJECT'; name: 'EscalationPolicyType'; ofType: null; } }; 'escalationStatus': { name: 'escalationStatus'; type: { kind: 'ENUM'; name: 'IssueEscalationStatus'; ofType: null; } }; 'externalAuthor': { name: 'externalAuthor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hasEpic': { name: 'hasEpic'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasParent': { name: 'hasParent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'healthStatus': { name: 'healthStatus'; type: { kind: 'ENUM'; name: 'HealthStatus'; ofType: null; } }; 'hidden': { name: 'hidden'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'humanTimeEstimate': { name: 'humanTimeEstimate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'humanTotalTimeSpent': { name: 'humanTotalTimeSpent'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'iid': { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'issuableResourceLinks': { name: 'issuableResourceLinks'; type: { kind: 'OBJECT'; name: 'IssuableResourceLinkConnection'; ofType: null; } }; 'iteration': { name: 'iteration'; type: { kind: 'OBJECT'; name: 'Iteration'; ofType: null; } }; 'labels': { name: 'labels'; type: { kind: 'OBJECT'; name: 'LabelConnection'; ofType: null; } }; 'mergeRequestsCount': { name: 'mergeRequestsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'metricImages': { name: 'metricImages'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetricImage'; ofType: null; }; }; } }; 'milestone': { name: 'milestone'; type: { kind: 'OBJECT'; name: 'Milestone'; ofType: null; } }; 'moved': { name: 'moved'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'movedTo': { name: 'movedTo'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; 'notes': { name: 'notes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NoteConnection'; ofType: null; }; } }; 'participants': { name: 'participants'; type: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; } }; 'projectId': { name: 'projectId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'reference': { name: 'reference'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'relatedMergeRequests': { name: 'relatedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'relatedVulnerabilities': { name: 'relatedVulnerabilities'; type: { kind: 'OBJECT'; name: 'VulnerabilityConnection'; ofType: null; } }; 'relativePosition': { name: 'relativePosition'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'severity': { name: 'severity'; type: { kind: 'ENUM'; name: 'IssuableSeverity'; ofType: null; } }; 'slaDueAt': { name: 'slaDueAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'IssueState'; ofType: null; }; } }; 'statusPagePublishedIncident': { name: 'statusPagePublishedIncident'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'subscribed': { name: 'subscribed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'taskCompletionStatus': { name: 'taskCompletionStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaskCompletionStatus'; ofType: null; }; } }; 'timeEstimate': { name: 'timeEstimate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'timelogs': { name: 'timelogs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TimelogConnection'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'titleHtml': { name: 'titleHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'totalTimeSpent': { name: 'totalTimeSpent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'IssueType'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'updatedBy': { name: 'updatedBy'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'upvotes': { name: 'upvotes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'userDiscussionsCount': { name: 'userDiscussionsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'userNotesCount': { name: 'userNotesCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'IssuePermissions'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'weight': { name: 'weight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'IssueConnection': { kind: 'OBJECT'; name: 'IssueConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'IssueEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Issue'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'weight': { name: 'weight'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'IssueCreationIterationWildcardId': { kind: 'ENUM'; name: 'IssueCreationIterationWildcardId'; type: 'CURRENT'; };
    'IssueEdge': { kind: 'OBJECT'; name: 'IssueEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'IssueEscalationStatus': { kind: 'ENUM'; name: 'IssueEscalationStatus'; type: 'TRIGGERED' | 'ACKNOWLEDGED' | 'RESOLVED' | 'IGNORED'; };
    'IssueID': unknown;
    'IssueLinkAlertsInput': { kind: 'INPUT_OBJECT'; name: 'IssueLinkAlertsInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'alertReferences'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'IssueLinkAlertsPayload': { kind: 'OBJECT'; name: 'IssueLinkAlertsPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'IssueMoveInput': { kind: 'INPUT_OBJECT'; name: 'IssueMoveInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'targetProjectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'IssueMoveListInput': { kind: 'INPUT_OBJECT'; name: 'IssueMoveListInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'boardId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BoardID'; ofType: null; }; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'fromListId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'toListId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'moveBeforeId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'moveAfterId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'positionInList'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'epicId'; type: { kind: 'SCALAR'; name: 'EpicID'; ofType: null; }; defaultValue: null }]; };
    'IssueMoveListPayload': { kind: 'OBJECT'; name: 'IssueMoveListPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'IssueMovePayload': { kind: 'OBJECT'; name: 'IssueMovePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'IssueParentID': unknown;
    'IssuePermissions': { kind: 'OBJECT'; name: 'IssuePermissions'; fields: { 'adminIssue': { name: 'adminIssue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'adminIssueRelation': { name: 'adminIssueRelation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createDesign': { name: 'createDesign'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createNote': { name: 'createNote'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'destroyDesign': { name: 'destroyDesign'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readDesign': { name: 'readDesign'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readIssue': { name: 'readIssue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'reopenIssue': { name: 'reopenIssue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updateDesign': { name: 'updateDesign'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updateIssue': { name: 'updateIssue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'IssueSetAssigneesInput': { kind: 'INPUT_OBJECT'; name: 'IssueSetAssigneesInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'assigneeUsernames'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'operationMode'; type: { kind: 'ENUM'; name: 'MutationOperationMode'; ofType: null; }; defaultValue: "REPLACE" }]; };
    'IssueSetAssigneesPayload': { kind: 'OBJECT'; name: 'IssueSetAssigneesPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'IssueSetConfidentialInput': { kind: 'INPUT_OBJECT'; name: 'IssueSetConfidentialInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'confidential'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'IssueSetConfidentialPayload': { kind: 'OBJECT'; name: 'IssueSetConfidentialPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'IssueSetCrmContactsInput': { kind: 'INPUT_OBJECT'; name: 'IssueSetCrmContactsInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'contactIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CustomerRelationsContactID'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'operationMode'; type: { kind: 'ENUM'; name: 'MutationOperationMode'; ofType: null; }; defaultValue: null }]; };
    'IssueSetCrmContactsPayload': { kind: 'OBJECT'; name: 'IssueSetCrmContactsPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'IssueSetDueDateInput': { kind: 'INPUT_OBJECT'; name: 'IssueSetDueDateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'dueDate'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; defaultValue: null }]; };
    'IssueSetDueDatePayload': { kind: 'OBJECT'; name: 'IssueSetDueDatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'IssueSetEpicInput': { kind: 'INPUT_OBJECT'; name: 'IssueSetEpicInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'epicId'; type: { kind: 'SCALAR'; name: 'EpicID'; ofType: null; }; defaultValue: null }]; };
    'IssueSetEpicPayload': { kind: 'OBJECT'; name: 'IssueSetEpicPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'IssueSetEscalationPolicyInput': { kind: 'INPUT_OBJECT'; name: 'IssueSetEscalationPolicyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'escalationPolicyId'; type: { kind: 'SCALAR'; name: 'IncidentManagementEscalationPolicyID'; ofType: null; }; defaultValue: null }]; };
    'IssueSetEscalationPolicyPayload': { kind: 'OBJECT'; name: 'IssueSetEscalationPolicyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'IssueSetEscalationStatusInput': { kind: 'INPUT_OBJECT'; name: 'IssueSetEscalationStatusInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'IssueEscalationStatus'; ofType: null; }; }; defaultValue: null }]; };
    'IssueSetEscalationStatusPayload': { kind: 'OBJECT'; name: 'IssueSetEscalationStatusPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'IssueSetIterationInput': { kind: 'INPUT_OBJECT'; name: 'IssueSetIterationInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'iterationId'; type: { kind: 'SCALAR'; name: 'IterationID'; ofType: null; }; defaultValue: null }]; };
    'IssueSetIterationPayload': { kind: 'OBJECT'; name: 'IssueSetIterationPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'IssueSetLockedInput': { kind: 'INPUT_OBJECT'; name: 'IssueSetLockedInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'locked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'IssueSetLockedPayload': { kind: 'OBJECT'; name: 'IssueSetLockedPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'IssueSetSeverityInput': { kind: 'INPUT_OBJECT'; name: 'IssueSetSeverityInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'severity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'IssuableSeverity'; ofType: null; }; }; defaultValue: null }]; };
    'IssueSetSeverityPayload': { kind: 'OBJECT'; name: 'IssueSetSeverityPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'IssueSetSubscriptionInput': { kind: 'INPUT_OBJECT'; name: 'IssueSetSubscriptionInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'subscribedState'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'IssueSetSubscriptionPayload': { kind: 'OBJECT'; name: 'IssueSetSubscriptionPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'IssueSetWeightInput': { kind: 'INPUT_OBJECT'; name: 'IssueSetWeightInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'IssueSetWeightPayload': { kind: 'OBJECT'; name: 'IssueSetWeightPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'IssueSort': { kind: 'ENUM'; name: 'IssueSort'; type: 'DUE_DATE_ASC' | 'DUE_DATE_DESC' | 'RELATIVE_POSITION_ASC' | 'SEVERITY_ASC' | 'SEVERITY_DESC' | 'TITLE_ASC' | 'TITLE_DESC' | 'POPULARITY_ASC' | 'POPULARITY_DESC' | 'ESCALATION_STATUS_ASC' | 'ESCALATION_STATUS_DESC' | 'CLOSED_AT_ASC' | 'CLOSED_AT_DESC' | 'WEIGHT_ASC' | 'WEIGHT_DESC' | 'PUBLISHED_ASC' | 'PUBLISHED_DESC' | 'SLA_DUE_AT_ASC' | 'SLA_DUE_AT_DESC' | 'BLOCKING_ISSUES_ASC' | 'BLOCKING_ISSUES_DESC' | 'HEALTH_STATUS_ASC' | 'HEALTH_STATUS_DESC' | 'PRIORITY_ASC' | 'PRIORITY_DESC' | 'LABEL_PRIORITY_ASC' | 'LABEL_PRIORITY_DESC' | 'MILESTONE_DUE_ASC' | 'MILESTONE_DUE_DESC' | 'updated_desc' | 'updated_asc' | 'created_desc' | 'created_asc' | 'UPDATED_DESC' | 'UPDATED_ASC' | 'CREATED_DESC' | 'CREATED_ASC'; };
    'IssueState': { kind: 'ENUM'; name: 'IssueState'; type: 'opened' | 'closed' | 'locked' | 'all'; };
    'IssueStateEvent': { kind: 'ENUM'; name: 'IssueStateEvent'; type: 'REOPEN' | 'CLOSE'; };
    'IssueStatusCountsType': { kind: 'OBJECT'; name: 'IssueStatusCountsType'; fields: { 'all': { name: 'all'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'closed': { name: 'closed'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'opened': { name: 'opened'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'IssueType': { kind: 'ENUM'; name: 'IssueType'; type: 'ISSUE' | 'INCIDENT' | 'TEST_CASE' | 'REQUIREMENT' | 'TASK' | 'OBJECTIVE' | 'KEY_RESULT' | 'EPIC'; };
    'IssueUnlinkAlertInput': { kind: 'INPUT_OBJECT'; name: 'IssueUnlinkAlertInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'alertId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AlertManagementAlertID'; ofType: null; }; }; defaultValue: null }]; };
    'IssueUnlinkAlertPayload': { kind: 'OBJECT'; name: 'IssueUnlinkAlertPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'IssuesBulkUpdateInput': { kind: 'INPUT_OBJECT'; name: 'IssuesBulkUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'parentId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IssueParentID'; ofType: null; }; }; defaultValue: null }, { name: 'ids'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IssueID'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'assigneeIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UserID'; ofType: null; }; }; }; defaultValue: null }, { name: 'milestoneId'; type: { kind: 'SCALAR'; name: 'MilestoneID'; ofType: null; }; defaultValue: null }, { name: 'stateEvent'; type: { kind: 'ENUM'; name: 'IssueStateEvent'; ofType: null; }; defaultValue: null }, { name: 'addLabelIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'LabelID'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeLabelIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'LabelID'; ofType: null; }; }; }; defaultValue: null }, { name: 'subscriptionEvent'; type: { kind: 'ENUM'; name: 'IssuableSubscriptionEvent'; ofType: null; }; defaultValue: null }, { name: 'iterationId'; type: { kind: 'SCALAR'; name: 'IterationID'; ofType: null; }; defaultValue: null }, { name: 'epicId'; type: { kind: 'SCALAR'; name: 'EpicID'; ofType: null; }; defaultValue: null }, { name: 'healthStatus'; type: { kind: 'ENUM'; name: 'HealthStatus'; ofType: null; }; defaultValue: null }]; };
    'IssuesBulkUpdatePayload': { kind: 'OBJECT'; name: 'IssuesBulkUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'updatedIssueCount': { name: 'updatedIssueCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'Iteration': { kind: 'OBJECT'; name: 'Iteration'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dueDate': { name: 'dueDate'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'iid': { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'iterationCadence': { name: 'iterationCadence'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'IterationCadence'; ofType: null; }; } }; 'report': { name: 'report'; type: { kind: 'OBJECT'; name: 'TimeboxReport'; ofType: null; } }; 'scopedPath': { name: 'scopedPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'scopedUrl': { name: 'scopedUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'sequence': { name: 'sequence'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'startDate': { name: 'startDate'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'IterationState'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'IterationCadence': { kind: 'OBJECT'; name: 'IterationCadence'; fields: { 'active': { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'automatic': { name: 'automatic'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'durationInWeeks': { name: 'durationInWeeks'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IterationsCadenceID'; ofType: null; }; } }; 'iterationsInAdvance': { name: 'iterationsInAdvance'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'rollOver': { name: 'rollOver'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'startDate': { name: 'startDate'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'IterationCadenceConnection': { kind: 'OBJECT'; name: 'IterationCadenceConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'IterationCadenceEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'IterationCadence'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'IterationCadenceCreateInput': { kind: 'INPUT_OBJECT'; name: 'IterationCadenceCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'durationInWeeks'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'iterationsInAdvance'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'startDate'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; defaultValue: null }, { name: 'automatic'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'rollOver'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'IterationCadenceCreatePayload': { kind: 'OBJECT'; name: 'IterationCadenceCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'iterationCadence': { name: 'iterationCadence'; type: { kind: 'OBJECT'; name: 'IterationCadence'; ofType: null; } }; }; };
    'IterationCadenceDestroyInput': { kind: 'INPUT_OBJECT'; name: 'IterationCadenceDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IterationsCadenceID'; ofType: null; }; }; defaultValue: null }]; };
    'IterationCadenceDestroyPayload': { kind: 'OBJECT'; name: 'IterationCadenceDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'group': { name: 'group'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Group'; ofType: null; }; } }; }; };
    'IterationCadenceEdge': { kind: 'OBJECT'; name: 'IterationCadenceEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'IterationCadence'; ofType: null; } }; }; };
    'IterationCadenceUpdateInput': { kind: 'INPUT_OBJECT'; name: 'IterationCadenceUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IterationsCadenceID'; ofType: null; }; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'durationInWeeks'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'iterationsInAdvance'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'startDate'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; defaultValue: null }, { name: 'automatic'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'rollOver'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'IterationCadenceUpdatePayload': { kind: 'OBJECT'; name: 'IterationCadenceUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'iterationCadence': { name: 'iterationCadence'; type: { kind: 'OBJECT'; name: 'IterationCadence'; ofType: null; } }; }; };
    'IterationConnection': { kind: 'OBJECT'; name: 'IterationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'IterationEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Iteration'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'IterationDeleteInput': { kind: 'INPUT_OBJECT'; name: 'IterationDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IterationID'; ofType: null; }; }; defaultValue: null }]; };
    'IterationDeletePayload': { kind: 'OBJECT'; name: 'IterationDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'group': { name: 'group'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Group'; ofType: null; }; } }; }; };
    'IterationEdge': { kind: 'OBJECT'; name: 'IterationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Iteration'; ofType: null; } }; }; };
    'IterationID': unknown;
    'IterationSearchableField': { kind: 'ENUM'; name: 'IterationSearchableField'; type: 'TITLE' | 'CADENCE_TITLE'; };
    'IterationSort': { kind: 'ENUM'; name: 'IterationSort'; type: 'CADENCE_AND_DUE_DATE_ASC' | 'CADENCE_AND_DUE_DATE_DESC'; };
    'IterationState': { kind: 'ENUM'; name: 'IterationState'; type: 'upcoming' | 'current' | 'opened' | 'closed' | 'all'; };
    'IterationWildcardId': { kind: 'ENUM'; name: 'IterationWildcardId'; type: 'NONE' | 'ANY' | 'CURRENT'; };
    'IterationsCadenceID': unknown;
    'JSON': unknown;
    'JiraImport': { kind: 'OBJECT'; name: 'JiraImport'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'failedToImportCount': { name: 'failedToImportCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'importedIssuesCount': { name: 'importedIssuesCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'jiraProjectKey': { name: 'jiraProjectKey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'scheduledAt': { name: 'scheduledAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'scheduledBy': { name: 'scheduledBy'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'totalIssueCount': { name: 'totalIssueCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'JiraImportConnection': { kind: 'OBJECT'; name: 'JiraImportConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'JiraImportEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'JiraImport'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'JiraImportEdge': { kind: 'OBJECT'; name: 'JiraImportEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'JiraImport'; ofType: null; } }; }; };
    'JiraImportStartInput': { kind: 'INPUT_OBJECT'; name: 'JiraImportStartInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'jiraProjectKey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'jiraProjectName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'usersMapping'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'JiraUsersMappingInputType'; ofType: null; }; }; }; defaultValue: null }]; };
    'JiraImportStartPayload': { kind: 'OBJECT'; name: 'JiraImportStartPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'jiraImport': { name: 'jiraImport'; type: { kind: 'OBJECT'; name: 'JiraImport'; ofType: null; } }; }; };
    'JiraImportUsersInput': { kind: 'INPUT_OBJECT'; name: 'JiraImportUsersInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'startAt'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'JiraImportUsersPayload': { kind: 'OBJECT'; name: 'JiraImportUsersPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'jiraUsers': { name: 'jiraUsers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'JiraUser'; ofType: null; }; }; } }; }; };
    'JiraProject': { kind: 'OBJECT'; name: 'JiraProject'; fields: { 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'projectId': { name: 'projectId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'JiraProjectConnection': { kind: 'OBJECT'; name: 'JiraProjectConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'JiraProjectEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'JiraProject'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'JiraProjectEdge': { kind: 'OBJECT'; name: 'JiraProjectEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'JiraProject'; ofType: null; } }; }; };
    'JiraService': { kind: 'OBJECT'; name: 'JiraService'; fields: { 'active': { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'projects': { name: 'projects'; type: { kind: 'OBJECT'; name: 'JiraProjectConnection'; ofType: null; } }; 'serviceType': { name: 'serviceType'; type: { kind: 'ENUM'; name: 'ServiceType'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'JiraUser': { kind: 'OBJECT'; name: 'JiraUser'; fields: { 'gitlabId': { name: 'gitlabId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'gitlabName': { name: 'gitlabName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'gitlabUsername': { name: 'gitlabUsername'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'jiraAccountId': { name: 'jiraAccountId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'jiraDisplayName': { name: 'jiraDisplayName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'jiraEmail': { name: 'jiraEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'JiraUsersMappingInputType': { kind: 'INPUT_OBJECT'; name: 'JiraUsersMappingInputType'; inputFields: [{ name: 'gitlabId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'jiraAccountId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'JobArtifactFileType': { kind: 'ENUM'; name: 'JobArtifactFileType'; type: 'ARCHIVE' | 'METADATA' | 'TRACE' | 'JUNIT' | 'METRICS' | 'METRICS_REFEREE' | 'NETWORK_REFEREE' | 'DOTENV' | 'COBERTURA' | 'CLUSTER_APPLICATIONS' | 'LSIF' | 'CYCLONEDX' | 'ANNOTATIONS' | 'REPOSITORY_XRAY' | 'SAST' | 'SECRET_DETECTION' | 'DEPENDENCY_SCANNING' | 'CONTAINER_SCANNING' | 'CLUSTER_IMAGE_SCANNING' | 'DAST' | 'LICENSE_SCANNING' | 'ACCESSIBILITY' | 'CODEQUALITY' | 'PERFORMANCE' | 'BROWSER_PERFORMANCE' | 'LOAD_PERFORMANCE' | 'TERRAFORM' | 'REQUIREMENTS' | 'REQUIREMENTS_V2' | 'COVERAGE_FUZZING' | 'API_FUZZING'; };
    'JobArtifactRegistry': { kind: 'OBJECT'; name: 'JobArtifactRegistry'; fields: { 'artifactId': { name: 'artifactId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSyncFailure': { name: 'lastSyncFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSyncedAt': { name: 'lastSyncedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryAt': { name: 'retryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryCount': { name: 'retryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'RegistryState'; ofType: null; } }; 'verificationChecksum': { name: 'verificationChecksum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationFailure': { name: 'verificationFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationRetryAt': { name: 'verificationRetryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationRetryCount': { name: 'verificationRetryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'verificationStartedAt': { name: 'verificationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationState': { name: 'verificationState'; type: { kind: 'ENUM'; name: 'VerificationStateEnum'; ofType: null; } }; 'verifiedAt': { name: 'verifiedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'JobArtifactRegistryConnection': { kind: 'OBJECT'; name: 'JobArtifactRegistryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'JobArtifactRegistryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'JobArtifactRegistry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'JobArtifactRegistryEdge': { kind: 'OBJECT'; name: 'JobArtifactRegistryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'JobArtifactRegistry'; ofType: null; } }; }; };
    'JobArtifactsDestroyInput': { kind: 'INPUT_OBJECT'; name: 'JobArtifactsDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiBuildID'; ofType: null; }; }; defaultValue: null }]; };
    'JobArtifactsDestroyPayload': { kind: 'OBJECT'; name: 'JobArtifactsDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'destroyedArtifactsCount': { name: 'destroyedArtifactsCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'CiJob'; ofType: null; } }; }; };
    'JobCancelInput': { kind: 'INPUT_OBJECT'; name: 'JobCancelInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiBuildID'; ofType: null; }; }; defaultValue: null }]; };
    'JobCancelPayload': { kind: 'OBJECT'; name: 'JobCancelPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'CiJob'; ofType: null; } }; }; };
    'JobID': unknown;
    'JobNeedUnion': { kind: 'UNION'; name: 'JobNeedUnion'; fields: {}; possibleTypes: 'CiBuildNeed' | 'CiJob'; };
    'JobNeedUnionConnection': { kind: 'OBJECT'; name: 'JobNeedUnionConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'JobNeedUnionEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'UNION'; name: 'JobNeedUnion'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'JobNeedUnionEdge': { kind: 'OBJECT'; name: 'JobNeedUnionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'UNION'; name: 'JobNeedUnion'; ofType: null; } }; }; };
    'JobPermissions': { kind: 'OBJECT'; name: 'JobPermissions'; fields: { 'cancelBuild': { name: 'cancelBuild'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readBuild': { name: 'readBuild'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readJobArtifacts': { name: 'readJobArtifacts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updateBuild': { name: 'updateBuild'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'JobPlayInput': { kind: 'INPUT_OBJECT'; name: 'JobPlayInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiBuildID'; ofType: null; }; }; defaultValue: null }, { name: 'variables'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CiVariableInput'; ofType: null; }; }; }; defaultValue: "[]" }]; };
    'JobPlayPayload': { kind: 'OBJECT'; name: 'JobPlayPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'CiJob'; ofType: null; } }; }; };
    'JobRetryInput': { kind: 'INPUT_OBJECT'; name: 'JobRetryInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiProcessableID'; ofType: null; }; }; defaultValue: null }, { name: 'variables'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CiVariableInput'; ofType: null; }; }; }; defaultValue: "[]" }]; };
    'JobRetryPayload': { kind: 'OBJECT'; name: 'JobRetryPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'CiJob'; ofType: null; } }; }; };
    'JobUnscheduleInput': { kind: 'INPUT_OBJECT'; name: 'JobUnscheduleInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiBuildID'; ofType: null; }; }; defaultValue: null }]; };
    'JobUnschedulePayload': { kind: 'OBJECT'; name: 'JobUnschedulePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'CiJob'; ofType: null; } }; }; };
    'JsonString': unknown;
    'Kas': { kind: 'OBJECT'; name: 'Kas'; fields: { 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'externalUrl': { name: 'externalUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Key': { kind: 'OBJECT'; name: 'Key'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'expiresAt': { name: 'expiresAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Label': { kind: 'OBJECT'; name: 'Label'; fields: { 'color': { name: 'color'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lockOnMerge': { name: 'lockOnMerge'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'textColor': { name: 'textColor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'LabelConnection': { kind: 'OBJECT'; name: 'LabelConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'LabelEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Label'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'LabelCreateInput': { kind: 'INPUT_OBJECT'; name: 'LabelCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'color'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: "\"#6699cc\"" }]; };
    'LabelCreatePayload': { kind: 'OBJECT'; name: 'LabelCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'label': { name: 'label'; type: { kind: 'OBJECT'; name: 'Label'; ofType: null; } }; }; };
    'LabelEdge': { kind: 'OBJECT'; name: 'LabelEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Label'; ofType: null; } }; }; };
    'LabelID': unknown;
    'LfsObjectRegistry': { kind: 'OBJECT'; name: 'LfsObjectRegistry'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSyncFailure': { name: 'lastSyncFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSyncedAt': { name: 'lastSyncedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'lfsObjectId': { name: 'lfsObjectId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'retryAt': { name: 'retryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryCount': { name: 'retryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'RegistryState'; ofType: null; } }; 'verificationChecksum': { name: 'verificationChecksum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationFailure': { name: 'verificationFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationRetryAt': { name: 'verificationRetryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationRetryCount': { name: 'verificationRetryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'verificationStartedAt': { name: 'verificationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationState': { name: 'verificationState'; type: { kind: 'ENUM'; name: 'VerificationStateEnum'; ofType: null; } }; 'verifiedAt': { name: 'verifiedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'LfsObjectRegistryConnection': { kind: 'OBJECT'; name: 'LfsObjectRegistryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'LfsObjectRegistryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'LfsObjectRegistry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'LfsObjectRegistryEdge': { kind: 'OBJECT'; name: 'LfsObjectRegistryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'LfsObjectRegistry'; ofType: null; } }; }; };
    'License': { kind: 'OBJECT'; name: 'License'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'LicenseHistoryEntry': { kind: 'OBJECT'; name: 'LicenseHistoryEntry'; fields: { 'activatedAt': { name: 'activatedAt'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'blockChangesAt': { name: 'blockChangesAt'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'company': { name: 'company'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'expiresAt': { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'plan': { name: 'plan'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'startsAt': { name: 'startsAt'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'usersInLicenseCount': { name: 'usersInLicenseCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'LicenseHistoryEntryConnection': { kind: 'OBJECT'; name: 'LicenseHistoryEntryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'LicenseHistoryEntryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'LicenseHistoryEntry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'LicenseHistoryEntryEdge': { kind: 'OBJECT'; name: 'LicenseHistoryEntryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'LicenseHistoryEntry'; ofType: null; } }; }; };
    'LinkedWorkItemType': { kind: 'OBJECT'; name: 'LinkedWorkItemType'; fields: { 'linkCreatedAt': { name: 'linkCreatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'linkId': { name: 'linkId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'WorkItemsRelatedWorkItemLinkID'; ofType: null; }; } }; 'linkType': { name: 'linkType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'linkUpdatedAt': { name: 'linkUpdatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'workItem': { name: 'workItem'; type: { kind: 'OBJECT'; name: 'WorkItem'; ofType: null; } }; }; };
    'LinkedWorkItemTypeConnection': { kind: 'OBJECT'; name: 'LinkedWorkItemTypeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'LinkedWorkItemTypeEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'LinkedWorkItemType'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'LinkedWorkItemTypeEdge': { kind: 'OBJECT'; name: 'LinkedWorkItemTypeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'LinkedWorkItemType'; ofType: null; } }; }; };
    'ListID': unknown;
    'ListLimitMetric': { kind: 'ENUM'; name: 'ListLimitMetric'; type: 'all_metrics' | 'issue_count' | 'issue_weights'; };
    'Location': { kind: 'OBJECT'; name: 'Location'; fields: { 'blobPath': { name: 'blobPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MLCandidateLinks': { kind: 'OBJECT'; name: 'MLCandidateLinks'; fields: { 'artifactPath': { name: 'artifactPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'showPath': { name: 'showPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MLModelLinks': { kind: 'OBJECT'; name: 'MLModelLinks'; fields: { 'showPath': { name: 'showPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MLModelVersionLinks': { kind: 'OBJECT'; name: 'MLModelVersionLinks'; fields: { 'packagePath': { name: 'packagePath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'showPath': { name: 'showPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MarkAsSpamSnippetInput': { kind: 'INPUT_OBJECT'; name: 'MarkAsSpamSnippetInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'SnippetID'; ofType: null; }; }; defaultValue: null }]; };
    'MarkAsSpamSnippetPayload': { kind: 'OBJECT'; name: 'MarkAsSpamSnippetPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'snippet': { name: 'snippet'; type: { kind: 'OBJECT'; name: 'Snippet'; ofType: null; } }; }; };
    'MavenMetadata': { kind: 'OBJECT'; name: 'MavenMetadata'; fields: { 'appGroup': { name: 'appGroup'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'appName': { name: 'appName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'appVersion': { name: 'appVersion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesMavenMetadatumID'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'MeasurementIdentifier': { kind: 'ENUM'; name: 'MeasurementIdentifier'; type: 'PROJECTS' | 'USERS' | 'ISSUES' | 'MERGE_REQUESTS' | 'GROUPS' | 'PIPELINES' | 'PIPELINES_SUCCEEDED' | 'PIPELINES_FAILED' | 'PIPELINES_CANCELED' | 'PIPELINES_SKIPPED'; };
    'MemberAccessLevel': { kind: 'ENUM'; name: 'MemberAccessLevel'; type: 'GUEST' | 'REPORTER' | 'DEVELOPER' | 'MAINTAINER' | 'OWNER' | 'MINIMAL_ACCESS'; };
    'MemberAccessLevelName': { kind: 'ENUM'; name: 'MemberAccessLevelName'; type: 'GUEST' | 'REPORTER' | 'DEVELOPER' | 'MAINTAINER' | 'OWNER'; };
    'MemberInterface': { kind: 'INTERFACE'; name: 'MemberInterface'; fields: { 'accessLevel': { name: 'accessLevel'; type: { kind: 'OBJECT'; name: 'AccessLevel'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'createdBy': { name: 'createdBy'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'expiresAt': { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'mergeRequestInteraction': { name: 'mergeRequestInteraction'; type: { kind: 'OBJECT'; name: 'UserMergeRequestInteraction'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; }; possibleTypes: 'GroupMember' | 'PendingGroupMember' | 'ProjectMember'; };
    'MemberInterfaceConnection': { kind: 'OBJECT'; name: 'MemberInterfaceConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MemberInterfaceEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'INTERFACE'; name: 'MemberInterface'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MemberInterfaceEdge': { kind: 'OBJECT'; name: 'MemberInterfaceEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'INTERFACE'; name: 'MemberInterface'; ofType: null; } }; }; };
    'MemberRole': { kind: 'OBJECT'; name: 'MemberRole'; fields: { 'baseAccessLevel': { name: 'baseAccessLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccessLevel'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'enabledPermissions': { name: 'enabledPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomizablePermissionConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'MemberRoleID'; ofType: null; }; } }; 'membersCount': { name: 'membersCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MemberRoleConnection': { kind: 'OBJECT'; name: 'MemberRoleConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MemberRoleEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MemberRole'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MemberRoleCreateInput': { kind: 'INPUT_OBJECT'; name: 'MemberRoleCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'permissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MemberRolePermission'; ofType: null; }; }; }; defaultValue: null }, { name: 'baseAccessLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MemberAccessLevel'; ofType: null; }; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'MemberRoleCreatePayload': { kind: 'OBJECT'; name: 'MemberRoleCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'memberRole': { name: 'memberRole'; type: { kind: 'OBJECT'; name: 'MemberRole'; ofType: null; } }; }; };
    'MemberRoleDeleteInput': { kind: 'INPUT_OBJECT'; name: 'MemberRoleDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'MemberRoleID'; ofType: null; }; }; defaultValue: null }]; };
    'MemberRoleDeletePayload': { kind: 'OBJECT'; name: 'MemberRoleDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'memberRole': { name: 'memberRole'; type: { kind: 'OBJECT'; name: 'MemberRole'; ofType: null; } }; }; };
    'MemberRoleEdge': { kind: 'OBJECT'; name: 'MemberRoleEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'MemberRole'; ofType: null; } }; }; };
    'MemberRoleID': unknown;
    'MemberRolePermission': { kind: 'ENUM'; name: 'MemberRolePermission'; type: 'ADMIN_CICD_VARIABLES' | 'ADMIN_GROUP_MEMBER' | 'ADMIN_MERGE_REQUEST' | 'ADMIN_PUSH_RULES' | 'ADMIN_TERRAFORM_STATE' | 'ADMIN_VULNERABILITY' | 'ARCHIVE_PROJECT' | 'MANAGE_GROUP_ACCESS_TOKENS' | 'MANAGE_PROJECT_ACCESS_TOKENS' | 'READ_CODE' | 'READ_DEPENDENCY' | 'READ_VULNERABILITY' | 'REMOVE_GROUP' | 'REMOVE_PROJECT'; };
    'MemberRoleUpdateInput': { kind: 'INPUT_OBJECT'; name: 'MemberRoleUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'permissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MemberRolePermission'; ofType: null; }; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'MemberRoleID'; ofType: null; }; }; defaultValue: null }]; };
    'MemberRoleUpdatePayload': { kind: 'OBJECT'; name: 'MemberRoleUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'memberRole': { name: 'memberRole'; type: { kind: 'OBJECT'; name: 'MemberRole'; ofType: null; } }; }; };
    'MemberRolesOrderBy': { kind: 'ENUM'; name: 'MemberRolesOrderBy'; type: 'NAME' | 'CREATED_AT' | 'ID'; };
    'MemberSort': { kind: 'ENUM'; name: 'MemberSort'; type: 'ACCESS_LEVEL_ASC' | 'ACCESS_LEVEL_DESC' | 'USER_FULL_NAME_ASC' | 'USER_FULL_NAME_DESC' | 'updated_desc' | 'updated_asc' | 'created_desc' | 'created_asc' | 'UPDATED_DESC' | 'UPDATED_ASC' | 'CREATED_DESC' | 'CREATED_ASC'; };
    'MergeAccessLevel': { kind: 'OBJECT'; name: 'MergeAccessLevel'; fields: { 'accessLevel': { name: 'accessLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'accessLevelDescription': { name: 'accessLevelDescription'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'group': { name: 'group'; type: { kind: 'OBJECT'; name: 'AccessLevelGroup'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'AccessLevelUser'; ofType: null; } }; }; };
    'MergeAccessLevelConnection': { kind: 'OBJECT'; name: 'MergeAccessLevelConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeAccessLevelEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeAccessLevel'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MergeAccessLevelEdge': { kind: 'OBJECT'; name: 'MergeAccessLevelEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'MergeAccessLevel'; ofType: null; } }; }; };
    'MergeRequest': { kind: 'OBJECT'; name: 'MergeRequest'; fields: { 'allowCollaboration': { name: 'allowCollaboration'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'allowsMultipleAssignees': { name: 'allowsMultipleAssignees'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'allowsMultipleReviewers': { name: 'allowsMultipleReviewers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'approvalState': { name: 'approvalState'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequestApprovalState'; ofType: null; }; } }; 'approvalsLeft': { name: 'approvalsLeft'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'approvalsRequired': { name: 'approvalsRequired'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'approved': { name: 'approved'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'approvedBy': { name: 'approvedBy'; type: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; } }; 'assignees': { name: 'assignees'; type: { kind: 'OBJECT'; name: 'MergeRequestAssigneeConnection'; ofType: null; } }; 'author': { name: 'author'; type: { kind: 'OBJECT'; name: 'MergeRequestAuthor'; ofType: null; } }; 'autoMergeEnabled': { name: 'autoMergeEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'autoMergeStrategy': { name: 'autoMergeStrategy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'availableAutoMergeStrategies': { name: 'availableAutoMergeStrategies'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'awardEmoji': { name: 'awardEmoji'; type: { kind: 'OBJECT'; name: 'AwardEmojiConnection'; ofType: null; } }; 'blockingMergeRequests': { name: 'blockingMergeRequests'; type: { kind: 'OBJECT'; name: 'BlockingMergeRequests'; ofType: null; } }; 'codequalityReportsComparer': { name: 'codequalityReportsComparer'; type: { kind: 'OBJECT'; name: 'CodequalityReportsComparer'; ofType: null; } }; 'commenters': { name: 'commenters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; }; } }; 'commitCount': { name: 'commitCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'commits': { name: 'commits'; type: { kind: 'OBJECT'; name: 'CommitConnection'; ofType: null; } }; 'commitsWithoutMergeCommits': { name: 'commitsWithoutMergeCommits'; type: { kind: 'OBJECT'; name: 'CommitConnection'; ofType: null; } }; 'committers': { name: 'committers'; type: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; } }; 'conflicts': { name: 'conflicts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'currentUserTodos': { name: 'currentUserTodos'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TodoConnection'; ofType: null; }; } }; 'defaultMergeCommitMessage': { name: 'defaultMergeCommitMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'defaultSquashCommitMessage': { name: 'defaultSquashCommitMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'detailedMergeStatus': { name: 'detailedMergeStatus'; type: { kind: 'ENUM'; name: 'DetailedMergeStatus'; ofType: null; } }; 'diffHeadSha': { name: 'diffHeadSha'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'diffLlmSummaries': { name: 'diffLlmSummaries'; type: { kind: 'OBJECT'; name: 'MergeRequestDiffLlmSummaryConnection'; ofType: null; } }; 'diffRefs': { name: 'diffRefs'; type: { kind: 'OBJECT'; name: 'DiffRefs'; ofType: null; } }; 'diffStats': { name: 'diffStats'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiffStats'; ofType: null; }; }; } }; 'diffStatsSummary': { name: 'diffStatsSummary'; type: { kind: 'OBJECT'; name: 'DiffStatsSummary'; ofType: null; } }; 'discussionLocked': { name: 'discussionLocked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'discussions': { name: 'discussions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscussionConnection'; ofType: null; }; } }; 'divergedFromTargetBranch': { name: 'divergedFromTargetBranch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'downvotes': { name: 'downvotes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'draft': { name: 'draft'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'findingReportsComparer': { name: 'findingReportsComparer'; type: { kind: 'OBJECT'; name: 'FindingReportsComparer'; ofType: null; } }; 'forceRemoveSourceBranch': { name: 'forceRemoveSourceBranch'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'hasCi': { name: 'hasCi'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasSecurityReports': { name: 'hasSecurityReports'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'headPipeline': { name: 'headPipeline'; type: { kind: 'OBJECT'; name: 'Pipeline'; ofType: null; } }; 'humanTimeEstimate': { name: 'humanTimeEstimate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'humanTotalTimeSpent': { name: 'humanTotalTimeSpent'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'iid': { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'inProgressMergeCommitSha': { name: 'inProgressMergeCommitSha'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'labels': { name: 'labels'; type: { kind: 'OBJECT'; name: 'LabelConnection'; ofType: null; } }; 'mergeCommitSha': { name: 'mergeCommitSha'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'mergeError': { name: 'mergeError'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'mergeOngoing': { name: 'mergeOngoing'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'mergeRequestDiffs': { name: 'mergeRequestDiffs'; type: { kind: 'OBJECT'; name: 'MergeRequestDiffConnection'; ofType: null; } }; 'mergeStatus': { name: 'mergeStatus'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'mergeStatusEnum': { name: 'mergeStatusEnum'; type: { kind: 'ENUM'; name: 'MergeStatus'; ofType: null; } }; 'mergeTrainsCount': { name: 'mergeTrainsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'mergeUser': { name: 'mergeUser'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'mergeWhenPipelineSucceeds': { name: 'mergeWhenPipelineSucceeds'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'mergeabilityChecks': { name: 'mergeabilityChecks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequestMergeabilityCheck'; ofType: null; }; }; }; } }; 'mergeable': { name: 'mergeable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'mergeableDiscussionsState': { name: 'mergeableDiscussionsState'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'mergedAt': { name: 'mergedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'milestone': { name: 'milestone'; type: { kind: 'OBJECT'; name: 'Milestone'; ofType: null; } }; 'notes': { name: 'notes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NoteConnection'; ofType: null; }; } }; 'participants': { name: 'participants'; type: { kind: 'OBJECT'; name: 'MergeRequestParticipantConnection'; ofType: null; } }; 'pipelines': { name: 'pipelines'; type: { kind: 'OBJECT'; name: 'PipelineConnection'; ofType: null; } }; 'preparedAt': { name: 'preparedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; } }; 'projectId': { name: 'projectId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'rebaseCommitSha': { name: 'rebaseCommitSha'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'rebaseInProgress': { name: 'rebaseInProgress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'reference': { name: 'reference'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'reviewers': { name: 'reviewers'; type: { kind: 'OBJECT'; name: 'MergeRequestReviewerConnection'; ofType: null; } }; 'securityAutoFix': { name: 'securityAutoFix'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'securityReportsUpToDateOnTargetBranch': { name: 'securityReportsUpToDateOnTargetBranch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'shouldBeRebased': { name: 'shouldBeRebased'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'shouldRemoveSourceBranch': { name: 'shouldRemoveSourceBranch'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'sourceBranch': { name: 'sourceBranch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sourceBranchExists': { name: 'sourceBranchExists'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'sourceBranchProtected': { name: 'sourceBranchProtected'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'sourceProject': { name: 'sourceProject'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'sourceProjectId': { name: 'sourceProjectId'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'squash': { name: 'squash'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'squashOnMerge': { name: 'squashOnMerge'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MergeRequestState'; ofType: null; }; } }; 'subscribed': { name: 'subscribed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'suggestedReviewers': { name: 'suggestedReviewers'; type: { kind: 'OBJECT'; name: 'SuggestedReviewersType'; ofType: null; } }; 'supportsLockOnMerge': { name: 'supportsLockOnMerge'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'targetBranch': { name: 'targetBranch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'targetBranchExists': { name: 'targetBranchExists'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'targetProject': { name: 'targetProject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; } }; 'targetProjectId': { name: 'targetProjectId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'taskCompletionStatus': { name: 'taskCompletionStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaskCompletionStatus'; ofType: null; }; } }; 'timeEstimate': { name: 'timeEstimate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'timelogs': { name: 'timelogs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TimelogConnection'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'titleHtml': { name: 'titleHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'totalTimeSpent': { name: 'totalTimeSpent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'upvotes': { name: 'upvotes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'userDiscussionsCount': { name: 'userDiscussionsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'userNotesCount': { name: 'userNotesCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequestPermissions'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MergeRequestAcceptInput': { kind: 'INPUT_OBJECT'; name: 'MergeRequestAcceptInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'strategy'; type: { kind: 'ENUM'; name: 'MergeStrategyEnum'; ofType: null; }; defaultValue: null }, { name: 'commitMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'sha'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'squashCommitMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'shouldRemoveSourceBranch'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'squash'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'MergeRequestAcceptPayload': { kind: 'OBJECT'; name: 'MergeRequestAcceptPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; }; };
    'MergeRequestApprovalState': { kind: 'OBJECT'; name: 'MergeRequestApprovalState'; fields: { 'approvalRulesOverwritten': { name: 'approvalRulesOverwritten'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'invalidApproversRules': { name: 'invalidApproversRules'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ApprovalRule'; ofType: null; }; }; } }; 'rules': { name: 'rules'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ApprovalRule'; ofType: null; }; }; } }; 'suggestedApprovers': { name: 'suggestedApprovers'; type: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; } }; }; };
    'MergeRequestAssignee': { kind: 'OBJECT'; name: 'MergeRequestAssignee'; fields: { 'assignedMergeRequests': { name: 'assignedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'authoredMergeRequests': { name: 'authoredMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bio': { name: 'bio'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bot': { name: 'bot'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'callouts': { name: 'callouts'; type: { kind: 'OBJECT'; name: 'UserCalloutConnection'; ofType: null; } }; 'commitEmail': { name: 'commitEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'discord': { name: 'discord'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'emails': { name: 'emails'; type: { kind: 'OBJECT'; name: 'EmailConnection'; ofType: null; } }; 'gitpodEnabled': { name: 'gitpodEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'groupCount': { name: 'groupCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'groupMemberships': { name: 'groupMemberships'; type: { kind: 'OBJECT'; name: 'GroupMemberConnection'; ofType: null; } }; 'groups': { name: 'groups'; type: { kind: 'OBJECT'; name: 'GroupConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'ide': { name: 'ide'; type: { kind: 'OBJECT'; name: 'Ide'; ofType: null; } }; 'jobTitle': { name: 'jobTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastActivityOn': { name: 'lastActivityOn'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'linkedin': { name: 'linkedin'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'mergeRequestInteraction': { name: 'mergeRequestInteraction'; type: { kind: 'OBJECT'; name: 'UserMergeRequestInteraction'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; 'namespaceCommitEmails': { name: 'namespaceCommitEmails'; type: { kind: 'OBJECT'; name: 'NamespaceCommitEmailConnection'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organizations': { name: 'organizations'; type: { kind: 'OBJECT'; name: 'OrganizationConnection'; ofType: null; } }; 'preferencesGitpodPath': { name: 'preferencesGitpodPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'profileEnableGitpodPath': { name: 'profileEnableGitpodPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'projectMemberships': { name: 'projectMemberships'; type: { kind: 'OBJECT'; name: 'ProjectMemberConnection'; ofType: null; } }; 'pronouns': { name: 'pronouns'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'publicEmail': { name: 'publicEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'reviewRequestedMergeRequests': { name: 'reviewRequestedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'savedReplies': { name: 'savedReplies'; type: { kind: 'OBJECT'; name: 'SavedReplyConnection'; ofType: null; } }; 'savedReply': { name: 'savedReply'; type: { kind: 'OBJECT'; name: 'SavedReply'; ofType: null; } }; 'snippets': { name: 'snippets'; type: { kind: 'OBJECT'; name: 'SnippetConnection'; ofType: null; } }; 'starredProjects': { name: 'starredProjects'; type: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'UserState'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'OBJECT'; name: 'UserStatus'; ofType: null; } }; 'timelogs': { name: 'timelogs'; type: { kind: 'OBJECT'; name: 'TimelogConnection'; ofType: null; } }; 'todos': { name: 'todos'; type: { kind: 'OBJECT'; name: 'TodoConnection'; ofType: null; } }; 'twitter': { name: 'twitter'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userAchievements': { name: 'userAchievements'; type: { kind: 'OBJECT'; name: 'UserAchievementConnection'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserPermissions'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'workspaces': { name: 'workspaces'; type: { kind: 'OBJECT'; name: 'WorkspaceConnection'; ofType: null; } }; }; };
    'MergeRequestAssigneeConnection': { kind: 'OBJECT'; name: 'MergeRequestAssigneeConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequestAssigneeEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequestAssignee'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MergeRequestAssigneeEdge': { kind: 'OBJECT'; name: 'MergeRequestAssigneeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'MergeRequestAssignee'; ofType: null; } }; }; };
    'MergeRequestAuthor': { kind: 'OBJECT'; name: 'MergeRequestAuthor'; fields: { 'assignedMergeRequests': { name: 'assignedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'authoredMergeRequests': { name: 'authoredMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bio': { name: 'bio'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bot': { name: 'bot'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'callouts': { name: 'callouts'; type: { kind: 'OBJECT'; name: 'UserCalloutConnection'; ofType: null; } }; 'commitEmail': { name: 'commitEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'discord': { name: 'discord'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'emails': { name: 'emails'; type: { kind: 'OBJECT'; name: 'EmailConnection'; ofType: null; } }; 'gitpodEnabled': { name: 'gitpodEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'groupCount': { name: 'groupCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'groupMemberships': { name: 'groupMemberships'; type: { kind: 'OBJECT'; name: 'GroupMemberConnection'; ofType: null; } }; 'groups': { name: 'groups'; type: { kind: 'OBJECT'; name: 'GroupConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'ide': { name: 'ide'; type: { kind: 'OBJECT'; name: 'Ide'; ofType: null; } }; 'jobTitle': { name: 'jobTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastActivityOn': { name: 'lastActivityOn'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'linkedin': { name: 'linkedin'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'mergeRequestInteraction': { name: 'mergeRequestInteraction'; type: { kind: 'OBJECT'; name: 'UserMergeRequestInteraction'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; 'namespaceCommitEmails': { name: 'namespaceCommitEmails'; type: { kind: 'OBJECT'; name: 'NamespaceCommitEmailConnection'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organizations': { name: 'organizations'; type: { kind: 'OBJECT'; name: 'OrganizationConnection'; ofType: null; } }; 'preferencesGitpodPath': { name: 'preferencesGitpodPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'profileEnableGitpodPath': { name: 'profileEnableGitpodPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'projectMemberships': { name: 'projectMemberships'; type: { kind: 'OBJECT'; name: 'ProjectMemberConnection'; ofType: null; } }; 'pronouns': { name: 'pronouns'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'publicEmail': { name: 'publicEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'reviewRequestedMergeRequests': { name: 'reviewRequestedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'savedReplies': { name: 'savedReplies'; type: { kind: 'OBJECT'; name: 'SavedReplyConnection'; ofType: null; } }; 'savedReply': { name: 'savedReply'; type: { kind: 'OBJECT'; name: 'SavedReply'; ofType: null; } }; 'snippets': { name: 'snippets'; type: { kind: 'OBJECT'; name: 'SnippetConnection'; ofType: null; } }; 'starredProjects': { name: 'starredProjects'; type: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'UserState'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'OBJECT'; name: 'UserStatus'; ofType: null; } }; 'timelogs': { name: 'timelogs'; type: { kind: 'OBJECT'; name: 'TimelogConnection'; ofType: null; } }; 'todos': { name: 'todos'; type: { kind: 'OBJECT'; name: 'TodoConnection'; ofType: null; } }; 'twitter': { name: 'twitter'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userAchievements': { name: 'userAchievements'; type: { kind: 'OBJECT'; name: 'UserAchievementConnection'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserPermissions'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'workspaces': { name: 'workspaces'; type: { kind: 'OBJECT'; name: 'WorkspaceConnection'; ofType: null; } }; }; };
    'MergeRequestConnection': { kind: 'OBJECT'; name: 'MergeRequestConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequestEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalTimeToMerge': { name: 'totalTimeToMerge'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'MergeRequestCreateInput': { kind: 'INPUT_OBJECT'; name: 'MergeRequestCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'sourceBranch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'targetBranch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'labels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'MergeRequestCreatePayload': { kind: 'OBJECT'; name: 'MergeRequestCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; }; };
    'MergeRequestDiff': { kind: 'OBJECT'; name: 'MergeRequestDiff'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'diffLlmSummary': { name: 'diffLlmSummary'; type: { kind: 'OBJECT'; name: 'MergeRequestDiffLlmSummary'; ofType: null; } }; 'reviewLlmSummaries': { name: 'reviewLlmSummaries'; type: { kind: 'OBJECT'; name: 'MergeRequestReviewLlmSummaryConnection'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'MergeRequestDiffConnection': { kind: 'OBJECT'; name: 'MergeRequestDiffConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequestDiffEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequestDiff'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MergeRequestDiffEdge': { kind: 'OBJECT'; name: 'MergeRequestDiffEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'MergeRequestDiff'; ofType: null; } }; }; };
    'MergeRequestDiffLlmSummary': { kind: 'OBJECT'; name: 'MergeRequestDiffLlmSummary'; fields: { 'content': { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'mergeRequestDiffId': { name: 'mergeRequestDiffId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'provider': { name: 'provider'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; }; };
    'MergeRequestDiffLlmSummaryConnection': { kind: 'OBJECT'; name: 'MergeRequestDiffLlmSummaryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequestDiffLlmSummaryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequestDiffLlmSummary'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MergeRequestDiffLlmSummaryEdge': { kind: 'OBJECT'; name: 'MergeRequestDiffLlmSummaryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'MergeRequestDiffLlmSummary'; ofType: null; } }; }; };
    'MergeRequestDiffRegistry': { kind: 'OBJECT'; name: 'MergeRequestDiffRegistry'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSyncFailure': { name: 'lastSyncFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSyncedAt': { name: 'lastSyncedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'mergeRequestDiffId': { name: 'mergeRequestDiffId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'retryAt': { name: 'retryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryCount': { name: 'retryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'RegistryState'; ofType: null; } }; 'verificationChecksum': { name: 'verificationChecksum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationFailure': { name: 'verificationFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationRetryAt': { name: 'verificationRetryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationRetryCount': { name: 'verificationRetryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'verificationStartedAt': { name: 'verificationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationState': { name: 'verificationState'; type: { kind: 'ENUM'; name: 'VerificationStateEnum'; ofType: null; } }; 'verifiedAt': { name: 'verifiedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'MergeRequestDiffRegistryConnection': { kind: 'OBJECT'; name: 'MergeRequestDiffRegistryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequestDiffRegistryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequestDiffRegistry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MergeRequestDiffRegistryEdge': { kind: 'OBJECT'; name: 'MergeRequestDiffRegistryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'MergeRequestDiffRegistry'; ofType: null; } }; }; };
    'MergeRequestEdge': { kind: 'OBJECT'; name: 'MergeRequestEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; }; };
    'MergeRequestID': unknown;
    'MergeRequestMergeabilityCheck': { kind: 'OBJECT'; name: 'MergeRequestMergeabilityCheck'; fields: { 'identifier': { name: 'identifier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MergeabilityCheckIdentifier'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MergeabilityCheckStatus'; ofType: null; }; } }; }; };
    'MergeRequestNewState': { kind: 'ENUM'; name: 'MergeRequestNewState'; type: 'OPEN' | 'CLOSED'; };
    'MergeRequestParticipant': { kind: 'OBJECT'; name: 'MergeRequestParticipant'; fields: { 'assignedMergeRequests': { name: 'assignedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'authoredMergeRequests': { name: 'authoredMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bio': { name: 'bio'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bot': { name: 'bot'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'callouts': { name: 'callouts'; type: { kind: 'OBJECT'; name: 'UserCalloutConnection'; ofType: null; } }; 'commitEmail': { name: 'commitEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'discord': { name: 'discord'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'emails': { name: 'emails'; type: { kind: 'OBJECT'; name: 'EmailConnection'; ofType: null; } }; 'gitpodEnabled': { name: 'gitpodEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'groupCount': { name: 'groupCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'groupMemberships': { name: 'groupMemberships'; type: { kind: 'OBJECT'; name: 'GroupMemberConnection'; ofType: null; } }; 'groups': { name: 'groups'; type: { kind: 'OBJECT'; name: 'GroupConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'ide': { name: 'ide'; type: { kind: 'OBJECT'; name: 'Ide'; ofType: null; } }; 'jobTitle': { name: 'jobTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastActivityOn': { name: 'lastActivityOn'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'linkedin': { name: 'linkedin'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'mergeRequestInteraction': { name: 'mergeRequestInteraction'; type: { kind: 'OBJECT'; name: 'UserMergeRequestInteraction'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; 'namespaceCommitEmails': { name: 'namespaceCommitEmails'; type: { kind: 'OBJECT'; name: 'NamespaceCommitEmailConnection'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organizations': { name: 'organizations'; type: { kind: 'OBJECT'; name: 'OrganizationConnection'; ofType: null; } }; 'preferencesGitpodPath': { name: 'preferencesGitpodPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'profileEnableGitpodPath': { name: 'profileEnableGitpodPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'projectMemberships': { name: 'projectMemberships'; type: { kind: 'OBJECT'; name: 'ProjectMemberConnection'; ofType: null; } }; 'pronouns': { name: 'pronouns'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'publicEmail': { name: 'publicEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'reviewRequestedMergeRequests': { name: 'reviewRequestedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'savedReplies': { name: 'savedReplies'; type: { kind: 'OBJECT'; name: 'SavedReplyConnection'; ofType: null; } }; 'savedReply': { name: 'savedReply'; type: { kind: 'OBJECT'; name: 'SavedReply'; ofType: null; } }; 'snippets': { name: 'snippets'; type: { kind: 'OBJECT'; name: 'SnippetConnection'; ofType: null; } }; 'starredProjects': { name: 'starredProjects'; type: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'UserState'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'OBJECT'; name: 'UserStatus'; ofType: null; } }; 'timelogs': { name: 'timelogs'; type: { kind: 'OBJECT'; name: 'TimelogConnection'; ofType: null; } }; 'todos': { name: 'todos'; type: { kind: 'OBJECT'; name: 'TodoConnection'; ofType: null; } }; 'twitter': { name: 'twitter'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userAchievements': { name: 'userAchievements'; type: { kind: 'OBJECT'; name: 'UserAchievementConnection'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserPermissions'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'workspaces': { name: 'workspaces'; type: { kind: 'OBJECT'; name: 'WorkspaceConnection'; ofType: null; } }; }; };
    'MergeRequestParticipantConnection': { kind: 'OBJECT'; name: 'MergeRequestParticipantConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequestParticipantEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequestParticipant'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MergeRequestParticipantEdge': { kind: 'OBJECT'; name: 'MergeRequestParticipantEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'MergeRequestParticipant'; ofType: null; } }; }; };
    'MergeRequestPermissions': { kind: 'OBJECT'; name: 'MergeRequestPermissions'; fields: { 'adminMergeRequest': { name: 'adminMergeRequest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'canApprove': { name: 'canApprove'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'canMerge': { name: 'canMerge'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'cherryPickOnCurrentMergeRequest': { name: 'cherryPickOnCurrentMergeRequest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createNote': { name: 'createNote'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'pushToSourceBranch': { name: 'pushToSourceBranch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readMergeRequest': { name: 'readMergeRequest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'removeSourceBranch': { name: 'removeSourceBranch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'revertOnCurrentMergeRequest': { name: 'revertOnCurrentMergeRequest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updateMergeRequest': { name: 'updateMergeRequest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'MergeRequestReviewLlmSummary': { kind: 'OBJECT'; name: 'MergeRequestReviewLlmSummary'; fields: { 'content': { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'contentHtml': { name: 'contentHtml'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'mergeRequestDiffId': { name: 'mergeRequestDiffId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'provider': { name: 'provider'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'reviewer': { name: 'reviewer'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; }; };
    'MergeRequestReviewLlmSummaryConnection': { kind: 'OBJECT'; name: 'MergeRequestReviewLlmSummaryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequestReviewLlmSummaryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequestReviewLlmSummary'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MergeRequestReviewLlmSummaryEdge': { kind: 'OBJECT'; name: 'MergeRequestReviewLlmSummaryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'MergeRequestReviewLlmSummary'; ofType: null; } }; }; };
    'MergeRequestReviewState': { kind: 'ENUM'; name: 'MergeRequestReviewState'; type: 'UNREVIEWED' | 'REVIEWED' | 'REQUESTED_CHANGES' | 'APPROVED' | 'UNAPPROVED'; };
    'MergeRequestReviewer': { kind: 'OBJECT'; name: 'MergeRequestReviewer'; fields: { 'assignedMergeRequests': { name: 'assignedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'authoredMergeRequests': { name: 'authoredMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bio': { name: 'bio'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bot': { name: 'bot'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'callouts': { name: 'callouts'; type: { kind: 'OBJECT'; name: 'UserCalloutConnection'; ofType: null; } }; 'commitEmail': { name: 'commitEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'discord': { name: 'discord'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'emails': { name: 'emails'; type: { kind: 'OBJECT'; name: 'EmailConnection'; ofType: null; } }; 'gitpodEnabled': { name: 'gitpodEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'groupCount': { name: 'groupCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'groupMemberships': { name: 'groupMemberships'; type: { kind: 'OBJECT'; name: 'GroupMemberConnection'; ofType: null; } }; 'groups': { name: 'groups'; type: { kind: 'OBJECT'; name: 'GroupConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'ide': { name: 'ide'; type: { kind: 'OBJECT'; name: 'Ide'; ofType: null; } }; 'jobTitle': { name: 'jobTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastActivityOn': { name: 'lastActivityOn'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'linkedin': { name: 'linkedin'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'mergeRequestInteraction': { name: 'mergeRequestInteraction'; type: { kind: 'OBJECT'; name: 'UserMergeRequestInteraction'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; 'namespaceCommitEmails': { name: 'namespaceCommitEmails'; type: { kind: 'OBJECT'; name: 'NamespaceCommitEmailConnection'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organizations': { name: 'organizations'; type: { kind: 'OBJECT'; name: 'OrganizationConnection'; ofType: null; } }; 'preferencesGitpodPath': { name: 'preferencesGitpodPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'profileEnableGitpodPath': { name: 'profileEnableGitpodPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'projectMemberships': { name: 'projectMemberships'; type: { kind: 'OBJECT'; name: 'ProjectMemberConnection'; ofType: null; } }; 'pronouns': { name: 'pronouns'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'publicEmail': { name: 'publicEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'reviewRequestedMergeRequests': { name: 'reviewRequestedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'savedReplies': { name: 'savedReplies'; type: { kind: 'OBJECT'; name: 'SavedReplyConnection'; ofType: null; } }; 'savedReply': { name: 'savedReply'; type: { kind: 'OBJECT'; name: 'SavedReply'; ofType: null; } }; 'snippets': { name: 'snippets'; type: { kind: 'OBJECT'; name: 'SnippetConnection'; ofType: null; } }; 'starredProjects': { name: 'starredProjects'; type: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'UserState'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'OBJECT'; name: 'UserStatus'; ofType: null; } }; 'timelogs': { name: 'timelogs'; type: { kind: 'OBJECT'; name: 'TimelogConnection'; ofType: null; } }; 'todos': { name: 'todos'; type: { kind: 'OBJECT'; name: 'TodoConnection'; ofType: null; } }; 'twitter': { name: 'twitter'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userAchievements': { name: 'userAchievements'; type: { kind: 'OBJECT'; name: 'UserAchievementConnection'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserPermissions'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'workspaces': { name: 'workspaces'; type: { kind: 'OBJECT'; name: 'WorkspaceConnection'; ofType: null; } }; }; };
    'MergeRequestReviewerConnection': { kind: 'OBJECT'; name: 'MergeRequestReviewerConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequestReviewerEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MergeRequestReviewer'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MergeRequestReviewerEdge': { kind: 'OBJECT'; name: 'MergeRequestReviewerEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'MergeRequestReviewer'; ofType: null; } }; }; };
    'MergeRequestReviewerRereviewInput': { kind: 'INPUT_OBJECT'; name: 'MergeRequestReviewerRereviewInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'userId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UserID'; ofType: null; }; }; defaultValue: null }]; };
    'MergeRequestReviewerRereviewPayload': { kind: 'OBJECT'; name: 'MergeRequestReviewerRereviewPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; }; };
    'MergeRequestSetAssigneesInput': { kind: 'INPUT_OBJECT'; name: 'MergeRequestSetAssigneesInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'assigneeUsernames'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'operationMode'; type: { kind: 'ENUM'; name: 'MutationOperationMode'; ofType: null; }; defaultValue: "REPLACE" }]; };
    'MergeRequestSetAssigneesPayload': { kind: 'OBJECT'; name: 'MergeRequestSetAssigneesPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; }; };
    'MergeRequestSetDraftInput': { kind: 'INPUT_OBJECT'; name: 'MergeRequestSetDraftInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'draft'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'MergeRequestSetDraftPayload': { kind: 'OBJECT'; name: 'MergeRequestSetDraftPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; }; };
    'MergeRequestSetLabelsInput': { kind: 'INPUT_OBJECT'; name: 'MergeRequestSetLabelsInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'labelIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'LabelID'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'operationMode'; type: { kind: 'ENUM'; name: 'MutationOperationMode'; ofType: null; }; defaultValue: null }]; };
    'MergeRequestSetLabelsPayload': { kind: 'OBJECT'; name: 'MergeRequestSetLabelsPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; }; };
    'MergeRequestSetLockedInput': { kind: 'INPUT_OBJECT'; name: 'MergeRequestSetLockedInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'locked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'MergeRequestSetLockedPayload': { kind: 'OBJECT'; name: 'MergeRequestSetLockedPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; }; };
    'MergeRequestSetMilestoneInput': { kind: 'INPUT_OBJECT'; name: 'MergeRequestSetMilestoneInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'milestoneId'; type: { kind: 'SCALAR'; name: 'MilestoneID'; ofType: null; }; defaultValue: null }]; };
    'MergeRequestSetMilestonePayload': { kind: 'OBJECT'; name: 'MergeRequestSetMilestonePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; }; };
    'MergeRequestSetReviewersInput': { kind: 'INPUT_OBJECT'; name: 'MergeRequestSetReviewersInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'reviewerUsernames'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'operationMode'; type: { kind: 'ENUM'; name: 'MutationOperationMode'; ofType: null; }; defaultValue: "REPLACE" }]; };
    'MergeRequestSetReviewersPayload': { kind: 'OBJECT'; name: 'MergeRequestSetReviewersPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; }; };
    'MergeRequestSetSubscriptionInput': { kind: 'INPUT_OBJECT'; name: 'MergeRequestSetSubscriptionInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'subscribedState'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'MergeRequestSetSubscriptionPayload': { kind: 'OBJECT'; name: 'MergeRequestSetSubscriptionPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; }; };
    'MergeRequestSort': { kind: 'ENUM'; name: 'MergeRequestSort'; type: 'MERGED_AT_ASC' | 'MERGED_AT_DESC' | 'CLOSED_AT_ASC' | 'CLOSED_AT_DESC' | 'TITLE_ASC' | 'TITLE_DESC' | 'PRIORITY_ASC' | 'PRIORITY_DESC' | 'LABEL_PRIORITY_ASC' | 'LABEL_PRIORITY_DESC' | 'MILESTONE_DUE_ASC' | 'MILESTONE_DUE_DESC' | 'updated_desc' | 'updated_asc' | 'created_desc' | 'created_asc' | 'UPDATED_DESC' | 'UPDATED_ASC' | 'CREATED_DESC' | 'CREATED_ASC'; };
    'MergeRequestState': { kind: 'ENUM'; name: 'MergeRequestState'; type: 'merged' | 'opened' | 'closed' | 'locked' | 'all'; };
    'MergeRequestUpdateApprovalRuleInput': { kind: 'INPUT_OBJECT'; name: 'MergeRequestUpdateApprovalRuleInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'approvalsRequired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'approvalRuleId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'groupIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: "[]" }, { name: 'userIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: "[]" }, { name: 'removeHiddenGroups'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'MergeRequestUpdateApprovalRulePayload': { kind: 'OBJECT'; name: 'MergeRequestUpdateApprovalRulePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; }; };
    'MergeRequestUpdateInput': { kind: 'INPUT_OBJECT'; name: 'MergeRequestUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'targetBranch'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'state'; type: { kind: 'ENUM'; name: 'MergeRequestNewState'; ofType: null; }; defaultValue: null }, { name: 'timeEstimate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'MergeRequestUpdatePayload': { kind: 'OBJECT'; name: 'MergeRequestUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; }; };
    'MergeRequestsResolverNegatedParams': { kind: 'INPUT_OBJECT'; name: 'MergeRequestsResolverNegatedParams'; inputFields: [{ name: 'labels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'milestoneTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'MergeStatus': { kind: 'ENUM'; name: 'MergeStatus'; type: 'UNCHECKED' | 'CHECKING' | 'CAN_BE_MERGED' | 'CANNOT_BE_MERGED' | 'CANNOT_BE_MERGED_RECHECK'; };
    'MergeStrategyEnum': { kind: 'ENUM'; name: 'MergeStrategyEnum'; type: 'MERGE_TRAIN' | 'ADD_TO_MERGE_TRAIN_WHEN_PIPELINE_SUCCEEDS' | 'MERGE_WHEN_CHECKS_PASS' | 'MERGE_WHEN_PIPELINE_SUCCEEDS'; };
    'MergeabilityCheckIdentifier': { kind: 'ENUM'; name: 'MergeabilityCheckIdentifier'; type: 'REQUESTED_CHANGES' | 'NOT_APPROVED' | 'MERGE_REQUEST_BLOCKED' | 'JIRA_ASSOCIATION_MISSING' | 'STATUS_CHECKS_MUST_PASS' | 'NOT_OPEN' | 'DRAFT_STATUS' | 'COMMITS_STATUS' | 'DISCUSSIONS_NOT_RESOLVED' | 'CI_MUST_PASS' | 'CONFLICT' | 'NEED_REBASE'; };
    'MergeabilityCheckStatus': { kind: 'ENUM'; name: 'MergeabilityCheckStatus'; type: 'SUCCESS' | 'FAILED' | 'INACTIVE'; };
    'Metadata': { kind: 'OBJECT'; name: 'Metadata'; fields: { 'enterprise': { name: 'enterprise'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'kas': { name: 'kas'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Kas'; ofType: null; }; } }; 'revision': { name: 'revision'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MetricImage': { kind: 'OBJECT'; name: 'MetricImage'; fields: { 'fileName': { name: 'fileName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'filePath': { name: 'filePath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'iid': { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MetricsDashboardAnnotation': { kind: 'OBJECT'; name: 'MetricsDashboardAnnotation'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'endingAt': { name: 'endingAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'panelId': { name: 'panelId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'startingAt': { name: 'startingAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'Milestone': { kind: 'OBJECT'; name: 'Milestone'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dueDate': { name: 'dueDate'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'expired': { name: 'expired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'groupMilestone': { name: 'groupMilestone'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'iid': { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'projectMilestone': { name: 'projectMilestone'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'releases': { name: 'releases'; type: { kind: 'OBJECT'; name: 'ReleaseConnection'; ofType: null; } }; 'report': { name: 'report'; type: { kind: 'OBJECT'; name: 'TimeboxReport'; ofType: null; } }; 'startDate': { name: 'startDate'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MilestoneStateEnum'; ofType: null; }; } }; 'stats': { name: 'stats'; type: { kind: 'OBJECT'; name: 'MilestoneStats'; ofType: null; } }; 'subgroupMilestone': { name: 'subgroupMilestone'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MilestoneConnection': { kind: 'OBJECT'; name: 'MilestoneConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MilestoneEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Milestone'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MilestoneEdge': { kind: 'OBJECT'; name: 'MilestoneEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Milestone'; ofType: null; } }; }; };
    'MilestoneID': unknown;
    'MilestoneSort': { kind: 'ENUM'; name: 'MilestoneSort'; type: 'DUE_DATE_ASC' | 'DUE_DATE_DESC' | 'EXPIRED_LAST_DUE_DATE_ASC' | 'EXPIRED_LAST_DUE_DATE_DESC' | 'updated_desc' | 'updated_asc' | 'created_desc' | 'created_asc' | 'UPDATED_DESC' | 'UPDATED_ASC' | 'CREATED_DESC' | 'CREATED_ASC'; };
    'MilestoneStateEnum': { kind: 'ENUM'; name: 'MilestoneStateEnum'; type: 'active' | 'closed'; };
    'MilestoneStats': { kind: 'OBJECT'; name: 'MilestoneStats'; fields: { 'closedIssuesCount': { name: 'closedIssuesCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'totalIssuesCount': { name: 'totalIssuesCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'MilestoneWildcardId': { kind: 'ENUM'; name: 'MilestoneWildcardId'; type: 'NONE' | 'ANY' | 'STARTED' | 'UPCOMING'; };
    'MlCandidate': { kind: 'OBJECT'; name: 'MlCandidate'; fields: { '_links': { name: '_links'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MLCandidateLinks'; ofType: null; }; } }; 'ciJob': { name: 'ciJob'; type: { kind: 'OBJECT'; name: 'CiJob'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'eid': { name: 'eid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'MlCandidateID'; ofType: null; }; } }; 'iid': { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MlCandidateConnection': { kind: 'OBJECT'; name: 'MlCandidateConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MlCandidateEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MlCandidate'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MlCandidateEdge': { kind: 'OBJECT'; name: 'MlCandidateEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'MlCandidate'; ofType: null; } }; }; };
    'MlCandidateID': unknown;
    'MlModel': { kind: 'OBJECT'; name: 'MlModel'; fields: { '_links': { name: '_links'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MLModelLinks'; ofType: null; }; } }; 'candidateCount': { name: 'candidateCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'candidates': { name: 'candidates'; type: { kind: 'OBJECT'; name: 'MlCandidateConnection'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'MlModelID'; ofType: null; }; } }; 'latestVersion': { name: 'latestVersion'; type: { kind: 'OBJECT'; name: 'MlModelVersion'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'versionCount': { name: 'versionCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'versions': { name: 'versions'; type: { kind: 'OBJECT'; name: 'MlModelVersionConnection'; ofType: null; } }; }; };
    'MlModelConnection': { kind: 'OBJECT'; name: 'MlModelConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MlModelEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MlModel'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MlModelCreateInput': { kind: 'INPUT_OBJECT'; name: 'MlModelCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'MlModelCreatePayload': { kind: 'OBJECT'; name: 'MlModelCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'model': { name: 'model'; type: { kind: 'OBJECT'; name: 'MlModel'; ofType: null; } }; }; };
    'MlModelDestroyInput': { kind: 'INPUT_OBJECT'; name: 'MlModelDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'MlModelID'; ofType: null; }; }; defaultValue: null }]; };
    'MlModelDestroyPayload': { kind: 'OBJECT'; name: 'MlModelDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'model': { name: 'model'; type: { kind: 'OBJECT'; name: 'MlModel'; ofType: null; } }; }; };
    'MlModelEdge': { kind: 'OBJECT'; name: 'MlModelEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'MlModel'; ofType: null; } }; }; };
    'MlModelID': unknown;
    'MlModelVersion': { kind: 'OBJECT'; name: 'MlModelVersion'; fields: { '_links': { name: '_links'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MLModelVersionLinks'; ofType: null; }; } }; 'candidate': { name: 'candidate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MlCandidate'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'MlModelVersionID'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MlModelVersionConnection': { kind: 'OBJECT'; name: 'MlModelVersionConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MlModelVersionEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'MlModelVersion'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'MlModelVersionEdge': { kind: 'OBJECT'; name: 'MlModelVersionEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'MlModelVersion'; ofType: null; } }; }; };
    'MlModelVersionID': unknown;
    'MlModelVersionsOrderBy': { kind: 'ENUM'; name: 'MlModelVersionsOrderBy'; type: 'VERSION' | 'CREATED_AT' | 'ID'; };
    'MlModelsOrderBy': { kind: 'ENUM'; name: 'MlModelsOrderBy'; type: 'NAME' | 'CREATED_AT' | 'UPDATED_AT' | 'ID'; };
    'MonthSelectionInput': { kind: 'INPUT_OBJECT'; name: 'MonthSelectionInput'; inputFields: [{ name: 'month'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'year'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'MonthlyUsage': { kind: 'OBJECT'; name: 'MonthlyUsage'; fields: { 'count': { name: 'count'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'month': { name: 'month'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'year': { name: 'year'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'MoveType': { kind: 'ENUM'; name: 'MoveType'; type: 'before' | 'after'; };
    'Mutation': { kind: 'OBJECT'; name: 'Mutation'; fields: { 'abuseReportLabelCreate': { name: 'abuseReportLabelCreate'; type: { kind: 'OBJECT'; name: 'AbuseReportLabelCreatePayload'; ofType: null; } }; 'achievementsAward': { name: 'achievementsAward'; type: { kind: 'OBJECT'; name: 'AchievementsAwardPayload'; ofType: null; } }; 'achievementsCreate': { name: 'achievementsCreate'; type: { kind: 'OBJECT'; name: 'AchievementsCreatePayload'; ofType: null; } }; 'achievementsDelete': { name: 'achievementsDelete'; type: { kind: 'OBJECT'; name: 'AchievementsDeletePayload'; ofType: null; } }; 'achievementsRevoke': { name: 'achievementsRevoke'; type: { kind: 'OBJECT'; name: 'AchievementsRevokePayload'; ofType: null; } }; 'achievementsUpdate': { name: 'achievementsUpdate'; type: { kind: 'OBJECT'; name: 'AchievementsUpdatePayload'; ofType: null; } }; 'addProjectToSecurityDashboard': { name: 'addProjectToSecurityDashboard'; type: { kind: 'OBJECT'; name: 'AddProjectToSecurityDashboardPayload'; ofType: null; } }; 'adminSidekiqQueuesDeleteJobs': { name: 'adminSidekiqQueuesDeleteJobs'; type: { kind: 'OBJECT'; name: 'AdminSidekiqQueuesDeleteJobsPayload'; ofType: null; } }; 'aiAction': { name: 'aiAction'; type: { kind: 'OBJECT'; name: 'AiActionPayload'; ofType: null; } }; 'aiAgentCreate': { name: 'aiAgentCreate'; type: { kind: 'OBJECT'; name: 'AiAgentCreatePayload'; ofType: null; } }; 'aiAgentUpdate': { name: 'aiAgentUpdate'; type: { kind: 'OBJECT'; name: 'AiAgentUpdatePayload'; ofType: null; } }; 'alertSetAssignees': { name: 'alertSetAssignees'; type: { kind: 'OBJECT'; name: 'AlertSetAssigneesPayload'; ofType: null; } }; 'alertTodoCreate': { name: 'alertTodoCreate'; type: { kind: 'OBJECT'; name: 'AlertTodoCreatePayload'; ofType: null; } }; 'approvalProjectRuleDelete': { name: 'approvalProjectRuleDelete'; type: { kind: 'OBJECT'; name: 'approvalProjectRuleDeletePayload'; ofType: null; } }; 'approvalProjectRuleUpdate': { name: 'approvalProjectRuleUpdate'; type: { kind: 'OBJECT'; name: 'approvalProjectRuleUpdatePayload'; ofType: null; } }; 'approveDeployment': { name: 'approveDeployment'; type: { kind: 'OBJECT'; name: 'ApproveDeploymentPayload'; ofType: null; } }; 'artifactDestroy': { name: 'artifactDestroy'; type: { kind: 'OBJECT'; name: 'ArtifactDestroyPayload'; ofType: null; } }; 'auditEventsAmazonS3ConfigurationCreate': { name: 'auditEventsAmazonS3ConfigurationCreate'; type: { kind: 'OBJECT'; name: 'AuditEventsAmazonS3ConfigurationCreatePayload'; ofType: null; } }; 'auditEventsAmazonS3ConfigurationDelete': { name: 'auditEventsAmazonS3ConfigurationDelete'; type: { kind: 'OBJECT'; name: 'AuditEventsAmazonS3ConfigurationDeletePayload'; ofType: null; } }; 'auditEventsAmazonS3ConfigurationUpdate': { name: 'auditEventsAmazonS3ConfigurationUpdate'; type: { kind: 'OBJECT'; name: 'AuditEventsAmazonS3ConfigurationUpdatePayload'; ofType: null; } }; 'auditEventsInstanceAmazonS3ConfigurationCreate': { name: 'auditEventsInstanceAmazonS3ConfigurationCreate'; type: { kind: 'OBJECT'; name: 'AuditEventsInstanceAmazonS3ConfigurationCreatePayload'; ofType: null; } }; 'auditEventsInstanceAmazonS3ConfigurationDelete': { name: 'auditEventsInstanceAmazonS3ConfigurationDelete'; type: { kind: 'OBJECT'; name: 'AuditEventsInstanceAmazonS3ConfigurationDeletePayload'; ofType: null; } }; 'auditEventsInstanceAmazonS3ConfigurationUpdate': { name: 'auditEventsInstanceAmazonS3ConfigurationUpdate'; type: { kind: 'OBJECT'; name: 'AuditEventsInstanceAmazonS3ConfigurationUpdatePayload'; ofType: null; } }; 'auditEventsStreamingDestinationEventsAdd': { name: 'auditEventsStreamingDestinationEventsAdd'; type: { kind: 'OBJECT'; name: 'AuditEventsStreamingDestinationEventsAddPayload'; ofType: null; } }; 'auditEventsStreamingDestinationEventsRemove': { name: 'auditEventsStreamingDestinationEventsRemove'; type: { kind: 'OBJECT'; name: 'AuditEventsStreamingDestinationEventsRemovePayload'; ofType: null; } }; 'auditEventsStreamingDestinationInstanceEventsAdd': { name: 'auditEventsStreamingDestinationInstanceEventsAdd'; type: { kind: 'OBJECT'; name: 'AuditEventsStreamingDestinationInstanceEventsAddPayload'; ofType: null; } }; 'auditEventsStreamingDestinationInstanceEventsRemove': { name: 'auditEventsStreamingDestinationInstanceEventsRemove'; type: { kind: 'OBJECT'; name: 'AuditEventsStreamingDestinationInstanceEventsRemovePayload'; ofType: null; } }; 'auditEventsStreamingHeadersCreate': { name: 'auditEventsStreamingHeadersCreate'; type: { kind: 'OBJECT'; name: 'AuditEventsStreamingHeadersCreatePayload'; ofType: null; } }; 'auditEventsStreamingHeadersDestroy': { name: 'auditEventsStreamingHeadersDestroy'; type: { kind: 'OBJECT'; name: 'AuditEventsStreamingHeadersDestroyPayload'; ofType: null; } }; 'auditEventsStreamingHeadersUpdate': { name: 'auditEventsStreamingHeadersUpdate'; type: { kind: 'OBJECT'; name: 'AuditEventsStreamingHeadersUpdatePayload'; ofType: null; } }; 'auditEventsStreamingHttpNamespaceFiltersAdd': { name: 'auditEventsStreamingHttpNamespaceFiltersAdd'; type: { kind: 'OBJECT'; name: 'AuditEventsStreamingHTTPNamespaceFiltersAddPayload'; ofType: null; } }; 'auditEventsStreamingHttpNamespaceFiltersDelete': { name: 'auditEventsStreamingHttpNamespaceFiltersDelete'; type: { kind: 'OBJECT'; name: 'AuditEventsStreamingHTTPNamespaceFiltersDeletePayload'; ofType: null; } }; 'auditEventsStreamingInstanceHeadersCreate': { name: 'auditEventsStreamingInstanceHeadersCreate'; type: { kind: 'OBJECT'; name: 'AuditEventsStreamingInstanceHeadersCreatePayload'; ofType: null; } }; 'auditEventsStreamingInstanceHeadersDestroy': { name: 'auditEventsStreamingInstanceHeadersDestroy'; type: { kind: 'OBJECT'; name: 'AuditEventsStreamingInstanceHeadersDestroyPayload'; ofType: null; } }; 'auditEventsStreamingInstanceHeadersUpdate': { name: 'auditEventsStreamingInstanceHeadersUpdate'; type: { kind: 'OBJECT'; name: 'AuditEventsStreamingInstanceHeadersUpdatePayload'; ofType: null; } }; 'awardEmojiAdd': { name: 'awardEmojiAdd'; type: { kind: 'OBJECT'; name: 'AwardEmojiAddPayload'; ofType: null; } }; 'awardEmojiRemove': { name: 'awardEmojiRemove'; type: { kind: 'OBJECT'; name: 'AwardEmojiRemovePayload'; ofType: null; } }; 'awardEmojiToggle': { name: 'awardEmojiToggle'; type: { kind: 'OBJECT'; name: 'AwardEmojiTogglePayload'; ofType: null; } }; 'boardEpicCreate': { name: 'boardEpicCreate'; type: { kind: 'OBJECT'; name: 'BoardEpicCreatePayload'; ofType: null; } }; 'boardListCreate': { name: 'boardListCreate'; type: { kind: 'OBJECT'; name: 'BoardListCreatePayload'; ofType: null; } }; 'boardListUpdateLimitMetrics': { name: 'boardListUpdateLimitMetrics'; type: { kind: 'OBJECT'; name: 'BoardListUpdateLimitMetricsPayload'; ofType: null; } }; 'branchRuleApprovalProjectRuleCreate': { name: 'branchRuleApprovalProjectRuleCreate'; type: { kind: 'OBJECT'; name: 'branchRuleApprovalProjectRuleCreatePayload'; ofType: null; } }; 'branchRuleCreate': { name: 'branchRuleCreate'; type: { kind: 'OBJECT'; name: 'BranchRuleCreatePayload'; ofType: null; } }; 'branchRuleDelete': { name: 'branchRuleDelete'; type: { kind: 'OBJECT'; name: 'BranchRuleDeletePayload'; ofType: null; } }; 'branchRuleExternalStatusCheckCreate': { name: 'branchRuleExternalStatusCheckCreate'; type: { kind: 'OBJECT'; name: 'BranchRuleExternalStatusCheckCreatePayload'; ofType: null; } }; 'branchRuleUpdate': { name: 'branchRuleUpdate'; type: { kind: 'OBJECT'; name: 'BranchRuleUpdatePayload'; ofType: null; } }; 'buildForecast': { name: 'buildForecast'; type: { kind: 'OBJECT'; name: 'BuildForecastPayload'; ofType: null; } }; 'bulkDestroyJobArtifacts': { name: 'bulkDestroyJobArtifacts'; type: { kind: 'OBJECT'; name: 'BulkDestroyJobArtifactsPayload'; ofType: null; } }; 'bulkEnableDevopsAdoptionNamespaces': { name: 'bulkEnableDevopsAdoptionNamespaces'; type: { kind: 'OBJECT'; name: 'BulkEnableDevopsAdoptionNamespacesPayload'; ofType: null; } }; 'bulkRunnerDelete': { name: 'bulkRunnerDelete'; type: { kind: 'OBJECT'; name: 'BulkRunnerDeletePayload'; ofType: null; } }; 'catalogResourcesCreate': { name: 'catalogResourcesCreate'; type: { kind: 'OBJECT'; name: 'CatalogResourcesCreatePayload'; ofType: null; } }; 'catalogResourcesDestroy': { name: 'catalogResourcesDestroy'; type: { kind: 'OBJECT'; name: 'CatalogResourcesDestroyPayload'; ofType: null; } }; 'ciJobTokenScopeAddGroupOrProject': { name: 'ciJobTokenScopeAddGroupOrProject'; type: { kind: 'OBJECT'; name: 'CiJobTokenScopeAddGroupOrProjectPayload'; ofType: null; } }; 'ciJobTokenScopeAddProject': { name: 'ciJobTokenScopeAddProject'; type: { kind: 'OBJECT'; name: 'CiJobTokenScopeAddProjectPayload'; ofType: null; } }; 'ciJobTokenScopeRemoveGroup': { name: 'ciJobTokenScopeRemoveGroup'; type: { kind: 'OBJECT'; name: 'CiJobTokenScopeRemoveGroupPayload'; ofType: null; } }; 'ciJobTokenScopeRemoveProject': { name: 'ciJobTokenScopeRemoveProject'; type: { kind: 'OBJECT'; name: 'CiJobTokenScopeRemoveProjectPayload'; ofType: null; } }; 'clusterAgentDelete': { name: 'clusterAgentDelete'; type: { kind: 'OBJECT'; name: 'ClusterAgentDeletePayload'; ofType: null; } }; 'clusterAgentTokenCreate': { name: 'clusterAgentTokenCreate'; type: { kind: 'OBJECT'; name: 'ClusterAgentTokenCreatePayload'; ofType: null; } }; 'clusterAgentTokenRevoke': { name: 'clusterAgentTokenRevoke'; type: { kind: 'OBJECT'; name: 'ClusterAgentTokenRevokePayload'; ofType: null; } }; 'commitCreate': { name: 'commitCreate'; type: { kind: 'OBJECT'; name: 'CommitCreatePayload'; ofType: null; } }; 'configureContainerScanning': { name: 'configureContainerScanning'; type: { kind: 'OBJECT'; name: 'ConfigureContainerScanningPayload'; ofType: null; } }; 'configureDependencyScanning': { name: 'configureDependencyScanning'; type: { kind: 'OBJECT'; name: 'ConfigureDependencyScanningPayload'; ofType: null; } }; 'configureSast': { name: 'configureSast'; type: { kind: 'OBJECT'; name: 'ConfigureSastPayload'; ofType: null; } }; 'configureSastIac': { name: 'configureSastIac'; type: { kind: 'OBJECT'; name: 'ConfigureSastIacPayload'; ofType: null; } }; 'configureSecretDetection': { name: 'configureSecretDetection'; type: { kind: 'OBJECT'; name: 'ConfigureSecretDetectionPayload'; ofType: null; } }; 'corpusCreate': { name: 'corpusCreate'; type: { kind: 'OBJECT'; name: 'CorpusCreatePayload'; ofType: null; } }; 'createAlertIssue': { name: 'createAlertIssue'; type: { kind: 'OBJECT'; name: 'CreateAlertIssuePayload'; ofType: null; } }; 'createAnnotation': { name: 'createAnnotation'; type: { kind: 'OBJECT'; name: 'CreateAnnotationPayload'; ofType: null; } }; 'createBoard': { name: 'createBoard'; type: { kind: 'OBJECT'; name: 'CreateBoardPayload'; ofType: null; } }; 'createBranch': { name: 'createBranch'; type: { kind: 'OBJECT'; name: 'CreateBranchPayload'; ofType: null; } }; 'createClusterAgent': { name: 'createClusterAgent'; type: { kind: 'OBJECT'; name: 'CreateClusterAgentPayload'; ofType: null; } }; 'createComplianceFramework': { name: 'createComplianceFramework'; type: { kind: 'OBJECT'; name: 'CreateComplianceFrameworkPayload'; ofType: null; } }; 'createContainerRegistryProtectionRule': { name: 'createContainerRegistryProtectionRule'; type: { kind: 'OBJECT'; name: 'CreateContainerRegistryProtectionRulePayload'; ofType: null; } }; 'createCustomEmoji': { name: 'createCustomEmoji'; type: { kind: 'OBJECT'; name: 'CreateCustomEmojiPayload'; ofType: null; } }; 'createDiffNote': { name: 'createDiffNote'; type: { kind: 'OBJECT'; name: 'CreateDiffNotePayload'; ofType: null; } }; 'createDiscussion': { name: 'createDiscussion'; type: { kind: 'OBJECT'; name: 'CreateDiscussionPayload'; ofType: null; } }; 'createEpic': { name: 'createEpic'; type: { kind: 'OBJECT'; name: 'CreateEpicPayload'; ofType: null; } }; 'createImageDiffNote': { name: 'createImageDiffNote'; type: { kind: 'OBJECT'; name: 'CreateImageDiffNotePayload'; ofType: null; } }; 'createIssue': { name: 'createIssue'; type: { kind: 'OBJECT'; name: 'CreateIssuePayload'; ofType: null; } }; 'createIteration': { name: 'createIteration'; type: { kind: 'OBJECT'; name: 'CreateIterationPayload'; ofType: null; } }; 'createNote': { name: 'createNote'; type: { kind: 'OBJECT'; name: 'CreateNotePayload'; ofType: null; } }; 'createPackagesProtectionRule': { name: 'createPackagesProtectionRule'; type: { kind: 'OBJECT'; name: 'CreatePackagesProtectionRulePayload'; ofType: null; } }; 'createRequirement': { name: 'createRequirement'; type: { kind: 'OBJECT'; name: 'CreateRequirementPayload'; ofType: null; } }; 'createSnippet': { name: 'createSnippet'; type: { kind: 'OBJECT'; name: 'CreateSnippetPayload'; ofType: null; } }; 'createTestCase': { name: 'createTestCase'; type: { kind: 'OBJECT'; name: 'CreateTestCasePayload'; ofType: null; } }; 'customerRelationsContactCreate': { name: 'customerRelationsContactCreate'; type: { kind: 'OBJECT'; name: 'CustomerRelationsContactCreatePayload'; ofType: null; } }; 'customerRelationsContactUpdate': { name: 'customerRelationsContactUpdate'; type: { kind: 'OBJECT'; name: 'CustomerRelationsContactUpdatePayload'; ofType: null; } }; 'customerRelationsOrganizationCreate': { name: 'customerRelationsOrganizationCreate'; type: { kind: 'OBJECT'; name: 'CustomerRelationsOrganizationCreatePayload'; ofType: null; } }; 'customerRelationsOrganizationUpdate': { name: 'customerRelationsOrganizationUpdate'; type: { kind: 'OBJECT'; name: 'CustomerRelationsOrganizationUpdatePayload'; ofType: null; } }; 'dastOnDemandScanCreate': { name: 'dastOnDemandScanCreate'; type: { kind: 'OBJECT'; name: 'DastOnDemandScanCreatePayload'; ofType: null; } }; 'dastProfileCreate': { name: 'dastProfileCreate'; type: { kind: 'OBJECT'; name: 'DastProfileCreatePayload'; ofType: null; } }; 'dastProfileDelete': { name: 'dastProfileDelete'; type: { kind: 'OBJECT'; name: 'DastProfileDeletePayload'; ofType: null; } }; 'dastProfileRun': { name: 'dastProfileRun'; type: { kind: 'OBJECT'; name: 'DastProfileRunPayload'; ofType: null; } }; 'dastProfileUpdate': { name: 'dastProfileUpdate'; type: { kind: 'OBJECT'; name: 'DastProfileUpdatePayload'; ofType: null; } }; 'dastScannerProfileCreate': { name: 'dastScannerProfileCreate'; type: { kind: 'OBJECT'; name: 'DastScannerProfileCreatePayload'; ofType: null; } }; 'dastScannerProfileDelete': { name: 'dastScannerProfileDelete'; type: { kind: 'OBJECT'; name: 'DastScannerProfileDeletePayload'; ofType: null; } }; 'dastScannerProfileUpdate': { name: 'dastScannerProfileUpdate'; type: { kind: 'OBJECT'; name: 'DastScannerProfileUpdatePayload'; ofType: null; } }; 'dastSiteProfileCreate': { name: 'dastSiteProfileCreate'; type: { kind: 'OBJECT'; name: 'DastSiteProfileCreatePayload'; ofType: null; } }; 'dastSiteProfileDelete': { name: 'dastSiteProfileDelete'; type: { kind: 'OBJECT'; name: 'DastSiteProfileDeletePayload'; ofType: null; } }; 'dastSiteProfileUpdate': { name: 'dastSiteProfileUpdate'; type: { kind: 'OBJECT'; name: 'DastSiteProfileUpdatePayload'; ofType: null; } }; 'dastSiteTokenCreate': { name: 'dastSiteTokenCreate'; type: { kind: 'OBJECT'; name: 'DastSiteTokenCreatePayload'; ofType: null; } }; 'dastSiteValidationCreate': { name: 'dastSiteValidationCreate'; type: { kind: 'OBJECT'; name: 'DastSiteValidationCreatePayload'; ofType: null; } }; 'dastSiteValidationRevoke': { name: 'dastSiteValidationRevoke'; type: { kind: 'OBJECT'; name: 'DastSiteValidationRevokePayload'; ofType: null; } }; 'deleteAnnotation': { name: 'deleteAnnotation'; type: { kind: 'OBJECT'; name: 'DeleteAnnotationPayload'; ofType: null; } }; 'deleteContainerRegistryProtectionRule': { name: 'deleteContainerRegistryProtectionRule'; type: { kind: 'OBJECT'; name: 'DeleteContainerRegistryProtectionRulePayload'; ofType: null; } }; 'deletePackagesProtectionRule': { name: 'deletePackagesProtectionRule'; type: { kind: 'OBJECT'; name: 'DeletePackagesProtectionRulePayload'; ofType: null; } }; 'designManagementDelete': { name: 'designManagementDelete'; type: { kind: 'OBJECT'; name: 'DesignManagementDeletePayload'; ofType: null; } }; 'designManagementMove': { name: 'designManagementMove'; type: { kind: 'OBJECT'; name: 'DesignManagementMovePayload'; ofType: null; } }; 'designManagementUpdate': { name: 'designManagementUpdate'; type: { kind: 'OBJECT'; name: 'DesignManagementUpdatePayload'; ofType: null; } }; 'designManagementUpload': { name: 'designManagementUpload'; type: { kind: 'OBJECT'; name: 'DesignManagementUploadPayload'; ofType: null; } }; 'destroyBoard': { name: 'destroyBoard'; type: { kind: 'OBJECT'; name: 'DestroyBoardPayload'; ofType: null; } }; 'destroyBoardList': { name: 'destroyBoardList'; type: { kind: 'OBJECT'; name: 'DestroyBoardListPayload'; ofType: null; } }; 'destroyComplianceFramework': { name: 'destroyComplianceFramework'; type: { kind: 'OBJECT'; name: 'DestroyComplianceFrameworkPayload'; ofType: null; } }; 'destroyContainerRepository': { name: 'destroyContainerRepository'; type: { kind: 'OBJECT'; name: 'DestroyContainerRepositoryPayload'; ofType: null; } }; 'destroyContainerRepositoryTags': { name: 'destroyContainerRepositoryTags'; type: { kind: 'OBJECT'; name: 'DestroyContainerRepositoryTagsPayload'; ofType: null; } }; 'destroyCustomEmoji': { name: 'destroyCustomEmoji'; type: { kind: 'OBJECT'; name: 'DestroyCustomEmojiPayload'; ofType: null; } }; 'destroyEpicBoard': { name: 'destroyEpicBoard'; type: { kind: 'OBJECT'; name: 'DestroyEpicBoardPayload'; ofType: null; } }; 'destroyNote': { name: 'destroyNote'; type: { kind: 'OBJECT'; name: 'DestroyNotePayload'; ofType: null; } }; 'destroyPackage': { name: 'destroyPackage'; type: { kind: 'OBJECT'; name: 'DestroyPackagePayload'; ofType: null; } }; 'destroyPackageFile': { name: 'destroyPackageFile'; type: { kind: 'OBJECT'; name: 'DestroyPackageFilePayload'; ofType: null; } }; 'destroyPackageFiles': { name: 'destroyPackageFiles'; type: { kind: 'OBJECT'; name: 'DestroyPackageFilesPayload'; ofType: null; } }; 'destroyPackages': { name: 'destroyPackages'; type: { kind: 'OBJECT'; name: 'DestroyPackagesPayload'; ofType: null; } }; 'destroySnippet': { name: 'destroySnippet'; type: { kind: 'OBJECT'; name: 'DestroySnippetPayload'; ofType: null; } }; 'disableDevopsAdoptionNamespace': { name: 'disableDevopsAdoptionNamespace'; type: { kind: 'OBJECT'; name: 'DisableDevopsAdoptionNamespacePayload'; ofType: null; } }; 'discussionToggleResolve': { name: 'discussionToggleResolve'; type: { kind: 'OBJECT'; name: 'DiscussionToggleResolvePayload'; ofType: null; } }; 'duoUserFeedback': { name: 'duoUserFeedback'; type: { kind: 'OBJECT'; name: 'DuoUserFeedbackPayload'; ofType: null; } }; 'echoCreate': { name: 'echoCreate'; type: { kind: 'OBJECT'; name: 'EchoCreatePayload'; ofType: null; } }; 'enableDevopsAdoptionNamespace': { name: 'enableDevopsAdoptionNamespace'; type: { kind: 'OBJECT'; name: 'EnableDevopsAdoptionNamespacePayload'; ofType: null; } }; 'environmentCreate': { name: 'environmentCreate'; type: { kind: 'OBJECT'; name: 'EnvironmentCreatePayload'; ofType: null; } }; 'environmentDelete': { name: 'environmentDelete'; type: { kind: 'OBJECT'; name: 'EnvironmentDeletePayload'; ofType: null; } }; 'environmentStop': { name: 'environmentStop'; type: { kind: 'OBJECT'; name: 'EnvironmentStopPayload'; ofType: null; } }; 'environmentUpdate': { name: 'environmentUpdate'; type: { kind: 'OBJECT'; name: 'EnvironmentUpdatePayload'; ofType: null; } }; 'environmentsCanaryIngressUpdate': { name: 'environmentsCanaryIngressUpdate'; type: { kind: 'OBJECT'; name: 'EnvironmentsCanaryIngressUpdatePayload'; ofType: null; } }; 'epicAddIssue': { name: 'epicAddIssue'; type: { kind: 'OBJECT'; name: 'EpicAddIssuePayload'; ofType: null; } }; 'epicBoardCreate': { name: 'epicBoardCreate'; type: { kind: 'OBJECT'; name: 'EpicBoardCreatePayload'; ofType: null; } }; 'epicBoardListCreate': { name: 'epicBoardListCreate'; type: { kind: 'OBJECT'; name: 'EpicBoardListCreatePayload'; ofType: null; } }; 'epicBoardListDestroy': { name: 'epicBoardListDestroy'; type: { kind: 'OBJECT'; name: 'EpicBoardListDestroyPayload'; ofType: null; } }; 'epicBoardUpdate': { name: 'epicBoardUpdate'; type: { kind: 'OBJECT'; name: 'EpicBoardUpdatePayload'; ofType: null; } }; 'epicMoveList': { name: 'epicMoveList'; type: { kind: 'OBJECT'; name: 'EpicMoveListPayload'; ofType: null; } }; 'epicSetSubscription': { name: 'epicSetSubscription'; type: { kind: 'OBJECT'; name: 'EpicSetSubscriptionPayload'; ofType: null; } }; 'epicTreeReorder': { name: 'epicTreeReorder'; type: { kind: 'OBJECT'; name: 'EpicTreeReorderPayload'; ofType: null; } }; 'escalationPolicyCreate': { name: 'escalationPolicyCreate'; type: { kind: 'OBJECT'; name: 'EscalationPolicyCreatePayload'; ofType: null; } }; 'escalationPolicyDestroy': { name: 'escalationPolicyDestroy'; type: { kind: 'OBJECT'; name: 'EscalationPolicyDestroyPayload'; ofType: null; } }; 'escalationPolicyUpdate': { name: 'escalationPolicyUpdate'; type: { kind: 'OBJECT'; name: 'EscalationPolicyUpdatePayload'; ofType: null; } }; 'exportRequirements': { name: 'exportRequirements'; type: { kind: 'OBJECT'; name: 'ExportRequirementsPayload'; ofType: null; } }; 'externalAuditEventDestinationCreate': { name: 'externalAuditEventDestinationCreate'; type: { kind: 'OBJECT'; name: 'ExternalAuditEventDestinationCreatePayload'; ofType: null; } }; 'externalAuditEventDestinationDestroy': { name: 'externalAuditEventDestinationDestroy'; type: { kind: 'OBJECT'; name: 'ExternalAuditEventDestinationDestroyPayload'; ofType: null; } }; 'externalAuditEventDestinationUpdate': { name: 'externalAuditEventDestinationUpdate'; type: { kind: 'OBJECT'; name: 'ExternalAuditEventDestinationUpdatePayload'; ofType: null; } }; 'geoRegistriesBulkUpdate': { name: 'geoRegistriesBulkUpdate'; type: { kind: 'OBJECT'; name: 'GeoRegistriesBulkUpdatePayload'; ofType: null; } }; 'geoRegistriesUpdate': { name: 'geoRegistriesUpdate'; type: { kind: 'OBJECT'; name: 'GeoRegistriesUpdatePayload'; ofType: null; } }; 'gitlabSubscriptionActivate': { name: 'gitlabSubscriptionActivate'; type: { kind: 'OBJECT'; name: 'GitlabSubscriptionActivatePayload'; ofType: null; } }; 'googleCloudLoggingConfigurationCreate': { name: 'googleCloudLoggingConfigurationCreate'; type: { kind: 'OBJECT'; name: 'GoogleCloudLoggingConfigurationCreatePayload'; ofType: null; } }; 'googleCloudLoggingConfigurationDestroy': { name: 'googleCloudLoggingConfigurationDestroy'; type: { kind: 'OBJECT'; name: 'GoogleCloudLoggingConfigurationDestroyPayload'; ofType: null; } }; 'googleCloudLoggingConfigurationUpdate': { name: 'googleCloudLoggingConfigurationUpdate'; type: { kind: 'OBJECT'; name: 'GoogleCloudLoggingConfigurationUpdatePayload'; ofType: null; } }; 'groupMemberBulkUpdate': { name: 'groupMemberBulkUpdate'; type: { kind: 'OBJECT'; name: 'GroupMemberBulkUpdatePayload'; ofType: null; } }; 'groupSavedReplyCreate': { name: 'groupSavedReplyCreate'; type: { kind: 'OBJECT'; name: 'GroupSavedReplyCreatePayload'; ofType: null; } }; 'groupSavedReplyDestroy': { name: 'groupSavedReplyDestroy'; type: { kind: 'OBJECT'; name: 'GroupSavedReplyDestroyPayload'; ofType: null; } }; 'groupSavedReplyUpdate': { name: 'groupSavedReplyUpdate'; type: { kind: 'OBJECT'; name: 'GroupSavedReplyUpdatePayload'; ofType: null; } }; 'groupUpdate': { name: 'groupUpdate'; type: { kind: 'OBJECT'; name: 'GroupUpdatePayload'; ofType: null; } }; 'httpIntegrationCreate': { name: 'httpIntegrationCreate'; type: { kind: 'OBJECT'; name: 'HttpIntegrationCreatePayload'; ofType: null; } }; 'httpIntegrationDestroy': { name: 'httpIntegrationDestroy'; type: { kind: 'OBJECT'; name: 'HttpIntegrationDestroyPayload'; ofType: null; } }; 'httpIntegrationResetToken': { name: 'httpIntegrationResetToken'; type: { kind: 'OBJECT'; name: 'HttpIntegrationResetTokenPayload'; ofType: null; } }; 'httpIntegrationUpdate': { name: 'httpIntegrationUpdate'; type: { kind: 'OBJECT'; name: 'HttpIntegrationUpdatePayload'; ofType: null; } }; 'instanceExternalAuditEventDestinationCreate': { name: 'instanceExternalAuditEventDestinationCreate'; type: { kind: 'OBJECT'; name: 'InstanceExternalAuditEventDestinationCreatePayload'; ofType: null; } }; 'instanceExternalAuditEventDestinationDestroy': { name: 'instanceExternalAuditEventDestinationDestroy'; type: { kind: 'OBJECT'; name: 'InstanceExternalAuditEventDestinationDestroyPayload'; ofType: null; } }; 'instanceExternalAuditEventDestinationUpdate': { name: 'instanceExternalAuditEventDestinationUpdate'; type: { kind: 'OBJECT'; name: 'InstanceExternalAuditEventDestinationUpdatePayload'; ofType: null; } }; 'instanceGoogleCloudLoggingConfigurationCreate': { name: 'instanceGoogleCloudLoggingConfigurationCreate'; type: { kind: 'OBJECT'; name: 'InstanceGoogleCloudLoggingConfigurationCreatePayload'; ofType: null; } }; 'instanceGoogleCloudLoggingConfigurationDestroy': { name: 'instanceGoogleCloudLoggingConfigurationDestroy'; type: { kind: 'OBJECT'; name: 'InstanceGoogleCloudLoggingConfigurationDestroyPayload'; ofType: null; } }; 'instanceGoogleCloudLoggingConfigurationUpdate': { name: 'instanceGoogleCloudLoggingConfigurationUpdate'; type: { kind: 'OBJECT'; name: 'InstanceGoogleCloudLoggingConfigurationUpdatePayload'; ofType: null; } }; 'issuableResourceLinkCreate': { name: 'issuableResourceLinkCreate'; type: { kind: 'OBJECT'; name: 'IssuableResourceLinkCreatePayload'; ofType: null; } }; 'issuableResourceLinkDestroy': { name: 'issuableResourceLinkDestroy'; type: { kind: 'OBJECT'; name: 'IssuableResourceLinkDestroyPayload'; ofType: null; } }; 'issueLinkAlerts': { name: 'issueLinkAlerts'; type: { kind: 'OBJECT'; name: 'IssueLinkAlertsPayload'; ofType: null; } }; 'issueMove': { name: 'issueMove'; type: { kind: 'OBJECT'; name: 'IssueMovePayload'; ofType: null; } }; 'issueMoveList': { name: 'issueMoveList'; type: { kind: 'OBJECT'; name: 'IssueMoveListPayload'; ofType: null; } }; 'issueSetAssignees': { name: 'issueSetAssignees'; type: { kind: 'OBJECT'; name: 'IssueSetAssigneesPayload'; ofType: null; } }; 'issueSetConfidential': { name: 'issueSetConfidential'; type: { kind: 'OBJECT'; name: 'IssueSetConfidentialPayload'; ofType: null; } }; 'issueSetCrmContacts': { name: 'issueSetCrmContacts'; type: { kind: 'OBJECT'; name: 'IssueSetCrmContactsPayload'; ofType: null; } }; 'issueSetDueDate': { name: 'issueSetDueDate'; type: { kind: 'OBJECT'; name: 'IssueSetDueDatePayload'; ofType: null; } }; 'issueSetEpic': { name: 'issueSetEpic'; type: { kind: 'OBJECT'; name: 'IssueSetEpicPayload'; ofType: null; } }; 'issueSetEscalationPolicy': { name: 'issueSetEscalationPolicy'; type: { kind: 'OBJECT'; name: 'IssueSetEscalationPolicyPayload'; ofType: null; } }; 'issueSetEscalationStatus': { name: 'issueSetEscalationStatus'; type: { kind: 'OBJECT'; name: 'IssueSetEscalationStatusPayload'; ofType: null; } }; 'issueSetIteration': { name: 'issueSetIteration'; type: { kind: 'OBJECT'; name: 'IssueSetIterationPayload'; ofType: null; } }; 'issueSetLocked': { name: 'issueSetLocked'; type: { kind: 'OBJECT'; name: 'IssueSetLockedPayload'; ofType: null; } }; 'issueSetSeverity': { name: 'issueSetSeverity'; type: { kind: 'OBJECT'; name: 'IssueSetSeverityPayload'; ofType: null; } }; 'issueSetSubscription': { name: 'issueSetSubscription'; type: { kind: 'OBJECT'; name: 'IssueSetSubscriptionPayload'; ofType: null; } }; 'issueSetWeight': { name: 'issueSetWeight'; type: { kind: 'OBJECT'; name: 'IssueSetWeightPayload'; ofType: null; } }; 'issueUnlinkAlert': { name: 'issueUnlinkAlert'; type: { kind: 'OBJECT'; name: 'IssueUnlinkAlertPayload'; ofType: null; } }; 'issuesBulkUpdate': { name: 'issuesBulkUpdate'; type: { kind: 'OBJECT'; name: 'IssuesBulkUpdatePayload'; ofType: null; } }; 'iterationCadenceCreate': { name: 'iterationCadenceCreate'; type: { kind: 'OBJECT'; name: 'IterationCadenceCreatePayload'; ofType: null; } }; 'iterationCadenceDestroy': { name: 'iterationCadenceDestroy'; type: { kind: 'OBJECT'; name: 'IterationCadenceDestroyPayload'; ofType: null; } }; 'iterationCadenceUpdate': { name: 'iterationCadenceUpdate'; type: { kind: 'OBJECT'; name: 'IterationCadenceUpdatePayload'; ofType: null; } }; 'iterationCreate': { name: 'iterationCreate'; type: { kind: 'OBJECT'; name: 'iterationCreatePayload'; ofType: null; } }; 'iterationDelete': { name: 'iterationDelete'; type: { kind: 'OBJECT'; name: 'IterationDeletePayload'; ofType: null; } }; 'jiraImportStart': { name: 'jiraImportStart'; type: { kind: 'OBJECT'; name: 'JiraImportStartPayload'; ofType: null; } }; 'jiraImportUsers': { name: 'jiraImportUsers'; type: { kind: 'OBJECT'; name: 'JiraImportUsersPayload'; ofType: null; } }; 'jobArtifactsDestroy': { name: 'jobArtifactsDestroy'; type: { kind: 'OBJECT'; name: 'JobArtifactsDestroyPayload'; ofType: null; } }; 'jobCancel': { name: 'jobCancel'; type: { kind: 'OBJECT'; name: 'JobCancelPayload'; ofType: null; } }; 'jobPlay': { name: 'jobPlay'; type: { kind: 'OBJECT'; name: 'JobPlayPayload'; ofType: null; } }; 'jobRetry': { name: 'jobRetry'; type: { kind: 'OBJECT'; name: 'JobRetryPayload'; ofType: null; } }; 'jobUnschedule': { name: 'jobUnschedule'; type: { kind: 'OBJECT'; name: 'JobUnschedulePayload'; ofType: null; } }; 'labelCreate': { name: 'labelCreate'; type: { kind: 'OBJECT'; name: 'LabelCreatePayload'; ofType: null; } }; 'markAsSpamSnippet': { name: 'markAsSpamSnippet'; type: { kind: 'OBJECT'; name: 'MarkAsSpamSnippetPayload'; ofType: null; } }; 'memberRoleCreate': { name: 'memberRoleCreate'; type: { kind: 'OBJECT'; name: 'MemberRoleCreatePayload'; ofType: null; } }; 'memberRoleDelete': { name: 'memberRoleDelete'; type: { kind: 'OBJECT'; name: 'MemberRoleDeletePayload'; ofType: null; } }; 'memberRoleUpdate': { name: 'memberRoleUpdate'; type: { kind: 'OBJECT'; name: 'MemberRoleUpdatePayload'; ofType: null; } }; 'mergeRequestAccept': { name: 'mergeRequestAccept'; type: { kind: 'OBJECT'; name: 'MergeRequestAcceptPayload'; ofType: null; } }; 'mergeRequestCreate': { name: 'mergeRequestCreate'; type: { kind: 'OBJECT'; name: 'MergeRequestCreatePayload'; ofType: null; } }; 'mergeRequestReviewerRereview': { name: 'mergeRequestReviewerRereview'; type: { kind: 'OBJECT'; name: 'MergeRequestReviewerRereviewPayload'; ofType: null; } }; 'mergeRequestSetAssignees': { name: 'mergeRequestSetAssignees'; type: { kind: 'OBJECT'; name: 'MergeRequestSetAssigneesPayload'; ofType: null; } }; 'mergeRequestSetDraft': { name: 'mergeRequestSetDraft'; type: { kind: 'OBJECT'; name: 'MergeRequestSetDraftPayload'; ofType: null; } }; 'mergeRequestSetLabels': { name: 'mergeRequestSetLabels'; type: { kind: 'OBJECT'; name: 'MergeRequestSetLabelsPayload'; ofType: null; } }; 'mergeRequestSetLocked': { name: 'mergeRequestSetLocked'; type: { kind: 'OBJECT'; name: 'MergeRequestSetLockedPayload'; ofType: null; } }; 'mergeRequestSetMilestone': { name: 'mergeRequestSetMilestone'; type: { kind: 'OBJECT'; name: 'MergeRequestSetMilestonePayload'; ofType: null; } }; 'mergeRequestSetReviewers': { name: 'mergeRequestSetReviewers'; type: { kind: 'OBJECT'; name: 'MergeRequestSetReviewersPayload'; ofType: null; } }; 'mergeRequestSetSubscription': { name: 'mergeRequestSetSubscription'; type: { kind: 'OBJECT'; name: 'MergeRequestSetSubscriptionPayload'; ofType: null; } }; 'mergeRequestUpdate': { name: 'mergeRequestUpdate'; type: { kind: 'OBJECT'; name: 'MergeRequestUpdatePayload'; ofType: null; } }; 'mergeRequestUpdateApprovalRule': { name: 'mergeRequestUpdateApprovalRule'; type: { kind: 'OBJECT'; name: 'MergeRequestUpdateApprovalRulePayload'; ofType: null; } }; 'mlModelCreate': { name: 'mlModelCreate'; type: { kind: 'OBJECT'; name: 'MlModelCreatePayload'; ofType: null; } }; 'mlModelDestroy': { name: 'mlModelDestroy'; type: { kind: 'OBJECT'; name: 'MlModelDestroyPayload'; ofType: null; } }; 'namespaceBanDestroy': { name: 'namespaceBanDestroy'; type: { kind: 'OBJECT'; name: 'NamespaceBanDestroyPayload'; ofType: null; } }; 'namespaceCiCdSettingsUpdate': { name: 'namespaceCiCdSettingsUpdate'; type: { kind: 'OBJECT'; name: 'NamespaceCiCdSettingsUpdatePayload'; ofType: null; } }; 'namespaceIncreaseStorageTemporarily': { name: 'namespaceIncreaseStorageTemporarily'; type: { kind: 'OBJECT'; name: 'NamespaceIncreaseStorageTemporarilyPayload'; ofType: null; } }; 'oncallRotationCreate': { name: 'oncallRotationCreate'; type: { kind: 'OBJECT'; name: 'OncallRotationCreatePayload'; ofType: null; } }; 'oncallRotationDestroy': { name: 'oncallRotationDestroy'; type: { kind: 'OBJECT'; name: 'OncallRotationDestroyPayload'; ofType: null; } }; 'oncallRotationUpdate': { name: 'oncallRotationUpdate'; type: { kind: 'OBJECT'; name: 'OncallRotationUpdatePayload'; ofType: null; } }; 'oncallScheduleCreate': { name: 'oncallScheduleCreate'; type: { kind: 'OBJECT'; name: 'OncallScheduleCreatePayload'; ofType: null; } }; 'oncallScheduleDestroy': { name: 'oncallScheduleDestroy'; type: { kind: 'OBJECT'; name: 'OncallScheduleDestroyPayload'; ofType: null; } }; 'oncallScheduleUpdate': { name: 'oncallScheduleUpdate'; type: { kind: 'OBJECT'; name: 'OncallScheduleUpdatePayload'; ofType: null; } }; 'organizationCreate': { name: 'organizationCreate'; type: { kind: 'OBJECT'; name: 'OrganizationCreatePayload'; ofType: null; } }; 'organizationUpdate': { name: 'organizationUpdate'; type: { kind: 'OBJECT'; name: 'OrganizationUpdatePayload'; ofType: null; } }; 'pagesMarkOnboardingComplete': { name: 'pagesMarkOnboardingComplete'; type: { kind: 'OBJECT'; name: 'PagesMarkOnboardingCompletePayload'; ofType: null; } }; 'pipelineCancel': { name: 'pipelineCancel'; type: { kind: 'OBJECT'; name: 'PipelineCancelPayload'; ofType: null; } }; 'pipelineDestroy': { name: 'pipelineDestroy'; type: { kind: 'OBJECT'; name: 'PipelineDestroyPayload'; ofType: null; } }; 'pipelineRetry': { name: 'pipelineRetry'; type: { kind: 'OBJECT'; name: 'PipelineRetryPayload'; ofType: null; } }; 'pipelineScheduleCreate': { name: 'pipelineScheduleCreate'; type: { kind: 'OBJECT'; name: 'PipelineScheduleCreatePayload'; ofType: null; } }; 'pipelineScheduleDelete': { name: 'pipelineScheduleDelete'; type: { kind: 'OBJECT'; name: 'PipelineScheduleDeletePayload'; ofType: null; } }; 'pipelineSchedulePlay': { name: 'pipelineSchedulePlay'; type: { kind: 'OBJECT'; name: 'PipelineSchedulePlayPayload'; ofType: null; } }; 'pipelineScheduleTakeOwnership': { name: 'pipelineScheduleTakeOwnership'; type: { kind: 'OBJECT'; name: 'PipelineScheduleTakeOwnershipPayload'; ofType: null; } }; 'pipelineScheduleUpdate': { name: 'pipelineScheduleUpdate'; type: { kind: 'OBJECT'; name: 'PipelineScheduleUpdatePayload'; ofType: null; } }; 'pipelineTriggerCreate': { name: 'pipelineTriggerCreate'; type: { kind: 'OBJECT'; name: 'PipelineTriggerCreatePayload'; ofType: null; } }; 'pipelineTriggerDelete': { name: 'pipelineTriggerDelete'; type: { kind: 'OBJECT'; name: 'PipelineTriggerDeletePayload'; ofType: null; } }; 'pipelineTriggerUpdate': { name: 'pipelineTriggerUpdate'; type: { kind: 'OBJECT'; name: 'PipelineTriggerUpdatePayload'; ofType: null; } }; 'projectCiCdSettingsUpdate': { name: 'projectCiCdSettingsUpdate'; type: { kind: 'OBJECT'; name: 'ProjectCiCdSettingsUpdatePayload'; ofType: null; } }; 'projectInitializeProductAnalytics': { name: 'projectInitializeProductAnalytics'; type: { kind: 'OBJECT'; name: 'ProjectInitializeProductAnalyticsPayload'; ofType: null; } }; 'projectMemberBulkUpdate': { name: 'projectMemberBulkUpdate'; type: { kind: 'OBJECT'; name: 'ProjectMemberBulkUpdatePayload'; ofType: null; } }; 'projectSetComplianceFramework': { name: 'projectSetComplianceFramework'; type: { kind: 'OBJECT'; name: 'ProjectSetComplianceFrameworkPayload'; ofType: null; } }; 'projectSetContinuousVulnerabilityScanning': { name: 'projectSetContinuousVulnerabilityScanning'; type: { kind: 'OBJECT'; name: 'ProjectSetContinuousVulnerabilityScanningPayload'; ofType: null; } }; 'projectSetLocked': { name: 'projectSetLocked'; type: { kind: 'OBJECT'; name: 'ProjectSetLockedPayload'; ofType: null; } }; 'projectSettingsUpdate': { name: 'projectSettingsUpdate'; type: { kind: 'OBJECT'; name: 'ProjectSettingsUpdatePayload'; ofType: null; } }; 'projectSubscriptionCreate': { name: 'projectSubscriptionCreate'; type: { kind: 'OBJECT'; name: 'ProjectSubscriptionCreatePayload'; ofType: null; } }; 'projectSubscriptionDelete': { name: 'projectSubscriptionDelete'; type: { kind: 'OBJECT'; name: 'ProjectSubscriptionDeletePayload'; ofType: null; } }; 'projectSyncFork': { name: 'projectSyncFork'; type: { kind: 'OBJECT'; name: 'ProjectSyncForkPayload'; ofType: null; } }; 'prometheusIntegrationCreate': { name: 'prometheusIntegrationCreate'; type: { kind: 'OBJECT'; name: 'PrometheusIntegrationCreatePayload'; ofType: null; } }; 'prometheusIntegrationResetToken': { name: 'prometheusIntegrationResetToken'; type: { kind: 'OBJECT'; name: 'PrometheusIntegrationResetTokenPayload'; ofType: null; } }; 'prometheusIntegrationUpdate': { name: 'prometheusIntegrationUpdate'; type: { kind: 'OBJECT'; name: 'PrometheusIntegrationUpdatePayload'; ofType: null; } }; 'promoteToEpic': { name: 'promoteToEpic'; type: { kind: 'OBJECT'; name: 'PromoteToEpicPayload'; ofType: null; } }; 'refreshStandardsAdherenceChecks': { name: 'refreshStandardsAdherenceChecks'; type: { kind: 'OBJECT'; name: 'RefreshStandardsAdherenceChecksPayload'; ofType: null; } }; 'releaseAssetLinkCreate': { name: 'releaseAssetLinkCreate'; type: { kind: 'OBJECT'; name: 'ReleaseAssetLinkCreatePayload'; ofType: null; } }; 'releaseAssetLinkDelete': { name: 'releaseAssetLinkDelete'; type: { kind: 'OBJECT'; name: 'ReleaseAssetLinkDeletePayload'; ofType: null; } }; 'releaseAssetLinkUpdate': { name: 'releaseAssetLinkUpdate'; type: { kind: 'OBJECT'; name: 'ReleaseAssetLinkUpdatePayload'; ofType: null; } }; 'releaseCreate': { name: 'releaseCreate'; type: { kind: 'OBJECT'; name: 'ReleaseCreatePayload'; ofType: null; } }; 'releaseDelete': { name: 'releaseDelete'; type: { kind: 'OBJECT'; name: 'ReleaseDeletePayload'; ofType: null; } }; 'releaseUpdate': { name: 'releaseUpdate'; type: { kind: 'OBJECT'; name: 'ReleaseUpdatePayload'; ofType: null; } }; 'removeProjectFromSecurityDashboard': { name: 'removeProjectFromSecurityDashboard'; type: { kind: 'OBJECT'; name: 'RemoveProjectFromSecurityDashboardPayload'; ofType: null; } }; 'repositionImageDiffNote': { name: 'repositionImageDiffNote'; type: { kind: 'OBJECT'; name: 'RepositionImageDiffNotePayload'; ofType: null; } }; 'runnerCreate': { name: 'runnerCreate'; type: { kind: 'OBJECT'; name: 'RunnerCreatePayload'; ofType: null; } }; 'runnerDelete': { name: 'runnerDelete'; type: { kind: 'OBJECT'; name: 'RunnerDeletePayload'; ofType: null; } }; 'runnerUpdate': { name: 'runnerUpdate'; type: { kind: 'OBJECT'; name: 'RunnerUpdatePayload'; ofType: null; } }; 'runnersExportUsage': { name: 'runnersExportUsage'; type: { kind: 'OBJECT'; name: 'RunnersExportUsagePayload'; ofType: null; } }; 'runnersRegistrationTokenReset': { name: 'runnersRegistrationTokenReset'; type: { kind: 'OBJECT'; name: 'RunnersRegistrationTokenResetPayload'; ofType: null; } }; 'savedReplyCreate': { name: 'savedReplyCreate'; type: { kind: 'OBJECT'; name: 'SavedReplyCreatePayload'; ofType: null; } }; 'savedReplyDestroy': { name: 'savedReplyDestroy'; type: { kind: 'OBJECT'; name: 'SavedReplyDestroyPayload'; ofType: null; } }; 'savedReplyUpdate': { name: 'savedReplyUpdate'; type: { kind: 'OBJECT'; name: 'SavedReplyUpdatePayload'; ofType: null; } }; 'scanExecutionPolicyCommit': { name: 'scanExecutionPolicyCommit'; type: { kind: 'OBJECT'; name: 'ScanExecutionPolicyCommitPayload'; ofType: null; } }; 'securityFindingCreateIssue': { name: 'securityFindingCreateIssue'; type: { kind: 'OBJECT'; name: 'SecurityFindingCreateIssuePayload'; ofType: null; } }; 'securityFindingCreateMergeRequest': { name: 'securityFindingCreateMergeRequest'; type: { kind: 'OBJECT'; name: 'SecurityFindingCreateMergeRequestPayload'; ofType: null; } }; 'securityFindingDismiss': { name: 'securityFindingDismiss'; type: { kind: 'OBJECT'; name: 'SecurityFindingDismissPayload'; ofType: null; } }; 'securityFindingRevertToDetected': { name: 'securityFindingRevertToDetected'; type: { kind: 'OBJECT'; name: 'SecurityFindingRevertToDetectedPayload'; ofType: null; } }; 'securityPolicyProjectAssign': { name: 'securityPolicyProjectAssign'; type: { kind: 'OBJECT'; name: 'SecurityPolicyProjectAssignPayload'; ofType: null; } }; 'securityPolicyProjectCreate': { name: 'securityPolicyProjectCreate'; type: { kind: 'OBJECT'; name: 'SecurityPolicyProjectCreatePayload'; ofType: null; } }; 'securityPolicyProjectUnassign': { name: 'securityPolicyProjectUnassign'; type: { kind: 'OBJECT'; name: 'SecurityPolicyProjectUnassignPayload'; ofType: null; } }; 'securityTrainingUpdate': { name: 'securityTrainingUpdate'; type: { kind: 'OBJECT'; name: 'SecurityTrainingUpdatePayload'; ofType: null; } }; 'starProject': { name: 'starProject'; type: { kind: 'OBJECT'; name: 'StarProjectPayload'; ofType: null; } }; 'terraformStateDelete': { name: 'terraformStateDelete'; type: { kind: 'OBJECT'; name: 'TerraformStateDeletePayload'; ofType: null; } }; 'terraformStateLock': { name: 'terraformStateLock'; type: { kind: 'OBJECT'; name: 'TerraformStateLockPayload'; ofType: null; } }; 'terraformStateUnlock': { name: 'terraformStateUnlock'; type: { kind: 'OBJECT'; name: 'TerraformStateUnlockPayload'; ofType: null; } }; 'timelineEventCreate': { name: 'timelineEventCreate'; type: { kind: 'OBJECT'; name: 'TimelineEventCreatePayload'; ofType: null; } }; 'timelineEventDestroy': { name: 'timelineEventDestroy'; type: { kind: 'OBJECT'; name: 'TimelineEventDestroyPayload'; ofType: null; } }; 'timelineEventPromoteFromNote': { name: 'timelineEventPromoteFromNote'; type: { kind: 'OBJECT'; name: 'TimelineEventPromoteFromNotePayload'; ofType: null; } }; 'timelineEventTagCreate': { name: 'timelineEventTagCreate'; type: { kind: 'OBJECT'; name: 'TimelineEventTagCreatePayload'; ofType: null; } }; 'timelineEventUpdate': { name: 'timelineEventUpdate'; type: { kind: 'OBJECT'; name: 'TimelineEventUpdatePayload'; ofType: null; } }; 'timelogCreate': { name: 'timelogCreate'; type: { kind: 'OBJECT'; name: 'TimelogCreatePayload'; ofType: null; } }; 'timelogDelete': { name: 'timelogDelete'; type: { kind: 'OBJECT'; name: 'TimelogDeletePayload'; ofType: null; } }; 'todoCreate': { name: 'todoCreate'; type: { kind: 'OBJECT'; name: 'TodoCreatePayload'; ofType: null; } }; 'todoMarkDone': { name: 'todoMarkDone'; type: { kind: 'OBJECT'; name: 'TodoMarkDonePayload'; ofType: null; } }; 'todoRestore': { name: 'todoRestore'; type: { kind: 'OBJECT'; name: 'TodoRestorePayload'; ofType: null; } }; 'todoRestoreMany': { name: 'todoRestoreMany'; type: { kind: 'OBJECT'; name: 'TodoRestoreManyPayload'; ofType: null; } }; 'todosMarkAllDone': { name: 'todosMarkAllDone'; type: { kind: 'OBJECT'; name: 'TodosMarkAllDonePayload'; ofType: null; } }; 'updateAlertStatus': { name: 'updateAlertStatus'; type: { kind: 'OBJECT'; name: 'UpdateAlertStatusPayload'; ofType: null; } }; 'updateBoard': { name: 'updateBoard'; type: { kind: 'OBJECT'; name: 'UpdateBoardPayload'; ofType: null; } }; 'updateBoardEpicUserPreferences': { name: 'updateBoardEpicUserPreferences'; type: { kind: 'OBJECT'; name: 'UpdateBoardEpicUserPreferencesPayload'; ofType: null; } }; 'updateBoardList': { name: 'updateBoardList'; type: { kind: 'OBJECT'; name: 'UpdateBoardListPayload'; ofType: null; } }; 'updateComplianceFramework': { name: 'updateComplianceFramework'; type: { kind: 'OBJECT'; name: 'UpdateComplianceFrameworkPayload'; ofType: null; } }; 'updateContainerExpirationPolicy': { name: 'updateContainerExpirationPolicy'; type: { kind: 'OBJECT'; name: 'UpdateContainerExpirationPolicyPayload'; ofType: null; } }; 'updateContainerRegistryProtectionRule': { name: 'updateContainerRegistryProtectionRule'; type: { kind: 'OBJECT'; name: 'UpdateContainerRegistryProtectionRulePayload'; ofType: null; } }; 'updateDependencyProxyImageTtlGroupPolicy': { name: 'updateDependencyProxyImageTtlGroupPolicy'; type: { kind: 'OBJECT'; name: 'UpdateDependencyProxyImageTtlGroupPolicyPayload'; ofType: null; } }; 'updateDependencyProxyPackagesSettings': { name: 'updateDependencyProxyPackagesSettings'; type: { kind: 'OBJECT'; name: 'UpdateDependencyProxyPackagesSettingsPayload'; ofType: null; } }; 'updateDependencyProxySettings': { name: 'updateDependencyProxySettings'; type: { kind: 'OBJECT'; name: 'UpdateDependencyProxySettingsPayload'; ofType: null; } }; 'updateEpic': { name: 'updateEpic'; type: { kind: 'OBJECT'; name: 'UpdateEpicPayload'; ofType: null; } }; 'updateEpicBoardList': { name: 'updateEpicBoardList'; type: { kind: 'OBJECT'; name: 'UpdateEpicBoardListPayload'; ofType: null; } }; 'updateImageDiffNote': { name: 'updateImageDiffNote'; type: { kind: 'OBJECT'; name: 'UpdateImageDiffNotePayload'; ofType: null; } }; 'updateIssue': { name: 'updateIssue'; type: { kind: 'OBJECT'; name: 'UpdateIssuePayload'; ofType: null; } }; 'updateIteration': { name: 'updateIteration'; type: { kind: 'OBJECT'; name: 'UpdateIterationPayload'; ofType: null; } }; 'updateNamespacePackageSettings': { name: 'updateNamespacePackageSettings'; type: { kind: 'OBJECT'; name: 'UpdateNamespacePackageSettingsPayload'; ofType: null; } }; 'updateNote': { name: 'updateNote'; type: { kind: 'OBJECT'; name: 'UpdateNotePayload'; ofType: null; } }; 'updatePackagesCleanupPolicy': { name: 'updatePackagesCleanupPolicy'; type: { kind: 'OBJECT'; name: 'UpdatePackagesCleanupPolicyPayload'; ofType: null; } }; 'updatePackagesProtectionRule': { name: 'updatePackagesProtectionRule'; type: { kind: 'OBJECT'; name: 'UpdatePackagesProtectionRulePayload'; ofType: null; } }; 'updateRequirement': { name: 'updateRequirement'; type: { kind: 'OBJECT'; name: 'UpdateRequirementPayload'; ofType: null; } }; 'updateSnippet': { name: 'updateSnippet'; type: { kind: 'OBJECT'; name: 'UpdateSnippetPayload'; ofType: null; } }; 'uploadDelete': { name: 'uploadDelete'; type: { kind: 'OBJECT'; name: 'UploadDeletePayload'; ofType: null; } }; 'userAchievementPrioritiesUpdate': { name: 'userAchievementPrioritiesUpdate'; type: { kind: 'OBJECT'; name: 'UserAchievementPrioritiesUpdatePayload'; ofType: null; } }; 'userAchievementsDelete': { name: 'userAchievementsDelete'; type: { kind: 'OBJECT'; name: 'UserAchievementsDeletePayload'; ofType: null; } }; 'userAddOnAssignmentBulkCreate': { name: 'userAddOnAssignmentBulkCreate'; type: { kind: 'OBJECT'; name: 'UserAddOnAssignmentBulkCreatePayload'; ofType: null; } }; 'userAddOnAssignmentBulkRemove': { name: 'userAddOnAssignmentBulkRemove'; type: { kind: 'OBJECT'; name: 'UserAddOnAssignmentBulkRemovePayload'; ofType: null; } }; 'userAddOnAssignmentCreate': { name: 'userAddOnAssignmentCreate'; type: { kind: 'OBJECT'; name: 'UserAddOnAssignmentCreatePayload'; ofType: null; } }; 'userAddOnAssignmentRemove': { name: 'userAddOnAssignmentRemove'; type: { kind: 'OBJECT'; name: 'UserAddOnAssignmentRemovePayload'; ofType: null; } }; 'userCalloutCreate': { name: 'userCalloutCreate'; type: { kind: 'OBJECT'; name: 'UserCalloutCreatePayload'; ofType: null; } }; 'userPreferencesUpdate': { name: 'userPreferencesUpdate'; type: { kind: 'OBJECT'; name: 'UserPreferencesUpdatePayload'; ofType: null; } }; 'userSetNamespaceCommitEmail': { name: 'userSetNamespaceCommitEmail'; type: { kind: 'OBJECT'; name: 'UserSetNamespaceCommitEmailPayload'; ofType: null; } }; 'valueStreamCreate': { name: 'valueStreamCreate'; type: { kind: 'OBJECT'; name: 'ValueStreamCreatePayload'; ofType: null; } }; 'valueStreamDestroy': { name: 'valueStreamDestroy'; type: { kind: 'OBJECT'; name: 'ValueStreamDestroyPayload'; ofType: null; } }; 'valueStreamUpdate': { name: 'valueStreamUpdate'; type: { kind: 'OBJECT'; name: 'ValueStreamUpdatePayload'; ofType: null; } }; 'vulnerabilitiesDismiss': { name: 'vulnerabilitiesDismiss'; type: { kind: 'OBJECT'; name: 'VulnerabilitiesDismissPayload'; ofType: null; } }; 'vulnerabilitiesRemoveAllFromProject': { name: 'vulnerabilitiesRemoveAllFromProject'; type: { kind: 'OBJECT'; name: 'VulnerabilitiesRemoveAllFromProjectPayload'; ofType: null; } }; 'vulnerabilityConfirm': { name: 'vulnerabilityConfirm'; type: { kind: 'OBJECT'; name: 'VulnerabilityConfirmPayload'; ofType: null; } }; 'vulnerabilityCreate': { name: 'vulnerabilityCreate'; type: { kind: 'OBJECT'; name: 'VulnerabilityCreatePayload'; ofType: null; } }; 'vulnerabilityDismiss': { name: 'vulnerabilityDismiss'; type: { kind: 'OBJECT'; name: 'VulnerabilityDismissPayload'; ofType: null; } }; 'vulnerabilityExternalIssueLinkCreate': { name: 'vulnerabilityExternalIssueLinkCreate'; type: { kind: 'OBJECT'; name: 'VulnerabilityExternalIssueLinkCreatePayload'; ofType: null; } }; 'vulnerabilityExternalIssueLinkDestroy': { name: 'vulnerabilityExternalIssueLinkDestroy'; type: { kind: 'OBJECT'; name: 'VulnerabilityExternalIssueLinkDestroyPayload'; ofType: null; } }; 'vulnerabilityIssueLinkCreate': { name: 'vulnerabilityIssueLinkCreate'; type: { kind: 'OBJECT'; name: 'VulnerabilityIssueLinkCreatePayload'; ofType: null; } }; 'vulnerabilityResolve': { name: 'vulnerabilityResolve'; type: { kind: 'OBJECT'; name: 'VulnerabilityResolvePayload'; ofType: null; } }; 'vulnerabilityRevertToDetected': { name: 'vulnerabilityRevertToDetected'; type: { kind: 'OBJECT'; name: 'VulnerabilityRevertToDetectedPayload'; ofType: null; } }; 'workItemAddLinkedItems': { name: 'workItemAddLinkedItems'; type: { kind: 'OBJECT'; name: 'WorkItemAddLinkedItemsPayload'; ofType: null; } }; 'workItemConvert': { name: 'workItemConvert'; type: { kind: 'OBJECT'; name: 'WorkItemConvertPayload'; ofType: null; } }; 'workItemCreate': { name: 'workItemCreate'; type: { kind: 'OBJECT'; name: 'WorkItemCreatePayload'; ofType: null; } }; 'workItemCreateFromTask': { name: 'workItemCreateFromTask'; type: { kind: 'OBJECT'; name: 'WorkItemCreateFromTaskPayload'; ofType: null; } }; 'workItemDelete': { name: 'workItemDelete'; type: { kind: 'OBJECT'; name: 'WorkItemDeletePayload'; ofType: null; } }; 'workItemExport': { name: 'workItemExport'; type: { kind: 'OBJECT'; name: 'WorkItemExportPayload'; ofType: null; } }; 'workItemRemoveLinkedItems': { name: 'workItemRemoveLinkedItems'; type: { kind: 'OBJECT'; name: 'WorkItemRemoveLinkedItemsPayload'; ofType: null; } }; 'workItemSubscribe': { name: 'workItemSubscribe'; type: { kind: 'OBJECT'; name: 'WorkItemSubscribePayload'; ofType: null; } }; 'workItemUpdate': { name: 'workItemUpdate'; type: { kind: 'OBJECT'; name: 'WorkItemUpdatePayload'; ofType: null; } }; 'workspaceCreate': { name: 'workspaceCreate'; type: { kind: 'OBJECT'; name: 'WorkspaceCreatePayload'; ofType: null; } }; 'workspaceUpdate': { name: 'workspaceUpdate'; type: { kind: 'OBJECT'; name: 'WorkspaceUpdatePayload'; ofType: null; } }; }; };
    'MutationOperationMode': { kind: 'ENUM'; name: 'MutationOperationMode'; type: 'REPLACE' | 'APPEND' | 'REMOVE'; };
    'Namespace': { kind: 'OBJECT'; name: 'Namespace'; fields: { 'achievements': { name: 'achievements'; type: { kind: 'OBJECT'; name: 'AchievementConnection'; ofType: null; } }; 'actualRepositorySizeLimit': { name: 'actualRepositorySizeLimit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'actualSizeLimit': { name: 'actualSizeLimit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'addOnEligibleUsers': { name: 'addOnEligibleUsers'; type: { kind: 'OBJECT'; name: 'AddOnUserConnection'; ofType: null; } }; 'addOnPurchase': { name: 'addOnPurchase'; type: { kind: 'OBJECT'; name: 'AddOnPurchase'; ofType: null; } }; 'additionalPurchasedStorageSize': { name: 'additionalPurchasedStorageSize'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'approvalPolicies': { name: 'approvalPolicies'; type: { kind: 'OBJECT'; name: 'ApprovalPolicyConnection'; ofType: null; } }; 'complianceFrameworks': { name: 'complianceFrameworks'; type: { kind: 'OBJECT'; name: 'ComplianceFrameworkConnection'; ofType: null; } }; 'containsLockedProjects': { name: 'containsLockedProjects'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'crossProjectPipelineAvailable': { name: 'crossProjectPipelineAvailable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fullName': { name: 'fullName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'fullPath': { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isTemporaryStorageIncreaseEnabled': { name: 'isTemporaryStorageIncreaseEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'lfsEnabled': { name: 'lfsEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'packageSettings': { name: 'packageSettings'; type: { kind: 'OBJECT'; name: 'PackageSettings'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'productAnalyticsStoredEventsLimit': { name: 'productAnalyticsStoredEventsLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'projects': { name: 'projects'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; }; } }; 'repositorySizeExcessProjectCount': { name: 'repositorySizeExcessProjectCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'requestAccessEnabled': { name: 'requestAccessEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'rootStorageStatistics': { name: 'rootStorageStatistics'; type: { kind: 'OBJECT'; name: 'RootStorageStatistics'; ofType: null; } }; 'scanExecutionPolicies': { name: 'scanExecutionPolicies'; type: { kind: 'OBJECT'; name: 'ScanExecutionPolicyConnection'; ofType: null; } }; 'scanResultPolicies': { name: 'scanResultPolicies'; type: { kind: 'OBJECT'; name: 'ScanResultPolicyConnection'; ofType: null; } }; 'securityPolicyProject': { name: 'securityPolicyProject'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'sharedRunnersSetting': { name: 'sharedRunnersSetting'; type: { kind: 'ENUM'; name: 'SharedRunnersSetting'; ofType: null; } }; 'storageSizeLimit': { name: 'storageSizeLimit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'temporaryStorageIncreaseEndsOn': { name: 'temporaryStorageIncreaseEndsOn'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'timelogCategories': { name: 'timelogCategories'; type: { kind: 'OBJECT'; name: 'TimeTrackingTimelogCategoryConnection'; ofType: null; } }; 'totalRepositorySize': { name: 'totalRepositorySize'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'totalRepositorySizeExcess': { name: 'totalRepositorySizeExcess'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'visibility': { name: 'visibility'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'NamespaceBan': { kind: 'OBJECT'; name: 'NamespaceBan'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GlobalID'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; }; };
    'NamespaceBanDestroyInput': { kind: 'INPUT_OBJECT'; name: 'NamespaceBanDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'NamespacesNamespaceBanID'; ofType: null; }; }; defaultValue: null }]; };
    'NamespaceBanDestroyPayload': { kind: 'OBJECT'; name: 'NamespaceBanDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'namespaceBan': { name: 'namespaceBan'; type: { kind: 'OBJECT'; name: 'NamespaceBan'; ofType: null; } }; }; };
    'NamespaceCiCdSetting': { kind: 'OBJECT'; name: 'NamespaceCiCdSetting'; fields: { 'allowStaleRunnerPruning': { name: 'allowStaleRunnerPruning'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'namespace': { name: 'namespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; }; };
    'NamespaceCiCdSettingsUpdateInput': { kind: 'INPUT_OBJECT'; name: 'NamespaceCiCdSettingsUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'allowStaleRunnerPruning'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'NamespaceCiCdSettingsUpdatePayload': { kind: 'OBJECT'; name: 'NamespaceCiCdSettingsUpdatePayload'; fields: { 'ciCdSettings': { name: 'ciCdSettings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NamespaceCiCdSetting'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'NamespaceCommitEmail': { kind: 'OBJECT'; name: 'NamespaceCommitEmail'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'email': { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Email'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'NamespaceCommitEmailConnection': { kind: 'OBJECT'; name: 'NamespaceCommitEmailConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'NamespaceCommitEmailEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'NamespaceCommitEmail'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'NamespaceCommitEmailEdge': { kind: 'OBJECT'; name: 'NamespaceCommitEmailEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'NamespaceCommitEmail'; ofType: null; } }; }; };
    'NamespaceConnection': { kind: 'OBJECT'; name: 'NamespaceConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'NamespaceEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'NamespaceEdge': { kind: 'OBJECT'; name: 'NamespaceEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; }; };
    'NamespaceID': unknown;
    'NamespaceIncreaseStorageTemporarilyInput': { kind: 'INPUT_OBJECT'; name: 'NamespaceIncreaseStorageTemporarilyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'NamespaceID'; ofType: null; }; }; defaultValue: null }]; };
    'NamespaceIncreaseStorageTemporarilyPayload': { kind: 'OBJECT'; name: 'NamespaceIncreaseStorageTemporarilyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; }; };
    'NamespaceProjectSort': { kind: 'ENUM'; name: 'NamespaceProjectSort'; type: 'SIMILARITY' | 'ACTIVITY_DESC' | 'STORAGE_SIZE_ASC' | 'STORAGE_SIZE_DESC' | 'STORAGE' | 'EXCESS_REPO_STORAGE_SIZE_DESC'; };
    'NamespacesNamespaceBanID': unknown;
    'NegatedBoardIssueInput': { kind: 'INPUT_OBJECT'; name: 'NegatedBoardIssueInput'; inputFields: [{ name: 'labelName'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'authorUsername'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'myReactionEmoji'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'iids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'milestoneTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'assigneeUsername'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'releaseTag'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'types'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'IssueType'; ofType: null; }; }; }; defaultValue: null }, { name: 'milestoneWildcardId'; type: { kind: 'ENUM'; name: 'MilestoneWildcardId'; ofType: null; }; defaultValue: null }, { name: 'epicId'; type: { kind: 'SCALAR'; name: 'EpicID'; ofType: null; }; defaultValue: null }, { name: 'iterationTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'iterationId'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IterationID'; ofType: null; }; }; }; defaultValue: null }, { name: 'iterationWildcardId'; type: { kind: 'ENUM'; name: 'NegatedIterationWildcardId'; ofType: null; }; defaultValue: null }, { name: 'healthStatusFilter'; type: { kind: 'ENUM'; name: 'HealthStatus'; ofType: null; }; defaultValue: null }]; };
    'NegatedComplianceFrameworkFilters': { kind: 'INPUT_OBJECT'; name: 'NegatedComplianceFrameworkFilters'; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ComplianceManagementFrameworkID'; ofType: null; }; defaultValue: null }]; };
    'NegatedEpicBoardIssueInput': { kind: 'INPUT_OBJECT'; name: 'NegatedEpicBoardIssueInput'; inputFields: [{ name: 'labelName'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'authorUsername'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'myReactionEmoji'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'NegatedEpicFilterInput': { kind: 'INPUT_OBJECT'; name: 'NegatedEpicFilterInput'; inputFields: [{ name: 'labelName'; type: { kind: 'LIST'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'authorUsername'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'myReactionEmoji'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'NegatedIssueFilterInput': { kind: 'INPUT_OBJECT'; name: 'NegatedIssueFilterInput'; inputFields: [{ name: 'assigneeId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'assigneeUsernames'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'authorUsername'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'iids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'labelName'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'milestoneTitle'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'milestoneWildcardId'; type: { kind: 'ENUM'; name: 'NegatedMilestoneWildcardId'; ofType: null; }; defaultValue: null }, { name: 'myReactionEmoji'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'releaseTag'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'types'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'IssueType'; ofType: null; }; }; }; defaultValue: null }, { name: 'epicId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'iterationId'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'iterationWildcardId'; type: { kind: 'ENUM'; name: 'IterationWildcardId'; ofType: null; }; defaultValue: null }, { name: 'healthStatusFilter'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'HealthStatus'; ofType: null; }; }; }; defaultValue: null }]; };
    'NegatedIterationWildcardId': { kind: 'ENUM'; name: 'NegatedIterationWildcardId'; type: 'CURRENT'; };
    'NegatedMilestoneWildcardId': { kind: 'ENUM'; name: 'NegatedMilestoneWildcardId'; type: 'STARTED' | 'UPCOMING'; };
    'NegatedValueStreamAnalyticsIssueFilterInput': { kind: 'INPUT_OBJECT'; name: 'NegatedValueStreamAnalyticsIssueFilterInput'; inputFields: [{ name: 'assigneeUsernames'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'authorUsername'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'milestoneTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'labelNames'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'epicId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'iterationId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'myReactionEmoji'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'NestedEnvironment': { kind: 'OBJECT'; name: 'NestedEnvironment'; fields: { 'environment': { name: 'environment'; type: { kind: 'OBJECT'; name: 'Environment'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'size': { name: 'size'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'NestedEnvironmentConnection': { kind: 'OBJECT'; name: 'NestedEnvironmentConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'NestedEnvironmentEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'NestedEnvironment'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'NestedEnvironmentEdge': { kind: 'OBJECT'; name: 'NestedEnvironmentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'NestedEnvironment'; ofType: null; } }; }; };
    'NetworkPolicy': { kind: 'OBJECT'; name: 'NetworkPolicy'; fields: { 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'environments': { name: 'environments'; type: { kind: 'OBJECT'; name: 'EnvironmentConnection'; ofType: null; } }; 'fromAutoDevops': { name: 'fromAutoDevops'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'kind': { name: 'kind'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'NetworkPolicyKind'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'yaml': { name: 'yaml'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'NetworkPolicyConnection': { kind: 'OBJECT'; name: 'NetworkPolicyConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'NetworkPolicyEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'NetworkPolicy'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'NetworkPolicyEdge': { kind: 'OBJECT'; name: 'NetworkPolicyEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'NetworkPolicy'; ofType: null; } }; }; };
    'NetworkPolicyKind': { kind: 'ENUM'; name: 'NetworkPolicyKind'; type: 'CiliumNetworkPolicy' | 'NetworkPolicy'; };
    'Note': { kind: 'OBJECT'; name: 'Note'; fields: { 'author': { name: 'author'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'authorIsContributor': { name: 'authorIsContributor'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'awardEmoji': { name: 'awardEmoji'; type: { kind: 'OBJECT'; name: 'AwardEmojiConnection'; ofType: null; } }; 'body': { name: 'body'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'bodyHtml': { name: 'bodyHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'confidential': { name: 'confidential'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'discussion': { name: 'discussion'; type: { kind: 'OBJECT'; name: 'Discussion'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'NoteID'; ofType: null; }; } }; 'internal': { name: 'internal'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'lastEditedAt': { name: 'lastEditedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'lastEditedBy': { name: 'lastEditedBy'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'maxAccessLevelOfAuthor': { name: 'maxAccessLevelOfAuthor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'position': { name: 'position'; type: { kind: 'OBJECT'; name: 'DiffPosition'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'resolvable': { name: 'resolvable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'resolved': { name: 'resolved'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'resolvedAt': { name: 'resolvedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'resolvedBy': { name: 'resolvedBy'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'system': { name: 'system'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'systemNoteIconName': { name: 'systemNoteIconName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'systemNoteMetadata': { name: 'systemNoteMetadata'; type: { kind: 'OBJECT'; name: 'SystemNoteMetadata'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NotePermissions'; ofType: null; }; } }; }; };
    'NoteConnection': { kind: 'OBJECT'; name: 'NoteConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'NoteEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Note'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'NoteEdge': { kind: 'OBJECT'; name: 'NoteEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Note'; ofType: null; } }; }; };
    'NoteID': unknown;
    'NotePermissions': { kind: 'OBJECT'; name: 'NotePermissions'; fields: { 'adminNote': { name: 'adminNote'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'awardEmoji': { name: 'awardEmoji'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createNote': { name: 'createNote'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readNote': { name: 'readNote'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'repositionNote': { name: 'repositionNote'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'resolveNote': { name: 'resolveNote'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'NoteableID': unknown;
    'NoteableInterface': { kind: 'INTERFACE'; name: 'NoteableInterface'; fields: { 'commenters': { name: 'commenters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; }; } }; 'discussions': { name: 'discussions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscussionConnection'; ofType: null; }; } }; 'notes': { name: 'notes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NoteConnection'; ofType: null; }; } }; }; possibleTypes: 'AbuseReport' | 'AlertManagementAlert' | 'BoardEpic' | 'Design' | 'Epic' | 'EpicIssue' | 'Issue' | 'MergeRequest' | 'Snippet' | 'Vulnerability'; };
    'NoteableType': { kind: 'UNION'; name: 'NoteableType'; fields: {}; possibleTypes: 'Design' | 'Issue' | 'MergeRequest'; };
    'NotesFilterType': { kind: 'ENUM'; name: 'NotesFilterType'; type: 'ALL_NOTES' | 'ONLY_COMMENTS' | 'ONLY_ACTIVITY'; };
    'NugetDependencyLinkMetadata': { kind: 'OBJECT'; name: 'NugetDependencyLinkMetadata'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesNugetDependencyLinkMetadatumID'; ofType: null; }; } }; 'targetFramework': { name: 'targetFramework'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'NugetMetadata': { kind: 'OBJECT'; name: 'NugetMetadata'; fields: { 'iconUrl': { name: 'iconUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesNugetMetadatumID'; ofType: null; }; } }; 'licenseUrl': { name: 'licenseUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'projectUrl': { name: 'projectUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OncallParticipantType': { kind: 'OBJECT'; name: 'OncallParticipantType'; fields: { 'colorPalette': { name: 'colorPalette'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'colorWeight': { name: 'colorWeight'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IncidentManagementOncallParticipantID'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; }; };
    'OncallParticipantTypeConnection': { kind: 'OBJECT'; name: 'OncallParticipantTypeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'OncallParticipantTypeEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'OncallParticipantType'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'OncallParticipantTypeEdge': { kind: 'OBJECT'; name: 'OncallParticipantTypeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'OncallParticipantType'; ofType: null; } }; }; };
    'OncallRotationActivePeriodInputType': { kind: 'INPUT_OBJECT'; name: 'OncallRotationActivePeriodInputType'; inputFields: [{ name: 'startTime'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'endTime'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'OncallRotationActivePeriodType': { kind: 'OBJECT'; name: 'OncallRotationActivePeriodType'; fields: { 'endTime': { name: 'endTime'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'startTime': { name: 'startTime'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OncallRotationCreateInput': { kind: 'INPUT_OBJECT'; name: 'OncallRotationCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'scheduleIid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'startsAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OncallRotationDateInputType'; ofType: null; }; }; defaultValue: null }, { name: 'endsAt'; type: { kind: 'INPUT_OBJECT'; name: 'OncallRotationDateInputType'; ofType: null; }; defaultValue: null }, { name: 'rotationLength'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OncallRotationLengthInputType'; ofType: null; }; }; defaultValue: null }, { name: 'activePeriod'; type: { kind: 'INPUT_OBJECT'; name: 'OncallRotationActivePeriodInputType'; ofType: null; }; defaultValue: null }, { name: 'participants'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OncallUserInputType'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'OncallRotationCreatePayload': { kind: 'OBJECT'; name: 'OncallRotationCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'oncallRotation': { name: 'oncallRotation'; type: { kind: 'OBJECT'; name: 'IncidentManagementOncallRotation'; ofType: null; } }; }; };
    'OncallRotationDateInputType': { kind: 'INPUT_OBJECT'; name: 'OncallRotationDateInputType'; inputFields: [{ name: 'date'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'time'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'OncallRotationDestroyInput': { kind: 'INPUT_OBJECT'; name: 'OncallRotationDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'scheduleIid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IncidentManagementOncallRotationID'; ofType: null; }; }; defaultValue: null }]; };
    'OncallRotationDestroyPayload': { kind: 'OBJECT'; name: 'OncallRotationDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'oncallRotation': { name: 'oncallRotation'; type: { kind: 'OBJECT'; name: 'IncidentManagementOncallRotation'; ofType: null; } }; }; };
    'OncallRotationLengthInputType': { kind: 'INPUT_OBJECT'; name: 'OncallRotationLengthInputType'; inputFields: [{ name: 'length'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'unit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OncallRotationUnitEnum'; ofType: null; }; }; defaultValue: null }]; };
    'OncallRotationUnitEnum': { kind: 'ENUM'; name: 'OncallRotationUnitEnum'; type: 'HOURS' | 'DAYS' | 'WEEKS'; };
    'OncallRotationUpdateInput': { kind: 'INPUT_OBJECT'; name: 'OncallRotationUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IncidentManagementOncallRotationID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'startsAt'; type: { kind: 'INPUT_OBJECT'; name: 'OncallRotationDateInputType'; ofType: null; }; defaultValue: null }, { name: 'endsAt'; type: { kind: 'INPUT_OBJECT'; name: 'OncallRotationDateInputType'; ofType: null; }; defaultValue: null }, { name: 'rotationLength'; type: { kind: 'INPUT_OBJECT'; name: 'OncallRotationLengthInputType'; ofType: null; }; defaultValue: null }, { name: 'activePeriod'; type: { kind: 'INPUT_OBJECT'; name: 'OncallRotationActivePeriodInputType'; ofType: null; }; defaultValue: null }, { name: 'participants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OncallUserInputType'; ofType: null; }; }; }; defaultValue: null }]; };
    'OncallRotationUpdatePayload': { kind: 'OBJECT'; name: 'OncallRotationUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'oncallRotation': { name: 'oncallRotation'; type: { kind: 'OBJECT'; name: 'IncidentManagementOncallRotation'; ofType: null; } }; }; };
    'OncallScheduleCreateInput': { kind: 'INPUT_OBJECT'; name: 'OncallScheduleCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'timezone'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'OncallScheduleCreatePayload': { kind: 'OBJECT'; name: 'OncallScheduleCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'oncallSchedule': { name: 'oncallSchedule'; type: { kind: 'OBJECT'; name: 'IncidentManagementOncallSchedule'; ofType: null; } }; }; };
    'OncallScheduleDestroyInput': { kind: 'INPUT_OBJECT'; name: 'OncallScheduleDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'OncallScheduleDestroyPayload': { kind: 'OBJECT'; name: 'OncallScheduleDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'oncallSchedule': { name: 'oncallSchedule'; type: { kind: 'OBJECT'; name: 'IncidentManagementOncallSchedule'; ofType: null; } }; }; };
    'OncallScheduleUpdateInput': { kind: 'INPUT_OBJECT'; name: 'OncallScheduleUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'timezone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'OncallScheduleUpdatePayload': { kind: 'OBJECT'; name: 'OncallScheduleUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'oncallSchedule': { name: 'oncallSchedule'; type: { kind: 'OBJECT'; name: 'IncidentManagementOncallSchedule'; ofType: null; } }; }; };
    'OncallUserInputType': { kind: 'INPUT_OBJECT'; name: 'OncallUserInputType'; inputFields: [{ name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'colorPalette'; type: { kind: 'ENUM'; name: 'DataVisualizationColorEnum'; ofType: null; }; defaultValue: null }, { name: 'colorWeight'; type: { kind: 'ENUM'; name: 'DataVisualizationWeightEnum'; ofType: null; }; defaultValue: null }]; };
    'OrchestrationPolicy': { kind: 'INTERFACE'; name: 'OrchestrationPolicy'; fields: { 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'editPath': { name: 'editPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'policyScope': { name: 'policyScope'; type: { kind: 'OBJECT'; name: 'PolicyScope'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'yaml': { name: 'yaml'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'ApprovalPolicy' | 'ScanExecutionPolicy' | 'ScanResultPolicy'; };
    'Organization': { kind: 'OBJECT'; name: 'Organization'; fields: { 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'groups': { name: 'groups'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupConnection'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organizationUsers': { name: 'organizationUsers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationUserConnection'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'projects': { name: 'projects'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'OrganizationConnection': { kind: 'OBJECT'; name: 'OrganizationConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Organization'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'OrganizationCreateInput': { kind: 'INPUT_OBJECT'; name: 'OrganizationCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'avatar'; type: { kind: 'SCALAR'; name: 'Upload'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'OrganizationCreatePayload': { kind: 'OBJECT'; name: 'OrganizationCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'organization': { name: 'organization'; type: { kind: 'OBJECT'; name: 'Organization'; ofType: null; } }; }; };
    'OrganizationEdge': { kind: 'OBJECT'; name: 'OrganizationEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Organization'; ofType: null; } }; }; };
    'OrganizationSort': { kind: 'ENUM'; name: 'OrganizationSort'; type: 'NAME_ASC' | 'NAME_DESC' | 'DESCRIPTION_ASC' | 'DESCRIPTION_DESC' | 'DEFAULT_RATE_ASC' | 'DEFAULT_RATE_DESC' | 'updated_desc' | 'updated_asc' | 'created_desc' | 'created_asc' | 'UPDATED_DESC' | 'UPDATED_ASC' | 'CREATED_DESC' | 'CREATED_ASC'; };
    'OrganizationStateCounts': { kind: 'OBJECT'; name: 'OrganizationStateCounts'; fields: { 'active': { name: 'active'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'all': { name: 'all'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'inactive': { name: 'inactive'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'OrganizationUpdateInput': { kind: 'INPUT_OBJECT'; name: 'OrganizationUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'avatar'; type: { kind: 'SCALAR'; name: 'Upload'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'OrganizationsOrganizationID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'OrganizationUpdatePayload': { kind: 'OBJECT'; name: 'OrganizationUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'organization': { name: 'organization'; type: { kind: 'OBJECT'; name: 'Organization'; ofType: null; } }; }; };
    'OrganizationUser': { kind: 'OBJECT'; name: 'OrganizationUser'; fields: { 'badges': { name: 'badges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationUserBadge'; ofType: null; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; }; };
    'OrganizationUserBadge': { kind: 'OBJECT'; name: 'OrganizationUserBadge'; fields: { 'text': { name: 'text'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'variant': { name: 'variant'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'OrganizationUserConnection': { kind: 'OBJECT'; name: 'OrganizationUserConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationUserEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'OrganizationUser'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'OrganizationUserEdge': { kind: 'OBJECT'; name: 'OrganizationUserEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'OrganizationUser'; ofType: null; } }; }; };
    'OrganizationsOrganizationID': unknown;
    'Package': { kind: 'OBJECT'; name: 'Package'; fields: { '_links': { name: '_links'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageLinks'; ofType: null; }; } }; 'canDestroy': { name: 'canDestroy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesPackageID'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'UNION'; name: 'PackageMetadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'packageType': { name: 'packageType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PackageTypeEnum'; ofType: null; }; } }; 'pipelines': { name: 'pipelines'; type: { kind: 'OBJECT'; name: 'PipelineConnection'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PackageStatus'; ofType: null; }; } }; 'statusMessage': { name: 'statusMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tags': { name: 'tags'; type: { kind: 'OBJECT'; name: 'PackageTagConnection'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PackagePermissions'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PackageBase': { kind: 'OBJECT'; name: 'PackageBase'; fields: { '_links': { name: '_links'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageLinks'; ofType: null; }; } }; 'canDestroy': { name: 'canDestroy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesPackageID'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'UNION'; name: 'PackageMetadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'packageType': { name: 'packageType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PackageTypeEnum'; ofType: null; }; } }; 'project': { name: 'project'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PackageStatus'; ofType: null; }; } }; 'statusMessage': { name: 'statusMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tags': { name: 'tags'; type: { kind: 'OBJECT'; name: 'PackageTagConnection'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PackagePermissions'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PackageBaseConnection': { kind: 'OBJECT'; name: 'PackageBaseConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageBaseEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageBase'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PackageBaseEdge': { kind: 'OBJECT'; name: 'PackageBaseEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'PackageBase'; ofType: null; } }; }; };
    'PackageComposerJsonType': { kind: 'OBJECT'; name: 'PackageComposerJsonType'; fields: { 'license': { name: 'license'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PackageConnection': { kind: 'OBJECT'; name: 'PackageConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Package'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PackageDependency': { kind: 'OBJECT'; name: 'PackageDependency'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesDependencyID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'versionPattern': { name: 'versionPattern'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PackageDependencyLink': { kind: 'OBJECT'; name: 'PackageDependencyLink'; fields: { 'dependency': { name: 'dependency'; type: { kind: 'OBJECT'; name: 'PackageDependency'; ofType: null; } }; 'dependencyType': { name: 'dependencyType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PackageDependencyType'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesDependencyLinkID'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'UNION'; name: 'DependencyLinkMetadata'; ofType: null; } }; }; };
    'PackageDependencyLinkConnection': { kind: 'OBJECT'; name: 'PackageDependencyLinkConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageDependencyLinkEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageDependencyLink'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PackageDependencyLinkEdge': { kind: 'OBJECT'; name: 'PackageDependencyLinkEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'PackageDependencyLink'; ofType: null; } }; }; };
    'PackageDependencyType': { kind: 'ENUM'; name: 'PackageDependencyType'; type: 'DEPENDENCIES' | 'DEV_DEPENDENCIES' | 'BUNDLE_DEPENDENCIES' | 'PEER_DEPENDENCIES'; };
    'PackageDetailsType': { kind: 'OBJECT'; name: 'PackageDetailsType'; fields: { '_links': { name: '_links'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageLinks'; ofType: null; }; } }; 'canDestroy': { name: 'canDestroy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'composerConfigRepositoryUrl': { name: 'composerConfigRepositoryUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'composerUrl': { name: 'composerUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'conanUrl': { name: 'conanUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'dependencyLinks': { name: 'dependencyLinks'; type: { kind: 'OBJECT'; name: 'PackageDependencyLinkConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesPackageID'; ofType: null; }; } }; 'lastDownloadedAt': { name: 'lastDownloadedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'mavenUrl': { name: 'mavenUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'UNION'; name: 'PackageMetadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'npmUrl': { name: 'npmUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'nugetUrl': { name: 'nugetUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'packageFiles': { name: 'packageFiles'; type: { kind: 'OBJECT'; name: 'PackageFileConnection'; ofType: null; } }; 'packageType': { name: 'packageType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PackageTypeEnum'; ofType: null; }; } }; 'pipelines': { name: 'pipelines'; type: { kind: 'OBJECT'; name: 'PipelineConnection'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; } }; 'publicPackage': { name: 'publicPackage'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'pypiSetupUrl': { name: 'pypiSetupUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'pypiUrl': { name: 'pypiUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PackageStatus'; ofType: null; }; } }; 'statusMessage': { name: 'statusMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tags': { name: 'tags'; type: { kind: 'OBJECT'; name: 'PackageTagConnection'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PackagePermissions'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'versions': { name: 'versions'; type: { kind: 'OBJECT'; name: 'PackageBaseConnection'; ofType: null; } }; }; };
    'PackageEdge': { kind: 'OBJECT'; name: 'PackageEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Package'; ofType: null; } }; }; };
    'PackageFile': { kind: 'OBJECT'; name: 'PackageFile'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'downloadPath': { name: 'downloadPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'fileMd5': { name: 'fileMd5'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fileMetadata': { name: 'fileMetadata'; type: { kind: 'INTERFACE'; name: 'PackageFileMetadata'; ofType: null; } }; 'fileName': { name: 'fileName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'fileSha1': { name: 'fileSha1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fileSha256': { name: 'fileSha256'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesPackageFileID'; ofType: null; }; } }; 'size': { name: 'size'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'PackageFileConnection': { kind: 'OBJECT'; name: 'PackageFileConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageFileEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageFile'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PackageFileEdge': { kind: 'OBJECT'; name: 'PackageFileEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'PackageFile'; ofType: null; } }; }; };
    'PackageFileMetadata': { kind: 'INTERFACE'; name: 'PackageFileMetadata'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; possibleTypes: 'ConanFileMetadata' | 'HelmFileMetadata'; };
    'PackageFileRegistry': { kind: 'OBJECT'; name: 'PackageFileRegistry'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSyncFailure': { name: 'lastSyncFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSyncedAt': { name: 'lastSyncedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'packageFileId': { name: 'packageFileId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'retryAt': { name: 'retryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryCount': { name: 'retryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'RegistryState'; ofType: null; } }; 'verificationChecksum': { name: 'verificationChecksum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationFailure': { name: 'verificationFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationRetryAt': { name: 'verificationRetryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationRetryCount': { name: 'verificationRetryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'verificationStartedAt': { name: 'verificationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationState': { name: 'verificationState'; type: { kind: 'ENUM'; name: 'VerificationStateEnum'; ofType: null; } }; 'verifiedAt': { name: 'verifiedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'PackageFileRegistryConnection': { kind: 'OBJECT'; name: 'PackageFileRegistryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageFileRegistryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageFileRegistry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PackageFileRegistryEdge': { kind: 'OBJECT'; name: 'PackageFileRegistryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'PackageFileRegistry'; ofType: null; } }; }; };
    'PackageGroupSort': { kind: 'ENUM'; name: 'PackageGroupSort'; type: 'PROJECT_PATH_DESC' | 'PROJECT_PATH_ASC' | 'CREATED_DESC' | 'CREATED_ASC' | 'NAME_DESC' | 'NAME_ASC' | 'VERSION_DESC' | 'VERSION_ASC' | 'TYPE_DESC' | 'TYPE_ASC'; };
    'PackageHelmDependencyType': { kind: 'OBJECT'; name: 'PackageHelmDependencyType'; fields: { 'alias': { name: 'alias'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'condition': { name: 'condition'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'enabled': { name: 'enabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'importValues': { name: 'importValues'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'repository': { name: 'repository'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tags': { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PackageHelmMaintainerType': { kind: 'OBJECT'; name: 'PackageHelmMaintainerType'; fields: { 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PackageHelmMetadataType': { kind: 'OBJECT'; name: 'PackageHelmMetadataType'; fields: { 'annotations': { name: 'annotations'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'apiVersion': { name: 'apiVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'appVersion': { name: 'appVersion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'condition': { name: 'condition'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dependencies': { name: 'dependencies'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageHelmDependencyType'; ofType: null; }; }; } }; 'deprecated': { name: 'deprecated'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'home': { name: 'home'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'icon': { name: 'icon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'keywords': { name: 'keywords'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'kubeVersion': { name: 'kubeVersion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'maintainers': { name: 'maintainers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageHelmMaintainerType'; ofType: null; }; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sources': { name: 'sources'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'tags': { name: 'tags'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PackageLinks': { kind: 'OBJECT'; name: 'PackageLinks'; fields: { 'webPath': { name: 'webPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PackageManager': { kind: 'ENUM'; name: 'PackageManager'; type: 'BUNDLER' | 'YARN' | 'NPM' | 'PNPM' | 'MAVEN' | 'COMPOSER' | 'PIP' | 'CONAN' | 'GO' | 'NUGET' | 'SBT' | 'GRADLE' | 'PIPENV' | 'POETRY' | 'SETUPTOOLS'; };
    'PackageMetadata': { kind: 'UNION'; name: 'PackageMetadata'; fields: {}; possibleTypes: 'ComposerMetadata' | 'ConanMetadata' | 'MavenMetadata' | 'NugetMetadata' | 'PypiMetadata'; };
    'PackagePermissions': { kind: 'OBJECT'; name: 'PackagePermissions'; fields: { 'destroyPackage': { name: 'destroyPackage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'PackageSettings': { kind: 'OBJECT'; name: 'PackageSettings'; fields: { 'genericDuplicateExceptionRegex': { name: 'genericDuplicateExceptionRegex'; type: { kind: 'SCALAR'; name: 'UntrustedRegexp'; ofType: null; } }; 'genericDuplicatesAllowed': { name: 'genericDuplicatesAllowed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'lockMavenPackageRequestsForwarding': { name: 'lockMavenPackageRequestsForwarding'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'lockNpmPackageRequestsForwarding': { name: 'lockNpmPackageRequestsForwarding'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'lockPypiPackageRequestsForwarding': { name: 'lockPypiPackageRequestsForwarding'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'mavenDuplicateExceptionRegex': { name: 'mavenDuplicateExceptionRegex'; type: { kind: 'SCALAR'; name: 'UntrustedRegexp'; ofType: null; } }; 'mavenDuplicatesAllowed': { name: 'mavenDuplicatesAllowed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'mavenPackageRequestsForwarding': { name: 'mavenPackageRequestsForwarding'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'mavenPackageRequestsForwardingLocked': { name: 'mavenPackageRequestsForwardingLocked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'npmPackageRequestsForwarding': { name: 'npmPackageRequestsForwarding'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'npmPackageRequestsForwardingLocked': { name: 'npmPackageRequestsForwardingLocked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'nugetDuplicateExceptionRegex': { name: 'nugetDuplicateExceptionRegex'; type: { kind: 'SCALAR'; name: 'UntrustedRegexp'; ofType: null; } }; 'nugetDuplicatesAllowed': { name: 'nugetDuplicatesAllowed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'nugetSymbolServerEnabled': { name: 'nugetSymbolServerEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'pypiPackageRequestsForwarding': { name: 'pypiPackageRequestsForwarding'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'pypiPackageRequestsForwardingLocked': { name: 'pypiPackageRequestsForwardingLocked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'terraformModuleDuplicateExceptionRegex': { name: 'terraformModuleDuplicateExceptionRegex'; type: { kind: 'SCALAR'; name: 'UntrustedRegexp'; ofType: null; } }; 'terraformModuleDuplicatesAllowed': { name: 'terraformModuleDuplicatesAllowed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'PackageSort': { kind: 'ENUM'; name: 'PackageSort'; type: 'CREATED_DESC' | 'CREATED_ASC' | 'NAME_DESC' | 'NAME_ASC' | 'VERSION_DESC' | 'VERSION_ASC' | 'TYPE_DESC' | 'TYPE_ASC'; };
    'PackageStatus': { kind: 'ENUM'; name: 'PackageStatus'; type: 'DEFAULT' | 'HIDDEN' | 'PROCESSING' | 'ERROR' | 'PENDING_DESTRUCTION'; };
    'PackageTag': { kind: 'OBJECT'; name: 'PackageTag'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'PackageTagConnection': { kind: 'OBJECT'; name: 'PackageTagConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageTagEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PackageTag'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PackageTagEdge': { kind: 'OBJECT'; name: 'PackageTagEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'PackageTag'; ofType: null; } }; }; };
    'PackageTypeEnum': { kind: 'ENUM'; name: 'PackageTypeEnum'; type: 'MAVEN' | 'NPM' | 'CONAN' | 'NUGET' | 'PYPI' | 'COMPOSER' | 'GENERIC' | 'GOLANG' | 'DEBIAN' | 'RUBYGEMS' | 'HELM' | 'TERRAFORM_MODULE' | 'RPM' | 'ML_MODEL'; };
    'PackagesCleanupKeepDuplicatedPackageFilesEnum': { kind: 'ENUM'; name: 'PackagesCleanupKeepDuplicatedPackageFilesEnum'; type: 'ALL_PACKAGE_FILES' | 'ONE_PACKAGE_FILE' | 'TEN_PACKAGE_FILES' | 'TWENTY_PACKAGE_FILES' | 'THIRTY_PACKAGE_FILES' | 'FORTY_PACKAGE_FILES' | 'FIFTY_PACKAGE_FILES'; };
    'PackagesCleanupPolicy': { kind: 'OBJECT'; name: 'PackagesCleanupPolicy'; fields: { 'keepNDuplicatedPackageFiles': { name: 'keepNDuplicatedPackageFiles'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PackagesCleanupKeepDuplicatedPackageFilesEnum'; ofType: null; }; } }; 'nextRunAt': { name: 'nextRunAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'PackagesConanFileMetadatumID': unknown;
    'PackagesConanMetadatumID': unknown;
    'PackagesDependencyID': unknown;
    'PackagesDependencyLinkID': unknown;
    'PackagesMavenMetadatumID': unknown;
    'PackagesNugetDependencyLinkMetadatumID': unknown;
    'PackagesNugetMetadatumID': unknown;
    'PackagesPackageFileID': unknown;
    'PackagesPackageID': unknown;
    'PackagesProtectionRule': { kind: 'OBJECT'; name: 'PackagesProtectionRule'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesProtectionRuleID'; ofType: null; }; } }; 'packageNamePattern': { name: 'packageNamePattern'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'packageType': { name: 'packageType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PackagesProtectionRulePackageType'; ofType: null; }; } }; 'pushProtectedUpToAccessLevel': { name: 'pushProtectedUpToAccessLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PackagesProtectionRuleAccessLevel'; ofType: null; }; } }; }; };
    'PackagesProtectionRuleAccessLevel': { kind: 'ENUM'; name: 'PackagesProtectionRuleAccessLevel'; type: 'DEVELOPER' | 'MAINTAINER' | 'OWNER'; };
    'PackagesProtectionRuleConnection': { kind: 'OBJECT'; name: 'PackagesProtectionRuleConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PackagesProtectionRuleEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PackagesProtectionRule'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PackagesProtectionRuleEdge': { kind: 'OBJECT'; name: 'PackagesProtectionRuleEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'PackagesProtectionRule'; ofType: null; } }; }; };
    'PackagesProtectionRuleID': unknown;
    'PackagesProtectionRulePackageType': { kind: 'ENUM'; name: 'PackagesProtectionRulePackageType'; type: 'NPM'; };
    'PackagesPypiMetadatumID': unknown;
    'PageInfo': { kind: 'OBJECT'; name: 'PageInfo'; fields: { 'endCursor': { name: 'endCursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hasNextPage': { name: 'hasNextPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasPreviousPage': { name: 'hasPreviousPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'startCursor': { name: 'startCursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PagesDeploymentRegistry': { kind: 'OBJECT'; name: 'PagesDeploymentRegistry'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSyncFailure': { name: 'lastSyncFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSyncedAt': { name: 'lastSyncedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'pagesDeploymentId': { name: 'pagesDeploymentId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'retryAt': { name: 'retryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryCount': { name: 'retryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'RegistryState'; ofType: null; } }; 'verificationChecksum': { name: 'verificationChecksum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationFailure': { name: 'verificationFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationRetryAt': { name: 'verificationRetryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationRetryCount': { name: 'verificationRetryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'verificationStartedAt': { name: 'verificationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationState': { name: 'verificationState'; type: { kind: 'ENUM'; name: 'VerificationStateEnum'; ofType: null; } }; 'verifiedAt': { name: 'verifiedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'PagesDeploymentRegistryConnection': { kind: 'OBJECT'; name: 'PagesDeploymentRegistryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PagesDeploymentRegistryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PagesDeploymentRegistry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PagesDeploymentRegistryEdge': { kind: 'OBJECT'; name: 'PagesDeploymentRegistryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'PagesDeploymentRegistry'; ofType: null; } }; }; };
    'PagesMarkOnboardingCompleteInput': { kind: 'INPUT_OBJECT'; name: 'PagesMarkOnboardingCompleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'PagesMarkOnboardingCompletePayload': { kind: 'OBJECT'; name: 'PagesMarkOnboardingCompletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'onboardingComplete': { name: 'onboardingComplete'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'PathLock': { kind: 'OBJECT'; name: 'PathLock'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PathLockID'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; }; };
    'PathLockConnection': { kind: 'OBJECT'; name: 'PathLockConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PathLockEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PathLock'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PathLockEdge': { kind: 'OBJECT'; name: 'PathLockEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'PathLock'; ofType: null; } }; }; };
    'PathLockID': unknown;
    'PayloadAlertFieldPathSegment': unknown;
    'PendingGroupMember': { kind: 'OBJECT'; name: 'PendingGroupMember'; fields: { 'accessLevel': { name: 'accessLevel'; type: { kind: 'OBJECT'; name: 'AccessLevel'; ofType: null; } }; 'approved': { name: 'approved'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'createdBy': { name: 'createdBy'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'expiresAt': { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'group': { name: 'group'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'invited': { name: 'invited'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'mergeRequestInteraction': { name: 'mergeRequestInteraction'; type: { kind: 'OBJECT'; name: 'UserMergeRequestInteraction'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'notificationEmail': { name: 'notificationEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupPermissions'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PendingGroupMemberConnection': { kind: 'OBJECT'; name: 'PendingGroupMemberConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PendingGroupMemberEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PendingGroupMember'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PendingGroupMemberEdge': { kind: 'OBJECT'; name: 'PendingGroupMemberEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'PendingGroupMember'; ofType: null; } }; }; };
    'Pipeline': { kind: 'OBJECT'; name: 'Pipeline'; fields: { 'active': { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'beforeSha': { name: 'beforeSha'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'cancelable': { name: 'cancelable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'child': { name: 'child'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'codeQualityReportSummary': { name: 'codeQualityReportSummary'; type: { kind: 'OBJECT'; name: 'CodeQualityReportSummary'; ofType: null; } }; 'codeQualityReports': { name: 'codeQualityReports'; type: { kind: 'OBJECT'; name: 'CodeQualityDegradationConnection'; ofType: null; } }; 'commit': { name: 'commit'; type: { kind: 'OBJECT'; name: 'Commit'; ofType: null; } }; 'commitPath': { name: 'commitPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'committedAt': { name: 'committedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'complete': { name: 'complete'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'computeMinutes': { name: 'computeMinutes'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'configSource': { name: 'configSource'; type: { kind: 'ENUM'; name: 'PipelineConfigSourceEnum'; ofType: null; } }; 'coverage': { name: 'coverage'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'dastProfile': { name: 'dastProfile'; type: { kind: 'OBJECT'; name: 'DastProfile'; ofType: null; } }; 'detailedStatus': { name: 'detailedStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DetailedStatus'; ofType: null; }; } }; 'downstream': { name: 'downstream'; type: { kind: 'OBJECT'; name: 'PipelineConnection'; ofType: null; } }; 'duration': { name: 'duration'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'failureReason': { name: 'failureReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'finishedAt': { name: 'finishedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'iid': { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'CiJob'; ofType: null; } }; 'jobArtifacts': { name: 'jobArtifacts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CiJobArtifact'; ofType: null; }; }; } }; 'jobs': { name: 'jobs'; type: { kind: 'OBJECT'; name: 'CiJobConnection'; ofType: null; } }; 'latest': { name: 'latest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; 'mergeRequestEventType': { name: 'mergeRequestEventType'; type: { kind: 'ENUM'; name: 'PipelineMergeRequestEventType'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'queuedDuration': { name: 'queuedDuration'; type: { kind: 'SCALAR'; name: 'Duration'; ofType: null; } }; 'ref': { name: 'ref'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'refPath': { name: 'refPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'refText': { name: 'refText'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'retryable': { name: 'retryable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'securityReportFinding': { name: 'securityReportFinding'; type: { kind: 'OBJECT'; name: 'PipelineSecurityReportFinding'; ofType: null; } }; 'securityReportFindings': { name: 'securityReportFindings'; type: { kind: 'OBJECT'; name: 'PipelineSecurityReportFindingConnection'; ofType: null; } }; 'securityReportSummary': { name: 'securityReportSummary'; type: { kind: 'OBJECT'; name: 'SecurityReportSummary'; ofType: null; } }; 'sha': { name: 'sha'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'source': { name: 'source'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'sourceJob': { name: 'sourceJob'; type: { kind: 'OBJECT'; name: 'CiJob'; ofType: null; } }; 'stages': { name: 'stages'; type: { kind: 'OBJECT'; name: 'CiStageConnection'; ofType: null; } }; 'startedAt': { name: 'startedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PipelineStatusEnum'; ofType: null; }; } }; 'stuck': { name: 'stuck'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'testReportSummary': { name: 'testReportSummary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TestReportSummary'; ofType: null; }; } }; 'testSuite': { name: 'testSuite'; type: { kind: 'OBJECT'; name: 'TestSuite'; ofType: null; } }; 'totalJobs': { name: 'totalJobs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'trigger': { name: 'trigger'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'triggeredByPath': { name: 'triggeredByPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'upstream': { name: 'upstream'; type: { kind: 'OBJECT'; name: 'Pipeline'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PipelinePermissions'; ofType: null; }; } }; 'usesNeeds': { name: 'usesNeeds'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'warningMessages': { name: 'warningMessages'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PipelineMessage'; ofType: null; }; }; } }; 'warnings': { name: 'warnings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'yamlErrorMessages': { name: 'yamlErrorMessages'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'yamlErrors': { name: 'yamlErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'PipelineAnalytics': { kind: 'OBJECT'; name: 'PipelineAnalytics'; fields: { 'monthPipelinesLabels': { name: 'monthPipelinesLabels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'monthPipelinesSuccessful': { name: 'monthPipelinesSuccessful'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; } }; 'monthPipelinesTotals': { name: 'monthPipelinesTotals'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; } }; 'pipelineTimesLabels': { name: 'pipelineTimesLabels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'pipelineTimesValues': { name: 'pipelineTimesValues'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; } }; 'weekPipelinesLabels': { name: 'weekPipelinesLabels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'weekPipelinesSuccessful': { name: 'weekPipelinesSuccessful'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; } }; 'weekPipelinesTotals': { name: 'weekPipelinesTotals'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; } }; 'yearPipelinesLabels': { name: 'yearPipelinesLabels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'yearPipelinesSuccessful': { name: 'yearPipelinesSuccessful'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; } }; 'yearPipelinesTotals': { name: 'yearPipelinesTotals'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; } }; }; };
    'PipelineArtifactRegistry': { kind: 'OBJECT'; name: 'PipelineArtifactRegistry'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSyncFailure': { name: 'lastSyncFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSyncedAt': { name: 'lastSyncedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'pipelineArtifactId': { name: 'pipelineArtifactId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'retryAt': { name: 'retryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryCount': { name: 'retryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'RegistryState'; ofType: null; } }; 'verificationChecksum': { name: 'verificationChecksum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationFailure': { name: 'verificationFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationRetryAt': { name: 'verificationRetryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationRetryCount': { name: 'verificationRetryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'verificationStartedAt': { name: 'verificationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationState': { name: 'verificationState'; type: { kind: 'ENUM'; name: 'VerificationStateEnum'; ofType: null; } }; 'verifiedAt': { name: 'verifiedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'PipelineArtifactRegistryConnection': { kind: 'OBJECT'; name: 'PipelineArtifactRegistryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PipelineArtifactRegistryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PipelineArtifactRegistry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PipelineArtifactRegistryEdge': { kind: 'OBJECT'; name: 'PipelineArtifactRegistryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'PipelineArtifactRegistry'; ofType: null; } }; }; };
    'PipelineCancelInput': { kind: 'INPUT_OBJECT'; name: 'PipelineCancelInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiPipelineID'; ofType: null; }; }; defaultValue: null }]; };
    'PipelineCancelPayload': { kind: 'OBJECT'; name: 'PipelineCancelPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'PipelineConfigSourceEnum': { kind: 'ENUM'; name: 'PipelineConfigSourceEnum'; type: 'UNKNOWN_SOURCE' | 'REPOSITORY_SOURCE' | 'AUTO_DEVOPS_SOURCE' | 'WEBIDE_SOURCE' | 'REMOTE_SOURCE' | 'EXTERNAL_PROJECT_SOURCE' | 'BRIDGE_SOURCE' | 'PARAMETER_SOURCE' | 'COMPLIANCE_SOURCE' | 'SECURITY_POLICIES_DEFAULT_SOURCE'; };
    'PipelineConnection': { kind: 'OBJECT'; name: 'PipelineConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PipelineEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Pipeline'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PipelineCounts': { kind: 'OBJECT'; name: 'PipelineCounts'; fields: { 'all': { name: 'all'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'finished': { name: 'finished'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'pending': { name: 'pending'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'running': { name: 'running'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'PipelineDestroyInput': { kind: 'INPUT_OBJECT'; name: 'PipelineDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiPipelineID'; ofType: null; }; }; defaultValue: null }]; };
    'PipelineDestroyPayload': { kind: 'OBJECT'; name: 'PipelineDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'PipelineEdge': { kind: 'OBJECT'; name: 'PipelineEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Pipeline'; ofType: null; } }; }; };
    'PipelineMergeRequestEventType': { kind: 'ENUM'; name: 'PipelineMergeRequestEventType'; type: 'MERGED_RESULT' | 'DETACHED' | 'MERGE_TRAIN'; };
    'PipelineMessage': { kind: 'OBJECT'; name: 'PipelineMessage'; fields: { 'content': { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'PipelinePermissions': { kind: 'OBJECT'; name: 'PipelinePermissions'; fields: { 'adminPipeline': { name: 'adminPipeline'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'cancelPipeline': { name: 'cancelPipeline'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'destroyPipeline': { name: 'destroyPipeline'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updatePipeline': { name: 'updatePipeline'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'PipelineRetryInput': { kind: 'INPUT_OBJECT'; name: 'PipelineRetryInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiPipelineID'; ofType: null; }; }; defaultValue: null }]; };
    'PipelineRetryPayload': { kind: 'OBJECT'; name: 'PipelineRetryPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'pipeline': { name: 'pipeline'; type: { kind: 'OBJECT'; name: 'Pipeline'; ofType: null; } }; }; };
    'PipelineSchedule': { kind: 'OBJECT'; name: 'PipelineSchedule'; fields: { 'active': { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'cron': { name: 'cron'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'cronTimezone': { name: 'cronTimezone'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'editPath': { name: 'editPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'forTag': { name: 'forTag'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastPipeline': { name: 'lastPipeline'; type: { kind: 'OBJECT'; name: 'Pipeline'; ofType: null; } }; 'nextRunAt': { name: 'nextRunAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'owner': { name: 'owner'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'realNextRun': { name: 'realNextRun'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'ref': { name: 'ref'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'refForDisplay': { name: 'refForDisplay'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'refPath': { name: 'refPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PipelineSchedulePermissions'; ofType: null; }; } }; 'variables': { name: 'variables'; type: { kind: 'OBJECT'; name: 'PipelineScheduleVariableConnection'; ofType: null; } }; }; };
    'PipelineScheduleConnection': { kind: 'OBJECT'; name: 'PipelineScheduleConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PipelineScheduleEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PipelineSchedule'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PipelineScheduleCreateInput': { kind: 'INPUT_OBJECT'; name: 'PipelineScheduleCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'cron'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'cronTimezone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ref'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'variables'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PipelineScheduleVariableInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'PipelineScheduleCreatePayload': { kind: 'OBJECT'; name: 'PipelineScheduleCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'pipelineSchedule': { name: 'pipelineSchedule'; type: { kind: 'OBJECT'; name: 'PipelineSchedule'; ofType: null; } }; }; };
    'PipelineScheduleDeleteInput': { kind: 'INPUT_OBJECT'; name: 'PipelineScheduleDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiPipelineScheduleID'; ofType: null; }; }; defaultValue: null }]; };
    'PipelineScheduleDeletePayload': { kind: 'OBJECT'; name: 'PipelineScheduleDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'PipelineScheduleEdge': { kind: 'OBJECT'; name: 'PipelineScheduleEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'PipelineSchedule'; ofType: null; } }; }; };
    'PipelineSchedulePermissions': { kind: 'OBJECT'; name: 'PipelineSchedulePermissions'; fields: { 'adminPipelineSchedule': { name: 'adminPipelineSchedule'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'playPipelineSchedule': { name: 'playPipelineSchedule'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'takeOwnershipPipelineSchedule': { name: 'takeOwnershipPipelineSchedule'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updatePipelineSchedule': { name: 'updatePipelineSchedule'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'PipelineSchedulePlayInput': { kind: 'INPUT_OBJECT'; name: 'PipelineSchedulePlayInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiPipelineScheduleID'; ofType: null; }; }; defaultValue: null }]; };
    'PipelineSchedulePlayPayload': { kind: 'OBJECT'; name: 'PipelineSchedulePlayPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'pipelineSchedule': { name: 'pipelineSchedule'; type: { kind: 'OBJECT'; name: 'PipelineSchedule'; ofType: null; } }; }; };
    'PipelineScheduleStatus': { kind: 'ENUM'; name: 'PipelineScheduleStatus'; type: 'ACTIVE' | 'INACTIVE'; };
    'PipelineScheduleTakeOwnershipInput': { kind: 'INPUT_OBJECT'; name: 'PipelineScheduleTakeOwnershipInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiPipelineScheduleID'; ofType: null; }; }; defaultValue: null }]; };
    'PipelineScheduleTakeOwnershipPayload': { kind: 'OBJECT'; name: 'PipelineScheduleTakeOwnershipPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'pipelineSchedule': { name: 'pipelineSchedule'; type: { kind: 'OBJECT'; name: 'PipelineSchedule'; ofType: null; } }; }; };
    'PipelineScheduleUpdateInput': { kind: 'INPUT_OBJECT'; name: 'PipelineScheduleUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiPipelineScheduleID'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'cron'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'cronTimezone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ref'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'variables'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PipelineScheduleVariableInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'PipelineScheduleUpdatePayload': { kind: 'OBJECT'; name: 'PipelineScheduleUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'pipelineSchedule': { name: 'pipelineSchedule'; type: { kind: 'OBJECT'; name: 'PipelineSchedule'; ofType: null; } }; }; };
    'PipelineScheduleVariable': { kind: 'OBJECT'; name: 'PipelineScheduleVariable'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'key': { name: 'key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'raw': { name: 'raw'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'variableType': { name: 'variableType'; type: { kind: 'ENUM'; name: 'CiVariableType'; ofType: null; } }; }; };
    'PipelineScheduleVariableConnection': { kind: 'OBJECT'; name: 'PipelineScheduleVariableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PipelineScheduleVariableEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PipelineScheduleVariable'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PipelineScheduleVariableEdge': { kind: 'OBJECT'; name: 'PipelineScheduleVariableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'PipelineScheduleVariable'; ofType: null; } }; }; };
    'PipelineScheduleVariableInput': { kind: 'INPUT_OBJECT'; name: 'PipelineScheduleVariableInput'; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'CiPipelineScheduleVariableID'; ofType: null; }; defaultValue: null }, { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'variableType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CiVariableType'; ofType: null; }; }; defaultValue: null }, { name: 'destroy'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'PipelineScopeEnum': { kind: 'ENUM'; name: 'PipelineScopeEnum'; type: 'RUNNING' | 'PENDING' | 'FINISHED' | 'BRANCHES' | 'TAGS'; };
    'PipelineSecurityReportFinding': { kind: 'OBJECT'; name: 'PipelineSecurityReportFinding'; fields: { 'assets': { name: 'assets'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AssetType'; ofType: null; }; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'details': { name: 'details'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'VulnerabilityDetail'; ofType: null; }; }; }; } }; 'dismissalReason': { name: 'dismissalReason'; type: { kind: 'ENUM'; name: 'VulnerabilityDismissalReason'; ofType: null; } }; 'dismissedAt': { name: 'dismissedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'dismissedBy': { name: 'dismissedBy'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'evidence': { name: 'evidence'; type: { kind: 'OBJECT'; name: 'VulnerabilityEvidence'; ofType: null; } }; 'falsePositive': { name: 'falsePositive'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'identifiers': { name: 'identifiers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityIdentifier'; ofType: null; }; }; }; } }; 'issueLinks': { name: 'issueLinks'; type: { kind: 'OBJECT'; name: 'VulnerabilityIssueLinkConnection'; ofType: null; } }; 'links': { name: 'links'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityLink'; ofType: null; }; }; } }; 'location': { name: 'location'; type: { kind: 'UNION'; name: 'VulnerabilityLocation'; ofType: null; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'projectFingerprint': { name: 'projectFingerprint'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'remediations': { name: 'remediations'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityRemediationType'; ofType: null; }; }; } }; 'reportType': { name: 'reportType'; type: { kind: 'ENUM'; name: 'VulnerabilityReportType'; ofType: null; } }; 'scanner': { name: 'scanner'; type: { kind: 'OBJECT'; name: 'VulnerabilityScanner'; ofType: null; } }; 'severity': { name: 'severity'; type: { kind: 'ENUM'; name: 'VulnerabilitySeverity'; ofType: null; } }; 'solution': { name: 'solution'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'VulnerabilityState'; ofType: null; } }; 'stateComment': { name: 'stateComment'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PipelineSecurityReportFindingPermissions'; ofType: null; }; } }; 'uuid': { name: 'uuid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'vulnerability': { name: 'vulnerability'; type: { kind: 'OBJECT'; name: 'Vulnerability'; ofType: null; } }; }; };
    'PipelineSecurityReportFindingConnection': { kind: 'OBJECT'; name: 'PipelineSecurityReportFindingConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PipelineSecurityReportFindingEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PipelineSecurityReportFinding'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PipelineSecurityReportFindingEdge': { kind: 'OBJECT'; name: 'PipelineSecurityReportFindingEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'PipelineSecurityReportFinding'; ofType: null; } }; }; };
    'PipelineSecurityReportFindingPermissions': { kind: 'OBJECT'; name: 'PipelineSecurityReportFindingPermissions'; fields: { 'adminVulnerability': { name: 'adminVulnerability'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'PipelineSecurityReportFindingSort': { kind: 'ENUM'; name: 'PipelineSecurityReportFindingSort'; type: 'severity_desc' | 'severity_asc'; };
    'PipelineStatusEnum': { kind: 'ENUM'; name: 'PipelineStatusEnum'; type: 'CREATED' | 'WAITING_FOR_RESOURCE' | 'PREPARING' | 'WAITING_FOR_CALLBACK' | 'PENDING' | 'RUNNING' | 'FAILED' | 'SUCCESS' | 'CANCELING' | 'CANCELED' | 'SKIPPED' | 'MANUAL' | 'SCHEDULED'; };
    'PipelineTrigger': { kind: 'OBJECT'; name: 'PipelineTrigger'; fields: { 'canAccessProject': { name: 'canAccessProject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hasTokenExposed': { name: 'hasTokenExposed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastUsed': { name: 'lastUsed'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'owner': { name: 'owner'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; 'token': { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PipelineTriggerConnection': { kind: 'OBJECT'; name: 'PipelineTriggerConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PipelineTriggerEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PipelineTrigger'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PipelineTriggerCreateInput': { kind: 'INPUT_OBJECT'; name: 'PipelineTriggerCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'PipelineTriggerCreatePayload': { kind: 'OBJECT'; name: 'PipelineTriggerCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'pipelineTrigger': { name: 'pipelineTrigger'; type: { kind: 'OBJECT'; name: 'PipelineTrigger'; ofType: null; } }; }; };
    'PipelineTriggerDeleteInput': { kind: 'INPUT_OBJECT'; name: 'PipelineTriggerDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiTriggerID'; ofType: null; }; }; defaultValue: null }]; };
    'PipelineTriggerDeletePayload': { kind: 'OBJECT'; name: 'PipelineTriggerDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'PipelineTriggerEdge': { kind: 'OBJECT'; name: 'PipelineTriggerEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'PipelineTrigger'; ofType: null; } }; }; };
    'PipelineTriggerUpdateInput': { kind: 'INPUT_OBJECT'; name: 'PipelineTriggerUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiTriggerID'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'PipelineTriggerUpdatePayload': { kind: 'OBJECT'; name: 'PipelineTriggerUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'pipelineTrigger': { name: 'pipelineTrigger'; type: { kind: 'OBJECT'; name: 'PipelineTrigger'; ofType: null; } }; }; };
    'PolicyApprovalGroup': { kind: 'OBJECT'; name: 'PolicyApprovalGroup'; fields: { 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fullPath': { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PolicyScope': { kind: 'OBJECT'; name: 'PolicyScope'; fields: { 'complianceFrameworks': { name: 'complianceFrameworks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ComplianceFrameworkConnection'; ofType: null; }; } }; 'excludingProjects': { name: 'excludingProjects'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; }; } }; 'includingProjects': { name: 'includingProjects'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; }; } }; }; };
    'PreviewBillableUserChange': { kind: 'OBJECT'; name: 'PreviewBillableUserChange'; fields: { 'newBillableUserCount': { name: 'newBillableUserCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'seatsInSubscription': { name: 'seatsInSubscription'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'willIncreaseOverage': { name: 'willIncreaseOverage'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'ProductAnalyticsState': { kind: 'ENUM'; name: 'ProductAnalyticsState'; type: 'CREATE_INSTANCE' | 'LOADING_INSTANCE' | 'WAITING_FOR_EVENTS' | 'COMPLETE'; };
    'Project': { kind: 'OBJECT'; name: 'Project'; fields: { 'actualRepositorySizeLimit': { name: 'actualRepositorySizeLimit'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'agentConfigurations': { name: 'agentConfigurations'; type: { kind: 'OBJECT'; name: 'AgentConfigurationConnection'; ofType: null; } }; 'aiAgent': { name: 'aiAgent'; type: { kind: 'OBJECT'; name: 'AiAgent'; ofType: null; } }; 'aiAgents': { name: 'aiAgents'; type: { kind: 'OBJECT'; name: 'AiAgentConnection'; ofType: null; } }; 'alertManagementAlert': { name: 'alertManagementAlert'; type: { kind: 'OBJECT'; name: 'AlertManagementAlert'; ofType: null; } }; 'alertManagementAlertStatusCounts': { name: 'alertManagementAlertStatusCounts'; type: { kind: 'OBJECT'; name: 'AlertManagementAlertStatusCountsType'; ofType: null; } }; 'alertManagementAlerts': { name: 'alertManagementAlerts'; type: { kind: 'OBJECT'; name: 'AlertManagementAlertConnection'; ofType: null; } }; 'alertManagementHttpIntegrations': { name: 'alertManagementHttpIntegrations'; type: { kind: 'OBJECT'; name: 'AlertManagementHttpIntegrationConnection'; ofType: null; } }; 'alertManagementIntegrations': { name: 'alertManagementIntegrations'; type: { kind: 'OBJECT'; name: 'AlertManagementIntegrationConnection'; ofType: null; } }; 'alertManagementPayloadFields': { name: 'alertManagementPayloadFields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AlertManagementPayloadAlertField'; ofType: null; }; }; } }; 'allowMergeOnSkippedPipeline': { name: 'allowMergeOnSkippedPipeline'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'allowsMultipleMergeRequestAssignees': { name: 'allowsMultipleMergeRequestAssignees'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'allowsMultipleMergeRequestReviewers': { name: 'allowsMultipleMergeRequestReviewers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'apiFuzzingCiConfiguration': { name: 'apiFuzzingCiConfiguration'; type: { kind: 'OBJECT'; name: 'ApiFuzzingCiConfiguration'; ofType: null; } }; 'approvalPolicies': { name: 'approvalPolicies'; type: { kind: 'OBJECT'; name: 'ApprovalPolicyConnection'; ofType: null; } }; 'archived': { name: 'archived'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'autocloseReferencedIssues': { name: 'autocloseReferencedIssues'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'autocompleteUsers': { name: 'autocompleteUsers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AutocompletedUser'; ofType: null; }; }; } }; 'availableDeployKeys': { name: 'availableDeployKeys'; type: { kind: 'OBJECT'; name: 'AccessLevelDeployKeyConnection'; ofType: null; } }; 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'board': { name: 'board'; type: { kind: 'OBJECT'; name: 'Board'; ofType: null; } }; 'boards': { name: 'boards'; type: { kind: 'OBJECT'; name: 'BoardConnection'; ofType: null; } }; 'branchRules': { name: 'branchRules'; type: { kind: 'OBJECT'; name: 'BranchRuleConnection'; ofType: null; } }; 'ciAccessAuthorizedAgents': { name: 'ciAccessAuthorizedAgents'; type: { kind: 'OBJECT'; name: 'ClusterAgentAuthorizationCiAccessConnection'; ofType: null; } }; 'ciCdSettings': { name: 'ciCdSettings'; type: { kind: 'OBJECT'; name: 'ProjectCiCdSetting'; ofType: null; } }; 'ciConfigPathOrDefault': { name: 'ciConfigPathOrDefault'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'ciConfigVariables': { name: 'ciConfigVariables'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CiConfigVariable'; ofType: null; }; }; } }; 'ciJobTokenScope': { name: 'ciJobTokenScope'; type: { kind: 'OBJECT'; name: 'CiJobTokenScopeType'; ofType: null; } }; 'ciSubscribedProjects': { name: 'ciSubscribedProjects'; type: { kind: 'OBJECT'; name: 'CiSubscriptionsProjectConnection'; ofType: null; } }; 'ciSubscriptionsProjects': { name: 'ciSubscriptionsProjects'; type: { kind: 'OBJECT'; name: 'CiSubscriptionsProjectConnection'; ofType: null; } }; 'ciTemplate': { name: 'ciTemplate'; type: { kind: 'OBJECT'; name: 'CiTemplate'; ofType: null; } }; 'ciVariables': { name: 'ciVariables'; type: { kind: 'OBJECT'; name: 'CiProjectVariableConnection'; ofType: null; } }; 'clusterAgent': { name: 'clusterAgent'; type: { kind: 'OBJECT'; name: 'ClusterAgent'; ofType: null; } }; 'clusterAgents': { name: 'clusterAgents'; type: { kind: 'OBJECT'; name: 'ClusterAgentConnection'; ofType: null; } }; 'codeCoverageSummary': { name: 'codeCoverageSummary'; type: { kind: 'OBJECT'; name: 'CodeCoverageSummary'; ofType: null; } }; 'commitReferences': { name: 'commitReferences'; type: { kind: 'OBJECT'; name: 'CommitReferences'; ofType: null; } }; 'complianceFrameworks': { name: 'complianceFrameworks'; type: { kind: 'OBJECT'; name: 'ComplianceFrameworkConnection'; ofType: null; } }; 'containerExpirationPolicy': { name: 'containerExpirationPolicy'; type: { kind: 'OBJECT'; name: 'ContainerExpirationPolicy'; ofType: null; } }; 'containerRegistryEnabled': { name: 'containerRegistryEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'containerRegistryProtectionRules': { name: 'containerRegistryProtectionRules'; type: { kind: 'OBJECT'; name: 'ContainerRegistryProtectionRuleConnection'; ofType: null; } }; 'containerRepositories': { name: 'containerRepositories'; type: { kind: 'OBJECT'; name: 'ContainerRepositoryConnection'; ofType: null; } }; 'containerRepositoriesCount': { name: 'containerRepositoriesCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'corpuses': { name: 'corpuses'; type: { kind: 'OBJECT'; name: 'CoverageFuzzingCorpusConnection'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'customizableDashboardVisualizations': { name: 'customizableDashboardVisualizations'; type: { kind: 'OBJECT'; name: 'CustomizableDashboardVisualizationConnection'; ofType: null; } }; 'customizableDashboards': { name: 'customizableDashboards'; type: { kind: 'OBJECT'; name: 'CustomizableDashboardConnection'; ofType: null; } }; 'dastProfile': { name: 'dastProfile'; type: { kind: 'OBJECT'; name: 'DastProfile'; ofType: null; } }; 'dastProfiles': { name: 'dastProfiles'; type: { kind: 'OBJECT'; name: 'DastProfileConnection'; ofType: null; } }; 'dastScannerProfiles': { name: 'dastScannerProfiles'; type: { kind: 'OBJECT'; name: 'DastScannerProfileConnection'; ofType: null; } }; 'dastSiteProfile': { name: 'dastSiteProfile'; type: { kind: 'OBJECT'; name: 'DastSiteProfile'; ofType: null; } }; 'dastSiteProfiles': { name: 'dastSiteProfiles'; type: { kind: 'OBJECT'; name: 'DastSiteProfileConnection'; ofType: null; } }; 'dastSiteValidations': { name: 'dastSiteValidations'; type: { kind: 'OBJECT'; name: 'DastSiteValidationConnection'; ofType: null; } }; 'dataTransfer': { name: 'dataTransfer'; type: { kind: 'OBJECT'; name: 'ProjectDataTransfer'; ofType: null; } }; 'dependencies': { name: 'dependencies'; type: { kind: 'OBJECT'; name: 'DependencyConnection'; ofType: null; } }; 'dependencyProxyPackagesSetting': { name: 'dependencyProxyPackagesSetting'; type: { kind: 'OBJECT'; name: 'DependencyProxyPackagesSetting'; ofType: null; } }; 'deployment': { name: 'deployment'; type: { kind: 'OBJECT'; name: 'Deployment'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'detailedImportStatus': { name: 'detailedImportStatus'; type: { kind: 'OBJECT'; name: 'DetailedImportStatus'; ofType: null; } }; 'dora': { name: 'dora'; type: { kind: 'OBJECT'; name: 'Dora'; ofType: null; } }; 'duoFeaturesEnabled': { name: 'duoFeaturesEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'environment': { name: 'environment'; type: { kind: 'OBJECT'; name: 'Environment'; ofType: null; } }; 'environments': { name: 'environments'; type: { kind: 'OBJECT'; name: 'EnvironmentConnection'; ofType: null; } }; 'flowMetrics': { name: 'flowMetrics'; type: { kind: 'OBJECT'; name: 'ProjectValueStreamAnalyticsFlowMetrics'; ofType: null; } }; 'forkDetails': { name: 'forkDetails'; type: { kind: 'OBJECT'; name: 'ForkDetails'; ofType: null; } }; 'forkTargets': { name: 'forkTargets'; type: { kind: 'OBJECT'; name: 'NamespaceConnection'; ofType: null; } }; 'forkingAccessLevel': { name: 'forkingAccessLevel'; type: { kind: 'OBJECT'; name: 'ProjectFeatureAccess'; ofType: null; } }; 'forksCount': { name: 'forksCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'fullPath': { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'gitlabSubscriptionsPreviewBillableUserChange': { name: 'gitlabSubscriptionsPreviewBillableUserChange'; type: { kind: 'OBJECT'; name: 'PreviewBillableUserChange'; ofType: null; } }; 'googleCloudArtifactRegistryRepository': { name: 'googleCloudArtifactRegistryRepository'; type: { kind: 'OBJECT'; name: 'GoogleCloudArtifactRegistryRepository'; ofType: null; } }; 'grafanaIntegration': { name: 'grafanaIntegration'; type: { kind: 'OBJECT'; name: 'GrafanaIntegration'; ofType: null; } }; 'group': { name: 'group'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; 'hasJiraVulnerabilityIssueCreationEnabled': { name: 'hasJiraVulnerabilityIssueCreationEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'httpUrlToRepo': { name: 'httpUrlToRepo'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'importStatus': { name: 'importStatus'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'incidentManagementEscalationPolicies': { name: 'incidentManagementEscalationPolicies'; type: { kind: 'OBJECT'; name: 'EscalationPolicyTypeConnection'; ofType: null; } }; 'incidentManagementEscalationPolicy': { name: 'incidentManagementEscalationPolicy'; type: { kind: 'OBJECT'; name: 'EscalationPolicyType'; ofType: null; } }; 'incidentManagementOncallSchedules': { name: 'incidentManagementOncallSchedules'; type: { kind: 'OBJECT'; name: 'IncidentManagementOncallScheduleConnection'; ofType: null; } }; 'incidentManagementTimelineEvent': { name: 'incidentManagementTimelineEvent'; type: { kind: 'OBJECT'; name: 'TimelineEventType'; ofType: null; } }; 'incidentManagementTimelineEventTags': { name: 'incidentManagementTimelineEventTags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TimelineEventTagType'; ofType: null; }; }; } }; 'incidentManagementTimelineEvents': { name: 'incidentManagementTimelineEvents'; type: { kind: 'OBJECT'; name: 'TimelineEventTypeConnection'; ofType: null; } }; 'inheritedCiVariables': { name: 'inheritedCiVariables'; type: { kind: 'OBJECT'; name: 'InheritedCiVariableConnection'; ofType: null; } }; 'isAdjournedDeletionEnabled': { name: 'isAdjournedDeletionEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isCatalogResource': { name: 'isCatalogResource'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'isForked': { name: 'isForked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; 'issueStatusCounts': { name: 'issueStatusCounts'; type: { kind: 'OBJECT'; name: 'IssueStatusCountsType'; ofType: null; } }; 'issues': { name: 'issues'; type: { kind: 'OBJECT'; name: 'IssueConnection'; ofType: null; } }; 'issuesAccessLevel': { name: 'issuesAccessLevel'; type: { kind: 'OBJECT'; name: 'ProjectFeatureAccess'; ofType: null; } }; 'issuesEnabled': { name: 'issuesEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'iterationCadences': { name: 'iterationCadences'; type: { kind: 'OBJECT'; name: 'IterationCadenceConnection'; ofType: null; } }; 'iterations': { name: 'iterations'; type: { kind: 'OBJECT'; name: 'IterationConnection'; ofType: null; } }; 'jiraImportStatus': { name: 'jiraImportStatus'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'jiraImports': { name: 'jiraImports'; type: { kind: 'OBJECT'; name: 'JiraImportConnection'; ofType: null; } }; 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'CiJob'; ofType: null; } }; 'jobs': { name: 'jobs'; type: { kind: 'OBJECT'; name: 'CiJobConnection'; ofType: null; } }; 'jobsEnabled': { name: 'jobsEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'label': { name: 'label'; type: { kind: 'OBJECT'; name: 'Label'; ofType: null; } }; 'labels': { name: 'labels'; type: { kind: 'OBJECT'; name: 'LabelConnection'; ofType: null; } }; 'languages': { name: 'languages'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RepositoryLanguage'; ofType: null; }; }; } }; 'lastActivityAt': { name: 'lastActivityAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'lfsEnabled': { name: 'lfsEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'markedForDeletionOn': { name: 'markedForDeletionOn'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'maxAccessLevel': { name: 'maxAccessLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccessLevel'; ofType: null; }; } }; 'memberRoles': { name: 'memberRoles'; type: { kind: 'OBJECT'; name: 'MemberRoleConnection'; ofType: null; } }; 'mergeCommitTemplate': { name: 'mergeCommitTemplate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; 'mergeRequests': { name: 'mergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'mergeRequestsAccessLevel': { name: 'mergeRequestsAccessLevel'; type: { kind: 'OBJECT'; name: 'ProjectFeatureAccess'; ofType: null; } }; 'mergeRequestsDisableCommittersApproval': { name: 'mergeRequestsDisableCommittersApproval'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'mergeRequestsEnabled': { name: 'mergeRequestsEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'mergeRequestsFfOnlyEnabled': { name: 'mergeRequestsFfOnlyEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'milestones': { name: 'milestones'; type: { kind: 'OBJECT'; name: 'MilestoneConnection'; ofType: null; } }; 'mlModels': { name: 'mlModels'; type: { kind: 'OBJECT'; name: 'MlModelConnection'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'nameWithNamespace': { name: 'nameWithNamespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; 'nestedEnvironments': { name: 'nestedEnvironments'; type: { kind: 'OBJECT'; name: 'NestedEnvironmentConnection'; ofType: null; } }; 'networkPolicies': { name: 'networkPolicies'; type: { kind: 'OBJECT'; name: 'NetworkPolicyConnection'; ofType: null; } }; 'onlyAllowMergeIfAllDiscussionsAreResolved': { name: 'onlyAllowMergeIfAllDiscussionsAreResolved'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'onlyAllowMergeIfAllStatusChecksPassed': { name: 'onlyAllowMergeIfAllStatusChecksPassed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'onlyAllowMergeIfPipelineSucceeds': { name: 'onlyAllowMergeIfPipelineSucceeds'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'openIssuesCount': { name: 'openIssuesCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'openMergeRequestsCount': { name: 'openMergeRequestsCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'organizationEditPath': { name: 'organizationEditPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'packages': { name: 'packages'; type: { kind: 'OBJECT'; name: 'PackageConnection'; ofType: null; } }; 'packagesCleanupPolicy': { name: 'packagesCleanupPolicy'; type: { kind: 'OBJECT'; name: 'PackagesCleanupPolicy'; ofType: null; } }; 'packagesProtectionRules': { name: 'packagesProtectionRules'; type: { kind: 'OBJECT'; name: 'PackagesProtectionRuleConnection'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'pathLocks': { name: 'pathLocks'; type: { kind: 'OBJECT'; name: 'PathLockConnection'; ofType: null; } }; 'permanentDeletionDate': { name: 'permanentDeletionDate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'pipeline': { name: 'pipeline'; type: { kind: 'OBJECT'; name: 'Pipeline'; ofType: null; } }; 'pipelineAnalytics': { name: 'pipelineAnalytics'; type: { kind: 'OBJECT'; name: 'PipelineAnalytics'; ofType: null; } }; 'pipelineCounts': { name: 'pipelineCounts'; type: { kind: 'OBJECT'; name: 'PipelineCounts'; ofType: null; } }; 'pipelineSchedules': { name: 'pipelineSchedules'; type: { kind: 'OBJECT'; name: 'PipelineScheduleConnection'; ofType: null; } }; 'pipelineTriggers': { name: 'pipelineTriggers'; type: { kind: 'OBJECT'; name: 'PipelineTriggerConnection'; ofType: null; } }; 'pipelines': { name: 'pipelines'; type: { kind: 'OBJECT'; name: 'PipelineConnection'; ofType: null; } }; 'preventMergeWithoutJiraIssueEnabled': { name: 'preventMergeWithoutJiraIssueEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'printingMergeRequestLinkEnabled': { name: 'printingMergeRequestLinkEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'productAnalyticsEventsStored': { name: 'productAnalyticsEventsStored'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MonthlyUsage'; ofType: null; }; }; } }; 'productAnalyticsInstrumentationKey': { name: 'productAnalyticsInstrumentationKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'productAnalyticsState': { name: 'productAnalyticsState'; type: { kind: 'ENUM'; name: 'ProductAnalyticsState'; ofType: null; } }; 'projectMembers': { name: 'projectMembers'; type: { kind: 'OBJECT'; name: 'MemberInterfaceConnection'; ofType: null; } }; 'projectPlanLimits': { name: 'projectPlanLimits'; type: { kind: 'OBJECT'; name: 'ProjectPlanLimits'; ofType: null; } }; 'protectableBranches': { name: 'protectableBranches'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'publicJobs': { name: 'publicJobs'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'pushRules': { name: 'pushRules'; type: { kind: 'OBJECT'; name: 'PushRules'; ofType: null; } }; 'recentIssueBoards': { name: 'recentIssueBoards'; type: { kind: 'OBJECT'; name: 'BoardConnection'; ofType: null; } }; 'release': { name: 'release'; type: { kind: 'OBJECT'; name: 'Release'; ofType: null; } }; 'releases': { name: 'releases'; type: { kind: 'OBJECT'; name: 'ReleaseConnection'; ofType: null; } }; 'removeSourceBranchAfterMerge': { name: 'removeSourceBranchAfterMerge'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'repository': { name: 'repository'; type: { kind: 'OBJECT'; name: 'Repository'; ofType: null; } }; 'repositorySizeExcess': { name: 'repositorySizeExcess'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'requestAccessEnabled': { name: 'requestAccessEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'requirement': { name: 'requirement'; type: { kind: 'OBJECT'; name: 'Requirement'; ofType: null; } }; 'requirementStatesCount': { name: 'requirementStatesCount'; type: { kind: 'OBJECT'; name: 'RequirementStatesCount'; ofType: null; } }; 'requirements': { name: 'requirements'; type: { kind: 'OBJECT'; name: 'RequirementConnection'; ofType: null; } }; 'runnerCloudProvisioning': { name: 'runnerCloudProvisioning'; type: { kind: 'UNION'; name: 'CiRunnerCloudProvisioning'; ofType: null; } }; 'runners': { name: 'runners'; type: { kind: 'OBJECT'; name: 'CiRunnerConnection'; ofType: null; } }; 'sastCiConfiguration': { name: 'sastCiConfiguration'; type: { kind: 'OBJECT'; name: 'SastCiConfiguration'; ofType: null; } }; 'scanExecutionPolicies': { name: 'scanExecutionPolicies'; type: { kind: 'OBJECT'; name: 'ScanExecutionPolicyConnection'; ofType: null; } }; 'scanResultPolicies': { name: 'scanResultPolicies'; type: { kind: 'OBJECT'; name: 'ScanResultPolicyConnection'; ofType: null; } }; 'securityDashboardPath': { name: 'securityDashboardPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'securityPolicyProject': { name: 'securityPolicyProject'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'securityPolicyProjectLinkedNamespaces': { name: 'securityPolicyProjectLinkedNamespaces'; type: { kind: 'OBJECT'; name: 'NamespaceConnection'; ofType: null; } }; 'securityPolicyProjectLinkedProjects': { name: 'securityPolicyProjectLinkedProjects'; type: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; } }; 'securityPolicyProjectSuggestions': { name: 'securityPolicyProjectSuggestions'; type: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; } }; 'securityScanners': { name: 'securityScanners'; type: { kind: 'OBJECT'; name: 'SecurityScanners'; ofType: null; } }; 'securityTrainingProviders': { name: 'securityTrainingProviders'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectSecurityTraining'; ofType: null; }; }; } }; 'securityTrainingUrls': { name: 'securityTrainingUrls'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SecurityTrainingUrl'; ofType: null; }; }; } }; 'sentryDetailedError': { name: 'sentryDetailedError'; type: { kind: 'OBJECT'; name: 'SentryDetailedError'; ofType: null; } }; 'sentryErrors': { name: 'sentryErrors'; type: { kind: 'OBJECT'; name: 'SentryErrorCollection'; ofType: null; } }; 'serviceDeskAddress': { name: 'serviceDeskAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'serviceDeskEnabled': { name: 'serviceDeskEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'services': { name: 'services'; type: { kind: 'OBJECT'; name: 'ServiceConnection'; ofType: null; } }; 'sharedRunnersEnabled': { name: 'sharedRunnersEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'snippets': { name: 'snippets'; type: { kind: 'OBJECT'; name: 'SnippetConnection'; ofType: null; } }; 'snippetsEnabled': { name: 'snippetsEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'squashCommitTemplate': { name: 'squashCommitTemplate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'squashReadOnly': { name: 'squashReadOnly'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'sshUrlToRepo': { name: 'sshUrlToRepo'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'starCount': { name: 'starCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'statistics': { name: 'statistics'; type: { kind: 'OBJECT'; name: 'ProjectStatistics'; ofType: null; } }; 'statisticsDetailsPaths': { name: 'statisticsDetailsPaths'; type: { kind: 'OBJECT'; name: 'ProjectStatisticsRedirect'; ofType: null; } }; 'suggestionCommitMessage': { name: 'suggestionCommitMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tagList': { name: 'tagList'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'terraformState': { name: 'terraformState'; type: { kind: 'OBJECT'; name: 'TerraformState'; ofType: null; } }; 'terraformStates': { name: 'terraformStates'; type: { kind: 'OBJECT'; name: 'TerraformStateConnection'; ofType: null; } }; 'timelogCategories': { name: 'timelogCategories'; type: { kind: 'OBJECT'; name: 'TimeTrackingTimelogCategoryConnection'; ofType: null; } }; 'timelogs': { name: 'timelogs'; type: { kind: 'OBJECT'; name: 'TimelogConnection'; ofType: null; } }; 'topics': { name: 'topics'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'trackingKey': { name: 'trackingKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userAccessAuthorizedAgents': { name: 'userAccessAuthorizedAgents'; type: { kind: 'OBJECT'; name: 'ClusterAgentAuthorizationUserAccessConnection'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectPermissions'; ofType: null; }; } }; 'valueStreamAnalytics': { name: 'valueStreamAnalytics'; type: { kind: 'OBJECT'; name: 'ValueStreamAnalytics'; ofType: null; } }; 'valueStreams': { name: 'valueStreams'; type: { kind: 'OBJECT'; name: 'ValueStreamConnection'; ofType: null; } }; 'visibility': { name: 'visibility'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'visibleForks': { name: 'visibleForks'; type: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; } }; 'vulnerabilities': { name: 'vulnerabilities'; type: { kind: 'OBJECT'; name: 'VulnerabilityConnection'; ofType: null; } }; 'vulnerabilitiesCountByDay': { name: 'vulnerabilitiesCountByDay'; type: { kind: 'OBJECT'; name: 'VulnerabilitiesCountByDayConnection'; ofType: null; } }; 'vulnerabilityImages': { name: 'vulnerabilityImages'; type: { kind: 'OBJECT'; name: 'VulnerabilityContainerImageConnection'; ofType: null; } }; 'vulnerabilityScanners': { name: 'vulnerabilityScanners'; type: { kind: 'OBJECT'; name: 'VulnerabilityScannerConnection'; ofType: null; } }; 'vulnerabilitySeveritiesCount': { name: 'vulnerabilitySeveritiesCount'; type: { kind: 'OBJECT'; name: 'VulnerabilitySeveritiesCount'; ofType: null; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'wikiEnabled': { name: 'wikiEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'workItemStateCounts': { name: 'workItemStateCounts'; type: { kind: 'OBJECT'; name: 'WorkItemStateCountsType'; ofType: null; } }; 'workItemTypes': { name: 'workItemTypes'; type: { kind: 'OBJECT'; name: 'WorkItemTypeConnection'; ofType: null; } }; 'workItems': { name: 'workItems'; type: { kind: 'OBJECT'; name: 'WorkItemConnection'; ofType: null; } }; }; };
    'ProjectCiCdSetting': { kind: 'OBJECT'; name: 'ProjectCiCdSetting'; fields: { 'inboundJobTokenScopeEnabled': { name: 'inboundJobTokenScopeEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'jobTokenScopeEnabled': { name: 'jobTokenScopeEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'keepLatestArtifact': { name: 'keepLatestArtifact'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'mergePipelinesEnabled': { name: 'mergePipelinesEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'mergeTrainsEnabled': { name: 'mergeTrainsEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'mergeTrainsSkipTrainAllowed': { name: 'mergeTrainsSkipTrainAllowed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; }; };
    'ProjectCiCdSettingsUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ProjectCiCdSettingsUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'keepLatestArtifact'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'inboundJobTokenScopeEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'mergePipelinesEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'mergeTrainsEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'mergeTrainsSkipTrainAllowed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'ProjectCiCdSettingsUpdatePayload': { kind: 'OBJECT'; name: 'ProjectCiCdSettingsUpdatePayload'; fields: { 'ciCdSettings': { name: 'ciCdSettings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectCiCdSetting'; ofType: null; }; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'ProjectConnection': { kind: 'OBJECT'; name: 'ProjectConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ProjectDataTransfer': { kind: 'OBJECT'; name: 'ProjectDataTransfer'; fields: { 'egressNodes': { name: 'egressNodes'; type: { kind: 'OBJECT'; name: 'EgressNodeConnection'; ofType: null; } }; 'totalEgress': { name: 'totalEgress'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; }; };
    'ProjectEdge': { kind: 'OBJECT'; name: 'ProjectEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; }; };
    'ProjectFeatureAccess': { kind: 'OBJECT'; name: 'ProjectFeatureAccess'; fields: { 'integerValue': { name: 'integerValue'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'stringValue': { name: 'stringValue'; type: { kind: 'ENUM'; name: 'ProjectFeatureAccessLevel'; ofType: null; } }; }; };
    'ProjectFeatureAccessLevel': { kind: 'ENUM'; name: 'ProjectFeatureAccessLevel'; type: 'DISABLED' | 'PRIVATE' | 'ENABLED'; };
    'ProjectID': unknown;
    'ProjectImportStateID': unknown;
    'ProjectInitializeProductAnalyticsInput': { kind: 'INPUT_OBJECT'; name: 'ProjectInitializeProductAnalyticsInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'ProjectInitializeProductAnalyticsPayload': { kind: 'OBJECT'; name: 'ProjectInitializeProductAnalyticsPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; }; };
    'ProjectMember': { kind: 'OBJECT'; name: 'ProjectMember'; fields: { 'accessLevel': { name: 'accessLevel'; type: { kind: 'OBJECT'; name: 'AccessLevel'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'createdBy': { name: 'createdBy'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'expiresAt': { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'mergeRequestInteraction': { name: 'mergeRequestInteraction'; type: { kind: 'OBJECT'; name: 'UserMergeRequestInteraction'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectPermissions'; ofType: null; }; } }; }; };
    'ProjectMemberBulkUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ProjectMemberBulkUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'userIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UserID'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'accessLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MemberAccessLevel'; ofType: null; }; }; defaultValue: null }, { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; defaultValue: null }, { name: 'projectId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectID'; ofType: null; }; }; defaultValue: null }]; };
    'ProjectMemberBulkUpdatePayload': { kind: 'OBJECT'; name: 'ProjectMemberBulkUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'projectMembers': { name: 'projectMembers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectMember'; ofType: null; }; }; } }; }; };
    'ProjectMemberConnection': { kind: 'OBJECT'; name: 'ProjectMemberConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectMemberEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectMember'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ProjectMemberEdge': { kind: 'OBJECT'; name: 'ProjectMemberEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ProjectMember'; ofType: null; } }; }; };
    'ProjectMemberRelation': { kind: 'ENUM'; name: 'ProjectMemberRelation'; type: 'DIRECT' | 'INHERITED' | 'DESCENDANTS' | 'INVITED_GROUPS' | 'SHARED_INTO_ANCESTORS'; };
    'ProjectPermissions': { kind: 'OBJECT'; name: 'ProjectPermissions'; fields: { 'adminOperations': { name: 'adminOperations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'adminPathLocks': { name: 'adminPathLocks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'adminProject': { name: 'adminProject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'adminRemoteMirror': { name: 'adminRemoteMirror'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'adminWiki': { name: 'adminWiki'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'archiveProject': { name: 'archiveProject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'changeNamespace': { name: 'changeNamespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'changeVisibilityLevel': { name: 'changeVisibilityLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createDeployment': { name: 'createDeployment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createDesign': { name: 'createDesign'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createIssue': { name: 'createIssue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createLabel': { name: 'createLabel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createMergeRequestFrom': { name: 'createMergeRequestFrom'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createMergeRequestIn': { name: 'createMergeRequestIn'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createPages': { name: 'createPages'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createPipeline': { name: 'createPipeline'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createPipelineSchedule': { name: 'createPipelineSchedule'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createSnippet': { name: 'createSnippet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createWiki': { name: 'createWiki'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'destroyDesign': { name: 'destroyDesign'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'destroyPages': { name: 'destroyPages'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'destroyWiki': { name: 'destroyWiki'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'downloadCode': { name: 'downloadCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'downloadWikiCode': { name: 'downloadWikiCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'forkProject': { name: 'forkProject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'pushCode': { name: 'pushCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'pushToDeleteProtectedBranch': { name: 'pushToDeleteProtectedBranch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readCommitStatus': { name: 'readCommitStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readCycleAnalytics': { name: 'readCycleAnalytics'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readDesign': { name: 'readDesign'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readEnvironment': { name: 'readEnvironment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readMergeRequest': { name: 'readMergeRequest'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readPagesContent': { name: 'readPagesContent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readProject': { name: 'readProject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readProjectMember': { name: 'readProjectMember'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readWiki': { name: 'readWiki'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'removeForkProject': { name: 'removeForkProject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'removePages': { name: 'removePages'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'removeProject': { name: 'removeProject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'renameProject': { name: 'renameProject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'requestAccess': { name: 'requestAccess'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updatePages': { name: 'updatePages'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updateWiki': { name: 'updateWiki'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'uploadFile': { name: 'uploadFile'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'viewEditPage': { name: 'viewEditPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ProjectPlanLimits': { kind: 'OBJECT'; name: 'ProjectPlanLimits'; fields: { 'ciPipelineSchedules': { name: 'ciPipelineSchedules'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'ProjectRepositoryRegistry': { kind: 'OBJECT'; name: 'ProjectRepositoryRegistry'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSyncFailure': { name: 'lastSyncFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSyncedAt': { name: 'lastSyncedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'projectId': { name: 'projectId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'retryAt': { name: 'retryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryCount': { name: 'retryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'RegistryState'; ofType: null; } }; 'verificationChecksum': { name: 'verificationChecksum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationFailure': { name: 'verificationFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationRetryAt': { name: 'verificationRetryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationRetryCount': { name: 'verificationRetryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'verificationStartedAt': { name: 'verificationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationState': { name: 'verificationState'; type: { kind: 'ENUM'; name: 'VerificationStateEnum'; ofType: null; } }; 'verifiedAt': { name: 'verifiedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'ProjectRepositoryRegistryConnection': { kind: 'OBJECT'; name: 'ProjectRepositoryRegistryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectRepositoryRegistryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectRepositoryRegistry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ProjectRepositoryRegistryEdge': { kind: 'OBJECT'; name: 'ProjectRepositoryRegistryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ProjectRepositoryRegistry'; ofType: null; } }; }; };
    'ProjectSecurityPolicySource': { kind: 'OBJECT'; name: 'ProjectSecurityPolicySource'; fields: { 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; }; };
    'ProjectSecurityTraining': { kind: 'OBJECT'; name: 'ProjectSecurityTraining'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GlobalID'; ofType: null; }; } }; 'isEnabled': { name: 'isEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isPrimary': { name: 'isPrimary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'logoUrl': { name: 'logoUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProjectSetComplianceFrameworkInput': { kind: 'INPUT_OBJECT'; name: 'ProjectSetComplianceFrameworkInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectID'; ofType: null; }; }; defaultValue: null }, { name: 'complianceFrameworkId'; type: { kind: 'SCALAR'; name: 'ComplianceManagementFrameworkID'; ofType: null; }; defaultValue: null }]; };
    'ProjectSetComplianceFrameworkPayload': { kind: 'OBJECT'; name: 'ProjectSetComplianceFrameworkPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; }; };
    'ProjectSetContinuousVulnerabilityScanningInput': { kind: 'INPUT_OBJECT'; name: 'ProjectSetContinuousVulnerabilityScanningInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'enable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'ProjectSetContinuousVulnerabilityScanningPayload': { kind: 'OBJECT'; name: 'ProjectSetContinuousVulnerabilityScanningPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'continuousVulnerabilityScanningEnabled': { name: 'continuousVulnerabilityScanningEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'ProjectSetLockedInput': { kind: 'INPUT_OBJECT'; name: 'ProjectSetLockedInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'filePath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'lock'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'ProjectSetLockedPayload': { kind: 'OBJECT'; name: 'ProjectSetLockedPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; }; };
    'ProjectSetting': { kind: 'OBJECT'; name: 'ProjectSetting'; fields: { 'duoFeaturesEnabled': { name: 'duoFeaturesEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; }; };
    'ProjectSettingsUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ProjectSettingsUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fullPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'duoFeaturesEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'ProjectSettingsUpdatePayload': { kind: 'OBJECT'; name: 'ProjectSettingsUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'projectSettings': { name: 'projectSettings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectSetting'; ofType: null; }; } }; }; };
    'ProjectStatistics': { kind: 'OBJECT'; name: 'ProjectStatistics'; fields: { 'buildArtifactsSize': { name: 'buildArtifactsSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'commitCount': { name: 'commitCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'containerRegistrySize': { name: 'containerRegistrySize'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'costFactoredBuildArtifactsSize': { name: 'costFactoredBuildArtifactsSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'costFactoredLfsObjectsSize': { name: 'costFactoredLfsObjectsSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'costFactoredPackagesSize': { name: 'costFactoredPackagesSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'costFactoredRepositorySize': { name: 'costFactoredRepositorySize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'costFactoredSnippetsSize': { name: 'costFactoredSnippetsSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'costFactoredStorageSize': { name: 'costFactoredStorageSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'costFactoredWikiSize': { name: 'costFactoredWikiSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'lfsObjectsSize': { name: 'lfsObjectsSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'packagesSize': { name: 'packagesSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'pipelineArtifactsSize': { name: 'pipelineArtifactsSize'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'repositorySize': { name: 'repositorySize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'snippetsSize': { name: 'snippetsSize'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'storageSize': { name: 'storageSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'uploadsSize': { name: 'uploadsSize'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'wikiSize': { name: 'wikiSize'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'ProjectStatisticsRedirect': { kind: 'OBJECT'; name: 'ProjectStatisticsRedirect'; fields: { 'buildArtifacts': { name: 'buildArtifacts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'containerRegistry': { name: 'containerRegistry'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'packages': { name: 'packages'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'repository': { name: 'repository'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'snippets': { name: 'snippets'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'wiki': { name: 'wiki'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProjectSubscriptionCreateInput': { kind: 'INPUT_OBJECT'; name: 'ProjectSubscriptionCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'upstreamPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'ProjectSubscriptionCreatePayload': { kind: 'OBJECT'; name: 'ProjectSubscriptionCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'subscription': { name: 'subscription'; type: { kind: 'OBJECT'; name: 'CiSubscriptionsProject'; ofType: null; } }; }; };
    'ProjectSubscriptionDeleteInput': { kind: 'INPUT_OBJECT'; name: 'ProjectSubscriptionDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'subscriptionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiSubscriptionsProjectID'; ofType: null; }; }; defaultValue: null }]; };
    'ProjectSubscriptionDeletePayload': { kind: 'OBJECT'; name: 'ProjectSubscriptionDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; }; };
    'ProjectSyncForkInput': { kind: 'INPUT_OBJECT'; name: 'ProjectSyncForkInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'targetBranch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'ProjectSyncForkPayload': { kind: 'OBJECT'; name: 'ProjectSyncForkPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'details': { name: 'details'; type: { kind: 'OBJECT'; name: 'ForkDetails'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'ProjectValueStreamAnalyticsFlowMetrics': { kind: 'OBJECT'; name: 'ProjectValueStreamAnalyticsFlowMetrics'; fields: { 'cycleTime': { name: 'cycleTime'; type: { kind: 'OBJECT'; name: 'ValueStreamAnalyticsMetric'; ofType: null; } }; 'deploymentCount': { name: 'deploymentCount'; type: { kind: 'OBJECT'; name: 'ValueStreamAnalyticsMetric'; ofType: null; } }; 'issueCount': { name: 'issueCount'; type: { kind: 'OBJECT'; name: 'ValueStreamAnalyticsMetric'; ofType: null; } }; 'issuesCompletedCount': { name: 'issuesCompletedCount'; type: { kind: 'OBJECT'; name: 'ValueStreamAnalyticsMetric'; ofType: null; } }; 'leadTime': { name: 'leadTime'; type: { kind: 'OBJECT'; name: 'ValueStreamAnalyticsMetric'; ofType: null; } }; 'timeToMerge': { name: 'timeToMerge'; type: { kind: 'OBJECT'; name: 'ValueStreamAnalyticsMetric'; ofType: null; } }; }; };
    'ProjectWikiRepositoryRegistry': { kind: 'OBJECT'; name: 'ProjectWikiRepositoryRegistry'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSyncFailure': { name: 'lastSyncFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSyncedAt': { name: 'lastSyncedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'projectWikiRepositoryId': { name: 'projectWikiRepositoryId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'retryAt': { name: 'retryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryCount': { name: 'retryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'RegistryState'; ofType: null; } }; 'verificationChecksum': { name: 'verificationChecksum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationFailure': { name: 'verificationFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationRetryAt': { name: 'verificationRetryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationRetryCount': { name: 'verificationRetryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'verificationStartedAt': { name: 'verificationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationState': { name: 'verificationState'; type: { kind: 'ENUM'; name: 'VerificationStateEnum'; ofType: null; } }; 'verifiedAt': { name: 'verifiedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'ProjectWikiRepositoryRegistryConnection': { kind: 'OBJECT'; name: 'ProjectWikiRepositoryRegistryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectWikiRepositoryRegistryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectWikiRepositoryRegistry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ProjectWikiRepositoryRegistryEdge': { kind: 'OBJECT'; name: 'ProjectWikiRepositoryRegistryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ProjectWikiRepositoryRegistry'; ofType: null; } }; }; };
    'ProjectsBranchRuleID': unknown;
    'PrometheusAlert': { kind: 'OBJECT'; name: 'PrometheusAlert'; fields: { 'humanizedText': { name: 'humanizedText'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'PrometheusIntegrationCreateInput': { kind: 'INPUT_OBJECT'; name: 'PrometheusIntegrationCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'apiUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'PrometheusIntegrationCreatePayload': { kind: 'OBJECT'; name: 'PrometheusIntegrationCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'integration': { name: 'integration'; type: { kind: 'OBJECT'; name: 'AlertManagementPrometheusIntegration'; ofType: null; } }; }; };
    'PrometheusIntegrationResetTokenInput': { kind: 'INPUT_OBJECT'; name: 'PrometheusIntegrationResetTokenInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IntegrationsPrometheusID'; ofType: null; }; }; defaultValue: null }]; };
    'PrometheusIntegrationResetTokenPayload': { kind: 'OBJECT'; name: 'PrometheusIntegrationResetTokenPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'integration': { name: 'integration'; type: { kind: 'OBJECT'; name: 'AlertManagementPrometheusIntegration'; ofType: null; } }; }; };
    'PrometheusIntegrationUpdateInput': { kind: 'INPUT_OBJECT'; name: 'PrometheusIntegrationUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IntegrationsPrometheusID'; ofType: null; }; }; defaultValue: null }, { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'apiUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'PrometheusIntegrationUpdatePayload': { kind: 'OBJECT'; name: 'PrometheusIntegrationUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'integration': { name: 'integration'; type: { kind: 'OBJECT'; name: 'AlertManagementPrometheusIntegration'; ofType: null; } }; }; };
    'PromoteToEpicInput': { kind: 'INPUT_OBJECT'; name: 'PromoteToEpicInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'PromoteToEpicPayload': { kind: 'OBJECT'; name: 'PromoteToEpicPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'epic': { name: 'epic'; type: { kind: 'OBJECT'; name: 'Epic'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'ProtectedEnvironment': { kind: 'OBJECT'; name: 'ProtectedEnvironment'; fields: { 'approvalRules': { name: 'approvalRules'; type: { kind: 'OBJECT'; name: 'ProtectedEnvironmentApprovalRuleConnection'; ofType: null; } }; 'deployAccessLevels': { name: 'deployAccessLevels'; type: { kind: 'OBJECT'; name: 'ProtectedEnvironmentDeployAccessLevelConnection'; ofType: null; } }; 'group': { name: 'group'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'requiredApprovalCount': { name: 'requiredApprovalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'ProtectedEnvironmentApprovalRule': { kind: 'OBJECT'; name: 'ProtectedEnvironmentApprovalRule'; fields: { 'accessLevel': { name: 'accessLevel'; type: { kind: 'OBJECT'; name: 'AccessLevel'; ofType: null; } }; 'group': { name: 'group'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; 'requiredApprovals': { name: 'requiredApprovals'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; }; };
    'ProtectedEnvironmentApprovalRuleConnection': { kind: 'OBJECT'; name: 'ProtectedEnvironmentApprovalRuleConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ProtectedEnvironmentApprovalRuleEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ProtectedEnvironmentApprovalRule'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ProtectedEnvironmentApprovalRuleEdge': { kind: 'OBJECT'; name: 'ProtectedEnvironmentApprovalRuleEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ProtectedEnvironmentApprovalRule'; ofType: null; } }; }; };
    'ProtectedEnvironmentApprovalRuleForSummary': { kind: 'OBJECT'; name: 'ProtectedEnvironmentApprovalRuleForSummary'; fields: { 'accessLevel': { name: 'accessLevel'; type: { kind: 'OBJECT'; name: 'AccessLevel'; ofType: null; } }; 'approvals': { name: 'approvals'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DeploymentApproval'; ofType: null; }; }; } }; 'approvedCount': { name: 'approvedCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'group': { name: 'group'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; 'pendingApprovalCount': { name: 'pendingApprovalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'requiredApprovals': { name: 'requiredApprovals'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'DeploymentApprovalSummaryStatus'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; }; };
    'ProtectedEnvironmentConnection': { kind: 'OBJECT'; name: 'ProtectedEnvironmentConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ProtectedEnvironmentEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ProtectedEnvironment'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ProtectedEnvironmentDeployAccessLevel': { kind: 'OBJECT'; name: 'ProtectedEnvironmentDeployAccessLevel'; fields: { 'accessLevel': { name: 'accessLevel'; type: { kind: 'OBJECT'; name: 'AccessLevel'; ofType: null; } }; 'group': { name: 'group'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; }; };
    'ProtectedEnvironmentDeployAccessLevelConnection': { kind: 'OBJECT'; name: 'ProtectedEnvironmentDeployAccessLevelConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ProtectedEnvironmentDeployAccessLevelEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ProtectedEnvironmentDeployAccessLevel'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ProtectedEnvironmentDeployAccessLevelEdge': { kind: 'OBJECT'; name: 'ProtectedEnvironmentDeployAccessLevelEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ProtectedEnvironmentDeployAccessLevel'; ofType: null; } }; }; };
    'ProtectedEnvironmentEdge': { kind: 'OBJECT'; name: 'ProtectedEnvironmentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ProtectedEnvironment'; ofType: null; } }; }; };
    'PushAccessLevel': { kind: 'OBJECT'; name: 'PushAccessLevel'; fields: { 'accessLevel': { name: 'accessLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'accessLevelDescription': { name: 'accessLevelDescription'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'deployKey': { name: 'deployKey'; type: { kind: 'OBJECT'; name: 'AccessLevelDeployKey'; ofType: null; } }; 'group': { name: 'group'; type: { kind: 'OBJECT'; name: 'AccessLevelGroup'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'AccessLevelUser'; ofType: null; } }; }; };
    'PushAccessLevelConnection': { kind: 'OBJECT'; name: 'PushAccessLevelConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PushAccessLevelEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PushAccessLevel'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'PushAccessLevelEdge': { kind: 'OBJECT'; name: 'PushAccessLevelEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'PushAccessLevel'; ofType: null; } }; }; };
    'PushRules': { kind: 'OBJECT'; name: 'PushRules'; fields: { 'rejectUnsignedCommits': { name: 'rejectUnsignedCommits'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'PypiMetadata': { kind: 'OBJECT'; name: 'PypiMetadata'; fields: { 'authorEmail': { name: 'authorEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionContentType': { name: 'descriptionContentType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesPypiMetadatumID'; ofType: null; }; } }; 'keywords': { name: 'keywords'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metadataVersion': { name: 'metadataVersion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'requiredPython': { name: 'requiredPython'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'summary': { name: 'summary'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'abuseReport': { name: 'abuseReport'; type: { kind: 'OBJECT'; name: 'AbuseReport'; ofType: null; } }; 'abuseReportLabels': { name: 'abuseReportLabels'; type: { kind: 'OBJECT'; name: 'LabelConnection'; ofType: null; } }; 'addOnPurchase': { name: 'addOnPurchase'; type: { kind: 'OBJECT'; name: 'AddOnPurchase'; ofType: null; } }; 'aiMessages': { name: 'aiMessages'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AiMessageConnection'; ofType: null; }; } }; 'auditEventDefinitions': { name: 'auditEventDefinitions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AuditEventDefinitionConnection'; ofType: null; }; } }; 'auditEventsInstanceAmazonS3Configurations': { name: 'auditEventsInstanceAmazonS3Configurations'; type: { kind: 'OBJECT'; name: 'InstanceAmazonS3ConfigurationTypeConnection'; ofType: null; } }; 'boardList': { name: 'boardList'; type: { kind: 'OBJECT'; name: 'BoardList'; ofType: null; } }; 'ciApplicationSettings': { name: 'ciApplicationSettings'; type: { kind: 'OBJECT'; name: 'CiApplicationSettings'; ofType: null; } }; 'ciCatalogResource': { name: 'ciCatalogResource'; type: { kind: 'OBJECT'; name: 'CiCatalogResource'; ofType: null; } }; 'ciCatalogResources': { name: 'ciCatalogResources'; type: { kind: 'OBJECT'; name: 'CiCatalogResourceConnection'; ofType: null; } }; 'ciConfig': { name: 'ciConfig'; type: { kind: 'OBJECT'; name: 'CiConfig'; ofType: null; } }; 'ciMinutesUsage': { name: 'ciMinutesUsage'; type: { kind: 'OBJECT'; name: 'CiMinutesNamespaceMonthlyUsageConnection'; ofType: null; } }; 'ciPipelineStage': { name: 'ciPipelineStage'; type: { kind: 'OBJECT'; name: 'CiStage'; ofType: null; } }; 'ciQueueingHistory': { name: 'ciQueueingHistory'; type: { kind: 'OBJECT'; name: 'QueueingDelayHistory'; ofType: null; } }; 'ciVariables': { name: 'ciVariables'; type: { kind: 'OBJECT'; name: 'CiInstanceVariableConnection'; ofType: null; } }; 'containerRepository': { name: 'containerRepository'; type: { kind: 'OBJECT'; name: 'ContainerRepositoryDetails'; ofType: null; } }; 'currentLicense': { name: 'currentLicense'; type: { kind: 'OBJECT'; name: 'CurrentLicense'; ofType: null; } }; 'currentUser': { name: 'currentUser'; type: { kind: 'OBJECT'; name: 'CurrentUser'; ofType: null; } }; 'designManagement': { name: 'designManagement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DesignManagement'; ofType: null; }; } }; 'devopsAdoptionEnabledNamespaces': { name: 'devopsAdoptionEnabledNamespaces'; type: { kind: 'OBJECT'; name: 'DevopsAdoptionEnabledNamespaceConnection'; ofType: null; } }; 'echo': { name: 'echo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'epicBoardList': { name: 'epicBoardList'; type: { kind: 'OBJECT'; name: 'EpicList'; ofType: null; } }; 'explainVulnerabilityPrompt': { name: 'explainVulnerabilityPrompt'; type: { kind: 'OBJECT'; name: 'ExplainVulnerabilityPrompt'; ofType: null; } }; 'frecentGroups': { name: 'frecentGroups'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Group'; ofType: null; }; }; } }; 'frecentProjects': { name: 'frecentProjects'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; }; } }; 'geoNode': { name: 'geoNode'; type: { kind: 'OBJECT'; name: 'GeoNode'; ofType: null; } }; 'gitpodEnabled': { name: 'gitpodEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'googleCloudArtifactRegistryRepositoryArtifact': { name: 'googleCloudArtifactRegistryRepositoryArtifact'; type: { kind: 'UNION'; name: 'GoogleCloudArtifactRegistryArtifactDetails'; ofType: null; } }; 'group': { name: 'group'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; 'groups': { name: 'groups'; type: { kind: 'OBJECT'; name: 'GroupConnection'; ofType: null; } }; 'instanceExternalAuditEventDestinations': { name: 'instanceExternalAuditEventDestinations'; type: { kind: 'OBJECT'; name: 'InstanceExternalAuditEventDestinationConnection'; ofType: null; } }; 'instanceGoogleCloudLoggingConfigurations': { name: 'instanceGoogleCloudLoggingConfigurations'; type: { kind: 'OBJECT'; name: 'InstanceGoogleCloudLoggingConfigurationTypeConnection'; ofType: null; } }; 'instanceSecurityDashboard': { name: 'instanceSecurityDashboard'; type: { kind: 'OBJECT'; name: 'InstanceSecurityDashboard'; ofType: null; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; 'issues': { name: 'issues'; type: { kind: 'OBJECT'; name: 'IssueConnection'; ofType: null; } }; 'iteration': { name: 'iteration'; type: { kind: 'OBJECT'; name: 'Iteration'; ofType: null; } }; 'jobs': { name: 'jobs'; type: { kind: 'OBJECT'; name: 'CiJobConnection'; ofType: null; } }; 'licenseHistoryEntries': { name: 'licenseHistoryEntries'; type: { kind: 'OBJECT'; name: 'LicenseHistoryEntryConnection'; ofType: null; } }; 'memberRole': { name: 'memberRole'; type: { kind: 'OBJECT'; name: 'MemberRole'; ofType: null; } }; 'memberRolePermissions': { name: 'memberRolePermissions'; type: { kind: 'OBJECT'; name: 'CustomizablePermissionConnection'; ofType: null; } }; 'memberRoles': { name: 'memberRoles'; type: { kind: 'OBJECT'; name: 'MemberRoleConnection'; ofType: null; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'OBJECT'; name: 'Metadata'; ofType: null; } }; 'milestone': { name: 'milestone'; type: { kind: 'OBJECT'; name: 'Milestone'; ofType: null; } }; 'mlModel': { name: 'mlModel'; type: { kind: 'OBJECT'; name: 'MlModel'; ofType: null; } }; 'namespace': { name: 'namespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; 'note': { name: 'note'; type: { kind: 'OBJECT'; name: 'Note'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'OBJECT'; name: 'Organization'; ofType: null; } }; 'organizations': { name: 'organizations'; type: { kind: 'OBJECT'; name: 'OrganizationConnection'; ofType: null; } }; 'package': { name: 'package'; type: { kind: 'OBJECT'; name: 'PackageDetailsType'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'projects': { name: 'projects'; type: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; } }; 'queryComplexity': { name: 'queryComplexity'; type: { kind: 'OBJECT'; name: 'QueryComplexity'; ofType: null; } }; 'runner': { name: 'runner'; type: { kind: 'OBJECT'; name: 'CiRunner'; ofType: null; } }; 'runnerPlatforms': { name: 'runnerPlatforms'; type: { kind: 'OBJECT'; name: 'RunnerPlatformConnection'; ofType: null; } }; 'runnerSetup': { name: 'runnerSetup'; type: { kind: 'OBJECT'; name: 'RunnerSetup'; ofType: null; } }; 'runnerUsage': { name: 'runnerUsage'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CiRunnerUsage'; ofType: null; }; }; } }; 'runnerUsageByProject': { name: 'runnerUsageByProject'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CiRunnerUsageByProject'; ofType: null; }; }; } }; 'runners': { name: 'runners'; type: { kind: 'OBJECT'; name: 'CiRunnerConnection'; ofType: null; } }; 'selfManagedAddOnEligibleUsers': { name: 'selfManagedAddOnEligibleUsers'; type: { kind: 'OBJECT'; name: 'AddOnUserConnection'; ofType: null; } }; 'snippets': { name: 'snippets'; type: { kind: 'OBJECT'; name: 'SnippetConnection'; ofType: null; } }; 'subscriptionFutureEntries': { name: 'subscriptionFutureEntries'; type: { kind: 'OBJECT'; name: 'SubscriptionFutureEntryConnection'; ofType: null; } }; 'syntheticNote': { name: 'syntheticNote'; type: { kind: 'OBJECT'; name: 'Note'; ofType: null; } }; 'timelogs': { name: 'timelogs'; type: { kind: 'OBJECT'; name: 'TimelogConnection'; ofType: null; } }; 'todo': { name: 'todo'; type: { kind: 'OBJECT'; name: 'Todo'; ofType: null; } }; 'topics': { name: 'topics'; type: { kind: 'OBJECT'; name: 'TopicConnection'; ofType: null; } }; 'usageTrendsMeasurements': { name: 'usageTrendsMeasurements'; type: { kind: 'OBJECT'; name: 'UsageTrendsMeasurementConnection'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'users': { name: 'users'; type: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; } }; 'vulnerabilities': { name: 'vulnerabilities'; type: { kind: 'OBJECT'; name: 'VulnerabilityConnection'; ofType: null; } }; 'vulnerabilitiesCountByDay': { name: 'vulnerabilitiesCountByDay'; type: { kind: 'OBJECT'; name: 'VulnerabilitiesCountByDayConnection'; ofType: null; } }; 'vulnerability': { name: 'vulnerability'; type: { kind: 'OBJECT'; name: 'Vulnerability'; ofType: null; } }; 'workItem': { name: 'workItem'; type: { kind: 'OBJECT'; name: 'WorkItem'; ofType: null; } }; 'workItemsByReference': { name: 'workItemsByReference'; type: { kind: 'OBJECT'; name: 'WorkItemConnection'; ofType: null; } }; 'workspace': { name: 'workspace'; type: { kind: 'OBJECT'; name: 'Workspace'; ofType: null; } }; 'workspaces': { name: 'workspaces'; type: { kind: 'OBJECT'; name: 'WorkspaceConnection'; ofType: null; } }; }; };
    'QueryComplexity': { kind: 'OBJECT'; name: 'QueryComplexity'; fields: { 'limit': { name: 'limit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'score': { name: 'score'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'QueueingDelayHistory': { kind: 'OBJECT'; name: 'QueueingDelayHistory'; fields: { 'timeSeries': { name: 'timeSeries'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'QueueingHistoryTimeSeries'; ofType: null; }; }; } }; }; };
    'QueueingHistoryTimeSeries': { kind: 'OBJECT'; name: 'QueueingHistoryTimeSeries'; fields: { 'p50': { name: 'p50'; type: { kind: 'SCALAR'; name: 'Duration'; ofType: null; } }; 'p75': { name: 'p75'; type: { kind: 'SCALAR'; name: 'Duration'; ofType: null; } }; 'p90': { name: 'p90'; type: { kind: 'SCALAR'; name: 'Duration'; ofType: null; } }; 'p95': { name: 'p95'; type: { kind: 'SCALAR'; name: 'Duration'; ofType: null; } }; 'p99': { name: 'p99'; type: { kind: 'SCALAR'; name: 'Duration'; ofType: null; } }; 'time': { name: 'time'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'RecentFailures': { kind: 'OBJECT'; name: 'RecentFailures'; fields: { 'baseBranch': { name: 'baseBranch'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'count': { name: 'count'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'RefType': { kind: 'ENUM'; name: 'RefType'; type: 'HEADS' | 'TAGS'; };
    'RefreshStandardsAdherenceChecksInput': { kind: 'INPUT_OBJECT'; name: 'RefreshStandardsAdherenceChecksInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'RefreshStandardsAdherenceChecksPayload': { kind: 'OBJECT'; name: 'RefreshStandardsAdherenceChecksPayload'; fields: { 'adherenceChecksStatus': { name: 'adherenceChecksStatus'; type: { kind: 'OBJECT'; name: 'StandardsAdherenceChecksStatus'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'Registrable': { kind: 'UNION'; name: 'Registrable'; fields: {}; possibleTypes: 'CiSecureFileRegistry' | 'ContainerRepositoryRegistry' | 'DependencyProxyBlobRegistry' | 'DependencyProxyManifestRegistry' | 'DesignManagementRepositoryRegistry' | 'GroupWikiRepositoryRegistry' | 'JobArtifactRegistry' | 'LfsObjectRegistry' | 'MergeRequestDiffRegistry' | 'PackageFileRegistry' | 'PagesDeploymentRegistry' | 'PipelineArtifactRegistry' | 'ProjectWikiRepositoryRegistry' | 'SnippetRepositoryRegistry' | 'TerraformStateVersionRegistry' | 'UploadRegistry'; };
    'RegistryState': { kind: 'ENUM'; name: 'RegistryState'; type: 'PENDING' | 'STARTED' | 'SYNCED' | 'FAILED'; };
    'RelativePositionType': { kind: 'ENUM'; name: 'RelativePositionType'; type: 'BEFORE' | 'AFTER'; };
    'Release': { kind: 'OBJECT'; name: 'Release'; fields: { 'assets': { name: 'assets'; type: { kind: 'OBJECT'; name: 'ReleaseAssets'; ofType: null; } }; 'author': { name: 'author'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'commit': { name: 'commit'; type: { kind: 'OBJECT'; name: 'Commit'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'evidences': { name: 'evidences'; type: { kind: 'OBJECT'; name: 'ReleaseEvidenceConnection'; ofType: null; } }; 'historicalRelease': { name: 'historicalRelease'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ReleaseID'; ofType: null; }; } }; 'links': { name: 'links'; type: { kind: 'OBJECT'; name: 'ReleaseLinks'; ofType: null; } }; 'milestones': { name: 'milestones'; type: { kind: 'OBJECT'; name: 'MilestoneConnection'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'releasedAt': { name: 'releasedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'tagName': { name: 'tagName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tagPath': { name: 'tagPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'upcomingRelease': { name: 'upcomingRelease'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'ReleaseAssetLink': { kind: 'OBJECT'; name: 'ReleaseAssetLink'; fields: { 'directAssetPath': { name: 'directAssetPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'directAssetUrl': { name: 'directAssetUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'linkType': { name: 'linkType'; type: { kind: 'ENUM'; name: 'ReleaseAssetLinkType'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ReleaseAssetLinkConnection': { kind: 'OBJECT'; name: 'ReleaseAssetLinkConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ReleaseAssetLinkEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ReleaseAssetLink'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ReleaseAssetLinkCreateInput': { kind: 'INPUT_OBJECT'; name: 'ReleaseAssetLinkCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'directAssetPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'linkType'; type: { kind: 'ENUM'; name: 'ReleaseAssetLinkType'; ofType: null; }; defaultValue: "OTHER" }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'tagName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'ReleaseAssetLinkCreatePayload': { kind: 'OBJECT'; name: 'ReleaseAssetLinkCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'link': { name: 'link'; type: { kind: 'OBJECT'; name: 'ReleaseAssetLink'; ofType: null; } }; }; };
    'ReleaseAssetLinkDeleteInput': { kind: 'INPUT_OBJECT'; name: 'ReleaseAssetLinkDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ReleasesLinkID'; ofType: null; }; }; defaultValue: null }]; };
    'ReleaseAssetLinkDeletePayload': { kind: 'OBJECT'; name: 'ReleaseAssetLinkDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'link': { name: 'link'; type: { kind: 'OBJECT'; name: 'ReleaseAssetLink'; ofType: null; } }; }; };
    'ReleaseAssetLinkEdge': { kind: 'OBJECT'; name: 'ReleaseAssetLinkEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ReleaseAssetLink'; ofType: null; } }; }; };
    'ReleaseAssetLinkInput': { kind: 'INPUT_OBJECT'; name: 'ReleaseAssetLinkInput'; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'directAssetPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'linkType'; type: { kind: 'ENUM'; name: 'ReleaseAssetLinkType'; ofType: null; }; defaultValue: "OTHER" }]; };
    'ReleaseAssetLinkType': { kind: 'ENUM'; name: 'ReleaseAssetLinkType'; type: 'OTHER' | 'RUNBOOK' | 'PACKAGE' | 'IMAGE'; };
    'ReleaseAssetLinkUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ReleaseAssetLinkUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ReleasesLinkID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'directAssetPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'linkType'; type: { kind: 'ENUM'; name: 'ReleaseAssetLinkType'; ofType: null; }; defaultValue: null }]; };
    'ReleaseAssetLinkUpdatePayload': { kind: 'OBJECT'; name: 'ReleaseAssetLinkUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'link': { name: 'link'; type: { kind: 'OBJECT'; name: 'ReleaseAssetLink'; ofType: null; } }; }; };
    'ReleaseAssets': { kind: 'OBJECT'; name: 'ReleaseAssets'; fields: { 'count': { name: 'count'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'links': { name: 'links'; type: { kind: 'OBJECT'; name: 'ReleaseAssetLinkConnection'; ofType: null; } }; 'sources': { name: 'sources'; type: { kind: 'OBJECT'; name: 'ReleaseSourceConnection'; ofType: null; } }; }; };
    'ReleaseAssetsInput': { kind: 'INPUT_OBJECT'; name: 'ReleaseAssetsInput'; inputFields: [{ name: 'links'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ReleaseAssetLinkInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'ReleaseConnection': { kind: 'OBJECT'; name: 'ReleaseConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ReleaseEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Release'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ReleaseCreateInput': { kind: 'INPUT_OBJECT'; name: 'ReleaseCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'tagName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'tagMessage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ref'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'releasedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; defaultValue: null }, { name: 'milestones'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'assets'; type: { kind: 'INPUT_OBJECT'; name: 'ReleaseAssetsInput'; ofType: null; }; defaultValue: null }]; };
    'ReleaseCreatePayload': { kind: 'OBJECT'; name: 'ReleaseCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'release': { name: 'release'; type: { kind: 'OBJECT'; name: 'Release'; ofType: null; } }; }; };
    'ReleaseDeleteInput': { kind: 'INPUT_OBJECT'; name: 'ReleaseDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'tagName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'ReleaseDeletePayload': { kind: 'OBJECT'; name: 'ReleaseDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'release': { name: 'release'; type: { kind: 'OBJECT'; name: 'Release'; ofType: null; } }; }; };
    'ReleaseEdge': { kind: 'OBJECT'; name: 'ReleaseEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Release'; ofType: null; } }; }; };
    'ReleaseEvidence': { kind: 'OBJECT'; name: 'ReleaseEvidence'; fields: { 'collectedAt': { name: 'collectedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'filepath': { name: 'filepath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'sha': { name: 'sha'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ReleaseEvidenceConnection': { kind: 'OBJECT'; name: 'ReleaseEvidenceConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ReleaseEvidenceEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ReleaseEvidence'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ReleaseEvidenceEdge': { kind: 'OBJECT'; name: 'ReleaseEvidenceEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ReleaseEvidence'; ofType: null; } }; }; };
    'ReleaseID': unknown;
    'ReleaseLinks': { kind: 'OBJECT'; name: 'ReleaseLinks'; fields: { 'closedIssuesUrl': { name: 'closedIssuesUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'closedMergeRequestsUrl': { name: 'closedMergeRequestsUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'editUrl': { name: 'editUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'mergedMergeRequestsUrl': { name: 'mergedMergeRequestsUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'openedIssuesUrl': { name: 'openedIssuesUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'openedMergeRequestsUrl': { name: 'openedMergeRequestsUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'selfUrl': { name: 'selfUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ReleaseSort': { kind: 'ENUM'; name: 'ReleaseSort'; type: 'CREATED_DESC' | 'CREATED_ASC' | 'RELEASED_AT_DESC' | 'RELEASED_AT_ASC'; };
    'ReleaseSource': { kind: 'OBJECT'; name: 'ReleaseSource'; fields: { 'format': { name: 'format'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ReleaseSourceConnection': { kind: 'OBJECT'; name: 'ReleaseSourceConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ReleaseSourceEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ReleaseSource'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ReleaseSourceEdge': { kind: 'OBJECT'; name: 'ReleaseSourceEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ReleaseSource'; ofType: null; } }; }; };
    'ReleaseTagWildcardId': { kind: 'ENUM'; name: 'ReleaseTagWildcardId'; type: 'NONE' | 'ANY'; };
    'ReleaseUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ReleaseUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'tagName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'releasedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; defaultValue: null }, { name: 'milestones'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'ReleaseUpdatePayload': { kind: 'OBJECT'; name: 'ReleaseUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'release': { name: 'release'; type: { kind: 'OBJECT'; name: 'Release'; ofType: null; } }; }; };
    'ReleasesLinkID': unknown;
    'RemoteDevelopmentWorkspaceID': unknown;
    'RemoveProjectFromSecurityDashboardInput': { kind: 'INPUT_OBJECT'; name: 'RemoveProjectFromSecurityDashboardInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectID'; ofType: null; }; }; defaultValue: null }]; };
    'RemoveProjectFromSecurityDashboardPayload': { kind: 'OBJECT'; name: 'RemoveProjectFromSecurityDashboardPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'ReplicationStateEnum': { kind: 'ENUM'; name: 'ReplicationStateEnum'; type: 'PENDING' | 'STARTED' | 'SYNCED' | 'FAILED'; };
    'RepositionImageDiffNoteInput': { kind: 'INPUT_OBJECT'; name: 'RepositionImageDiffNoteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DiffNoteID'; ofType: null; }; }; defaultValue: null }, { name: 'position'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'UpdateDiffImagePositionInput'; ofType: null; }; }; defaultValue: null }]; };
    'RepositionImageDiffNotePayload': { kind: 'OBJECT'; name: 'RepositionImageDiffNotePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'note': { name: 'note'; type: { kind: 'OBJECT'; name: 'Note'; ofType: null; } }; }; };
    'Repository': { kind: 'OBJECT'; name: 'Repository'; fields: { 'blobs': { name: 'blobs'; type: { kind: 'OBJECT'; name: 'RepositoryBlobConnection'; ofType: null; } }; 'branchNames': { name: 'branchNames'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'codeOwnersPath': { name: 'codeOwnersPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'diskPath': { name: 'diskPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'empty': { name: 'empty'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'exists': { name: 'exists'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'paginatedTree': { name: 'paginatedTree'; type: { kind: 'OBJECT'; name: 'TreeConnection'; ofType: null; } }; 'rootRef': { name: 'rootRef'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tree': { name: 'tree'; type: { kind: 'OBJECT'; name: 'Tree'; ofType: null; } }; 'validateCodeownerFile': { name: 'validateCodeownerFile'; type: { kind: 'OBJECT'; name: 'RepositoryCodeownerValidation'; ofType: null; } }; }; };
    'RepositoryBlob': { kind: 'OBJECT'; name: 'RepositoryBlob'; fields: { 'archived': { name: 'archived'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'blame': { name: 'blame'; type: { kind: 'OBJECT'; name: 'Blame'; ofType: null; } }; 'blamePath': { name: 'blamePath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'canCurrentUserPushToBranch': { name: 'canCurrentUserPushToBranch'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'canModifyBlob': { name: 'canModifyBlob'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'codeNavigationPath': { name: 'codeNavigationPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'codeOwners': { name: 'codeOwners'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; }; } }; 'editBlobPath': { name: 'editBlobPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'environmentExternalUrlForRouteMap': { name: 'environmentExternalUrlForRouteMap'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'environmentFormattedExternalUrl': { name: 'environmentFormattedExternalUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'externalStorage': { name: 'externalStorage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'externalStorageUrl': { name: 'externalStorageUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fileType': { name: 'fileType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'findFilePath': { name: 'findFilePath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'forkAndEditPath': { name: 'forkAndEditPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'forkAndViewPath': { name: 'forkAndViewPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'gitpodBlobUrl': { name: 'gitpodBlobUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'historyPath': { name: 'historyPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'ideEditPath': { name: 'ideEditPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'ideForkAndEditPath': { name: 'ideForkAndEditPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'language': { name: 'language'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lfsOid': { name: 'lfsOid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'mode': { name: 'mode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'oid': { name: 'oid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'permalinkPath': { name: 'permalinkPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'pipelineEditorPath': { name: 'pipelineEditorPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'plainData': { name: 'plainData'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'projectBlobPathRoot': { name: 'projectBlobPathRoot'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'rawBlob': { name: 'rawBlob'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'rawPath': { name: 'rawPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'rawSize': { name: 'rawSize'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'rawTextBlob': { name: 'rawTextBlob'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'replacePath': { name: 'replacePath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'richViewer': { name: 'richViewer'; type: { kind: 'OBJECT'; name: 'BlobViewer'; ofType: null; } }; 'simpleViewer': { name: 'simpleViewer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BlobViewer'; ofType: null; }; } }; 'size': { name: 'size'; type: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; } }; 'storedExternally': { name: 'storedExternally'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'webPath': { name: 'webPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'RepositoryBlobConnection': { kind: 'OBJECT'; name: 'RepositoryBlobConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'RepositoryBlobEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'RepositoryBlob'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'RepositoryBlobEdge': { kind: 'OBJECT'; name: 'RepositoryBlobEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'RepositoryBlob'; ofType: null; } }; }; };
    'RepositoryCodeownerError': { kind: 'OBJECT'; name: 'RepositoryCodeownerError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'lines': { name: 'lines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; }; } }; }; };
    'RepositoryCodeownerValidation': { kind: 'OBJECT'; name: 'RepositoryCodeownerValidation'; fields: { 'total': { name: 'total'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'validationErrors': { name: 'validationErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RepositoryCodeownerError'; ofType: null; }; }; }; } }; }; };
    'RepositoryLanguage': { kind: 'OBJECT'; name: 'RepositoryLanguage'; fields: { 'color': { name: 'color'; type: { kind: 'SCALAR'; name: 'Color'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'share': { name: 'share'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'Requirement': { kind: 'OBJECT'; name: 'Requirement'; fields: { 'author': { name: 'author'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'iid': { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastTestReportManuallyCreated': { name: 'lastTestReportManuallyCreated'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'lastTestReportState': { name: 'lastTestReportState'; type: { kind: 'ENUM'; name: 'TestReportState'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'RequirementState'; ofType: null; }; } }; 'testReports': { name: 'testReports'; type: { kind: 'OBJECT'; name: 'TestReportConnection'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'titleHtml': { name: 'titleHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'RequirementPermissions'; ofType: null; }; } }; 'workItemIid': { name: 'workItemIid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'RequirementConnection': { kind: 'OBJECT'; name: 'RequirementConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'RequirementEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Requirement'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'RequirementEdge': { kind: 'OBJECT'; name: 'RequirementEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Requirement'; ofType: null; } }; }; };
    'RequirementLegacyFilterInput': { kind: 'INPUT_OBJECT'; name: 'RequirementLegacyFilterInput'; inputFields: [{ name: 'legacyIids'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'RequirementPermissions': { kind: 'OBJECT'; name: 'RequirementPermissions'; fields: { 'adminRequirement': { name: 'adminRequirement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createRequirement': { name: 'createRequirement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'destroyRequirement': { name: 'destroyRequirement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readRequirement': { name: 'readRequirement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updateRequirement': { name: 'updateRequirement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'RequirementState': { kind: 'ENUM'; name: 'RequirementState'; type: 'OPENED' | 'ARCHIVED'; };
    'RequirementStatesCount': { kind: 'OBJECT'; name: 'RequirementStatesCount'; fields: { 'archived': { name: 'archived'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'opened': { name: 'opened'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'RequirementStatusFilter': { kind: 'ENUM'; name: 'RequirementStatusFilter'; type: 'MISSING' | 'PASSED' | 'FAILED'; };
    'ResolvableInterface': { kind: 'INTERFACE'; name: 'ResolvableInterface'; fields: { 'resolvable': { name: 'resolvable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'resolved': { name: 'resolved'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'resolvedAt': { name: 'resolvedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'resolvedBy': { name: 'resolvedBy'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; }; possibleTypes: 'Discussion' | 'Note'; };
    'RootStorageStatistics': { kind: 'OBJECT'; name: 'RootStorageStatistics'; fields: { 'buildArtifactsSize': { name: 'buildArtifactsSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'containerRegistrySize': { name: 'containerRegistrySize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'containerRegistrySizeIsEstimated': { name: 'containerRegistrySizeIsEstimated'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'costFactoredStorageSize': { name: 'costFactoredStorageSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'dependencyProxySize': { name: 'dependencyProxySize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'lfsObjectsSize': { name: 'lfsObjectsSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'packagesSize': { name: 'packagesSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'pipelineArtifactsSize': { name: 'pipelineArtifactsSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'registrySizeEstimated': { name: 'registrySizeEstimated'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'repositorySize': { name: 'repositorySize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'snippetsSize': { name: 'snippetsSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'storageSize': { name: 'storageSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'uploadsSize': { name: 'uploadsSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'wikiSize': { name: 'wikiSize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'RunnerArchitecture': { kind: 'OBJECT'; name: 'RunnerArchitecture'; fields: { 'downloadLocation': { name: 'downloadLocation'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'RunnerArchitectureConnection': { kind: 'OBJECT'; name: 'RunnerArchitectureConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'RunnerArchitectureEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'RunnerArchitecture'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'RunnerArchitectureEdge': { kind: 'OBJECT'; name: 'RunnerArchitectureEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'RunnerArchitecture'; ofType: null; } }; }; };
    'RunnerCreateInput': { kind: 'INPUT_OBJECT'; name: 'RunnerCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'maintenanceNote'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'maximumTimeout'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'accessLevel'; type: { kind: 'ENUM'; name: 'CiRunnerAccessLevel'; ofType: null; }; defaultValue: null }, { name: 'paused'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'locked'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'runUntagged'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'tagList'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'runnerType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CiRunnerType'; ofType: null; }; }; defaultValue: null }, { name: 'groupId'; type: { kind: 'SCALAR'; name: 'GroupID'; ofType: null; }; defaultValue: null }, { name: 'projectId'; type: { kind: 'SCALAR'; name: 'ProjectID'; ofType: null; }; defaultValue: null }]; };
    'RunnerCreatePayload': { kind: 'OBJECT'; name: 'RunnerCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'runner': { name: 'runner'; type: { kind: 'OBJECT'; name: 'CiRunner'; ofType: null; } }; }; };
    'RunnerDeleteInput': { kind: 'INPUT_OBJECT'; name: 'RunnerDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiRunnerID'; ofType: null; }; }; defaultValue: null }]; };
    'RunnerDeletePayload': { kind: 'OBJECT'; name: 'RunnerDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'RunnerPermissions': { kind: 'OBJECT'; name: 'RunnerPermissions'; fields: { 'assignRunner': { name: 'assignRunner'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deleteRunner': { name: 'deleteRunner'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readRunner': { name: 'readRunner'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updateRunner': { name: 'updateRunner'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'RunnerPlatform': { kind: 'OBJECT'; name: 'RunnerPlatform'; fields: { 'architectures': { name: 'architectures'; type: { kind: 'OBJECT'; name: 'RunnerArchitectureConnection'; ofType: null; } }; 'humanReadableName': { name: 'humanReadableName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'RunnerPlatformConnection': { kind: 'OBJECT'; name: 'RunnerPlatformConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'RunnerPlatformEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'RunnerPlatform'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'RunnerPlatformEdge': { kind: 'OBJECT'; name: 'RunnerPlatformEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'RunnerPlatform'; ofType: null; } }; }; };
    'RunnerSetup': { kind: 'OBJECT'; name: 'RunnerSetup'; fields: { 'installInstructions': { name: 'installInstructions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'registerInstructions': { name: 'registerInstructions'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'RunnerUpdateInput': { kind: 'INPUT_OBJECT'; name: 'RunnerUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'maintenanceNote'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'maximumTimeout'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'accessLevel'; type: { kind: 'ENUM'; name: 'CiRunnerAccessLevel'; ofType: null; }; defaultValue: null }, { name: 'paused'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'locked'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'runUntagged'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'tagList'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'CiRunnerID'; ofType: null; }; }; defaultValue: null }, { name: 'associatedProjects'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectID'; ofType: null; }; }; }; defaultValue: null }, { name: 'publicProjectsMinutesCostFactor'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'privateProjectsMinutesCostFactor'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }]; };
    'RunnerUpdatePayload': { kind: 'OBJECT'; name: 'RunnerUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'runner': { name: 'runner'; type: { kind: 'OBJECT'; name: 'CiRunner'; ofType: null; } }; }; };
    'RunnersExportUsageInput': { kind: 'INPUT_OBJECT'; name: 'RunnersExportUsageInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'ENUM'; name: 'CiRunnerType'; ofType: null; }; defaultValue: null }, { name: 'fromDate'; type: { kind: 'SCALAR'; name: 'ISO8601Date'; ofType: null; }; defaultValue: null }, { name: 'toDate'; type: { kind: 'SCALAR'; name: 'ISO8601Date'; ofType: null; }; defaultValue: null }, { name: 'maxProjectCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: "1000" }]; };
    'RunnersExportUsagePayload': { kind: 'OBJECT'; name: 'RunnersExportUsagePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'RunnersRegistrationTokenResetInput': { kind: 'INPUT_OBJECT'; name: 'RunnersRegistrationTokenResetInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CiRunnerType'; ofType: null; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'RunnersRegistrationTokenResetPayload': { kind: 'OBJECT'; name: 'RunnersRegistrationTokenResetPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SastCiConfiguration': { kind: 'OBJECT'; name: 'SastCiConfiguration'; fields: { 'analyzers': { name: 'analyzers'; type: { kind: 'OBJECT'; name: 'SastCiConfigurationAnalyzersEntityConnection'; ofType: null; } }; 'global': { name: 'global'; type: { kind: 'OBJECT'; name: 'SastCiConfigurationEntityConnection'; ofType: null; } }; 'pipeline': { name: 'pipeline'; type: { kind: 'OBJECT'; name: 'SastCiConfigurationEntityConnection'; ofType: null; } }; }; };
    'SastCiConfigurationAnalyzersEntity': { kind: 'OBJECT'; name: 'SastCiConfigurationAnalyzersEntity'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'enabled': { name: 'enabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'label': { name: 'label'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'variables': { name: 'variables'; type: { kind: 'OBJECT'; name: 'SastCiConfigurationEntityConnection'; ofType: null; } }; }; };
    'SastCiConfigurationAnalyzersEntityConnection': { kind: 'OBJECT'; name: 'SastCiConfigurationAnalyzersEntityConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SastCiConfigurationAnalyzersEntityEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SastCiConfigurationAnalyzersEntity'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SastCiConfigurationAnalyzersEntityEdge': { kind: 'OBJECT'; name: 'SastCiConfigurationAnalyzersEntityEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'SastCiConfigurationAnalyzersEntity'; ofType: null; } }; }; };
    'SastCiConfigurationAnalyzersEntityInput': { kind: 'INPUT_OBJECT'; name: 'SastCiConfigurationAnalyzersEntityInput'; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'variables'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SastCiConfigurationEntityInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'SastCiConfigurationEntity': { kind: 'OBJECT'; name: 'SastCiConfigurationEntity'; fields: { 'defaultValue': { name: 'defaultValue'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'label': { name: 'label'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'options': { name: 'options'; type: { kind: 'OBJECT'; name: 'SastCiConfigurationOptionsEntityConnection'; ofType: null; } }; 'size': { name: 'size'; type: { kind: 'ENUM'; name: 'SastUiComponentSize'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SastCiConfigurationEntityConnection': { kind: 'OBJECT'; name: 'SastCiConfigurationEntityConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SastCiConfigurationEntityEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SastCiConfigurationEntity'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SastCiConfigurationEntityEdge': { kind: 'OBJECT'; name: 'SastCiConfigurationEntityEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'SastCiConfigurationEntity'; ofType: null; } }; }; };
    'SastCiConfigurationEntityInput': { kind: 'INPUT_OBJECT'; name: 'SastCiConfigurationEntityInput'; inputFields: [{ name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'defaultValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'SastCiConfigurationInput': { kind: 'INPUT_OBJECT'; name: 'SastCiConfigurationInput'; inputFields: [{ name: 'global'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SastCiConfigurationEntityInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'pipeline'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SastCiConfigurationEntityInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'analyzers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SastCiConfigurationAnalyzersEntityInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'SastCiConfigurationOptionsEntity': { kind: 'OBJECT'; name: 'SastCiConfigurationOptionsEntity'; fields: { 'label': { name: 'label'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SastCiConfigurationOptionsEntityConnection': { kind: 'OBJECT'; name: 'SastCiConfigurationOptionsEntityConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SastCiConfigurationOptionsEntityEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SastCiConfigurationOptionsEntity'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SastCiConfigurationOptionsEntityEdge': { kind: 'OBJECT'; name: 'SastCiConfigurationOptionsEntityEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'SastCiConfigurationOptionsEntity'; ofType: null; } }; }; };
    'SastUiComponentSize': { kind: 'ENUM'; name: 'SastUiComponentSize'; type: 'SMALL' | 'MEDIUM' | 'LARGE'; };
    'SavedReply': { kind: 'OBJECT'; name: 'SavedReply'; fields: { 'content': { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UsersSavedReplyID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SavedReplyConnection': { kind: 'OBJECT'; name: 'SavedReplyConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedReplyEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SavedReply'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SavedReplyCreateInput': { kind: 'INPUT_OBJECT'; name: 'SavedReplyCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'SavedReplyCreatePayload': { kind: 'OBJECT'; name: 'SavedReplyCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'savedReply': { name: 'savedReply'; type: { kind: 'OBJECT'; name: 'SavedReply'; ofType: null; } }; }; };
    'SavedReplyDestroyInput': { kind: 'INPUT_OBJECT'; name: 'SavedReplyDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UsersSavedReplyID'; ofType: null; }; }; defaultValue: null }]; };
    'SavedReplyDestroyPayload': { kind: 'OBJECT'; name: 'SavedReplyDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'savedReply': { name: 'savedReply'; type: { kind: 'OBJECT'; name: 'SavedReply'; ofType: null; } }; }; };
    'SavedReplyEdge': { kind: 'OBJECT'; name: 'SavedReplyEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'SavedReply'; ofType: null; } }; }; };
    'SavedReplyUpdateInput': { kind: 'INPUT_OBJECT'; name: 'SavedReplyUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UsersSavedReplyID'; ofType: null; }; }; defaultValue: null }]; };
    'SavedReplyUpdatePayload': { kind: 'OBJECT'; name: 'SavedReplyUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'savedReply': { name: 'savedReply'; type: { kind: 'OBJECT'; name: 'SavedReply'; ofType: null; } }; }; };
    'Scan': { kind: 'OBJECT'; name: 'Scan'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ScanStatus'; ofType: null; }; } }; 'warnings': { name: 'warnings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'ScanConnection': { kind: 'OBJECT'; name: 'ScanConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ScanEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Scan'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ScanEdge': { kind: 'OBJECT'; name: 'ScanEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Scan'; ofType: null; } }; }; };
    'ScanExecutionPolicy': { kind: 'OBJECT'; name: 'ScanExecutionPolicy'; fields: { 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'editPath': { name: 'editPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'policyScope': { name: 'policyScope'; type: { kind: 'OBJECT'; name: 'PolicyScope'; ofType: null; } }; 'source': { name: 'source'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'SecurityPolicySource'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'yaml': { name: 'yaml'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ScanExecutionPolicyCommitInput': { kind: 'INPUT_OBJECT'; name: 'ScanExecutionPolicyCommitInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fullPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'policyYaml'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'operationMode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MutationOperationMode'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'ScanExecutionPolicyCommitPayload': { kind: 'OBJECT'; name: 'ScanExecutionPolicyCommitPayload'; fields: { 'branch': { name: 'branch'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'validationErrors': { name: 'validationErrors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SecurityPolicyValidationError'; ofType: null; }; }; } }; }; };
    'ScanExecutionPolicyConnection': { kind: 'OBJECT'; name: 'ScanExecutionPolicyConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ScanExecutionPolicyEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ScanExecutionPolicy'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ScanExecutionPolicyEdge': { kind: 'OBJECT'; name: 'ScanExecutionPolicyEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ScanExecutionPolicy'; ofType: null; } }; }; };
    'ScanResultPolicy': { kind: 'OBJECT'; name: 'ScanResultPolicy'; fields: { 'allGroupApprovers': { name: 'allGroupApprovers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PolicyApprovalGroup'; ofType: null; }; }; } }; 'deprecatedProperties': { name: 'deprecatedProperties'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'editPath': { name: 'editPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'enabled': { name: 'enabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'groupApprovers': { name: 'groupApprovers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Group'; ofType: null; }; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'policyScope': { name: 'policyScope'; type: { kind: 'OBJECT'; name: 'PolicyScope'; ofType: null; } }; 'roleApprovers': { name: 'roleApprovers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MemberAccessLevelName'; ofType: null; }; }; } }; 'source': { name: 'source'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'SecurityPolicySource'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'userApprovers': { name: 'userApprovers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; }; } }; 'yaml': { name: 'yaml'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ScanResultPolicyConnection': { kind: 'OBJECT'; name: 'ScanResultPolicyConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ScanResultPolicyEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ScanResultPolicy'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ScanResultPolicyEdge': { kind: 'OBJECT'; name: 'ScanResultPolicyEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ScanResultPolicy'; ofType: null; } }; }; };
    'ScanStatus': { kind: 'ENUM'; name: 'ScanStatus'; type: 'CREATED' | 'SUCCEEDED' | 'JOB_FAILED' | 'REPORT_ERROR' | 'PREPARING' | 'PREPARATION_FAILED' | 'PURGED'; };
    'ScannedResource': { kind: 'OBJECT'; name: 'ScannedResource'; fields: { 'requestMethod': { name: 'requestMethod'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ScannedResourceConnection': { kind: 'OBJECT'; name: 'ScannedResourceConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ScannedResourceEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ScannedResource'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ScannedResourceEdge': { kind: 'OBJECT'; name: 'ScannedResourceEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ScannedResource'; ofType: null; } }; }; };
    'SecurityFindingCreateIssueInput': { kind: 'INPUT_OBJECT'; name: 'SecurityFindingCreateIssueInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'uuid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'project'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectID'; ofType: null; }; }; defaultValue: null }]; };
    'SecurityFindingCreateIssuePayload': { kind: 'OBJECT'; name: 'SecurityFindingCreateIssuePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'SecurityFindingCreateMergeRequestInput': { kind: 'INPUT_OBJECT'; name: 'SecurityFindingCreateMergeRequestInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'uuid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'SecurityFindingCreateMergeRequestPayload': { kind: 'OBJECT'; name: 'SecurityFindingCreateMergeRequestPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; }; };
    'SecurityFindingDismissInput': { kind: 'INPUT_OBJECT'; name: 'SecurityFindingDismissInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'uuid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'comment'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'dismissalReason'; type: { kind: 'ENUM'; name: 'VulnerabilityDismissalReason'; ofType: null; }; defaultValue: null }]; };
    'SecurityFindingDismissPayload': { kind: 'OBJECT'; name: 'SecurityFindingDismissPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'securityFinding': { name: 'securityFinding'; type: { kind: 'OBJECT'; name: 'PipelineSecurityReportFinding'; ofType: null; } }; 'uuid': { name: 'uuid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SecurityFindingRevertToDetectedInput': { kind: 'INPUT_OBJECT'; name: 'SecurityFindingRevertToDetectedInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'uuid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'comment'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'SecurityFindingRevertToDetectedPayload': { kind: 'OBJECT'; name: 'SecurityFindingRevertToDetectedPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'securityFinding': { name: 'securityFinding'; type: { kind: 'OBJECT'; name: 'PipelineSecurityReportFinding'; ofType: null; } }; }; };
    'SecurityPolicyProjectAssignInput': { kind: 'INPUT_OBJECT'; name: 'SecurityPolicyProjectAssignInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fullPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'securityPolicyProjectId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectID'; ofType: null; }; }; defaultValue: null }]; };
    'SecurityPolicyProjectAssignPayload': { kind: 'OBJECT'; name: 'SecurityPolicyProjectAssignPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'SecurityPolicyProjectCreateInput': { kind: 'INPUT_OBJECT'; name: 'SecurityPolicyProjectCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fullPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'SecurityPolicyProjectCreatePayload': { kind: 'OBJECT'; name: 'SecurityPolicyProjectCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; }; };
    'SecurityPolicyProjectUnassignInput': { kind: 'INPUT_OBJECT'; name: 'SecurityPolicyProjectUnassignInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fullPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'SecurityPolicyProjectUnassignPayload': { kind: 'OBJECT'; name: 'SecurityPolicyProjectUnassignPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'SecurityPolicyRelationType': { kind: 'ENUM'; name: 'SecurityPolicyRelationType'; type: 'DIRECT' | 'INHERITED' | 'INHERITED_ONLY' | 'DESCENDANT'; };
    'SecurityPolicySource': { kind: 'UNION'; name: 'SecurityPolicySource'; fields: {}; possibleTypes: 'GroupSecurityPolicySource' | 'ProjectSecurityPolicySource'; };
    'SecurityPolicyValidationError': { kind: 'OBJECT'; name: 'SecurityPolicyValidationError'; fields: { 'field': { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'level': { name: 'level'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SecurityReportSummary': { kind: 'OBJECT'; name: 'SecurityReportSummary'; fields: { 'apiFuzzing': { name: 'apiFuzzing'; type: { kind: 'OBJECT'; name: 'SecurityReportSummarySection'; ofType: null; } }; 'clusterImageScanning': { name: 'clusterImageScanning'; type: { kind: 'OBJECT'; name: 'SecurityReportSummarySection'; ofType: null; } }; 'containerScanning': { name: 'containerScanning'; type: { kind: 'OBJECT'; name: 'SecurityReportSummarySection'; ofType: null; } }; 'coverageFuzzing': { name: 'coverageFuzzing'; type: { kind: 'OBJECT'; name: 'SecurityReportSummarySection'; ofType: null; } }; 'dast': { name: 'dast'; type: { kind: 'OBJECT'; name: 'SecurityReportSummarySection'; ofType: null; } }; 'dependencyScanning': { name: 'dependencyScanning'; type: { kind: 'OBJECT'; name: 'SecurityReportSummarySection'; ofType: null; } }; 'generic': { name: 'generic'; type: { kind: 'OBJECT'; name: 'SecurityReportSummarySection'; ofType: null; } }; 'sast': { name: 'sast'; type: { kind: 'OBJECT'; name: 'SecurityReportSummarySection'; ofType: null; } }; 'secretDetection': { name: 'secretDetection'; type: { kind: 'OBJECT'; name: 'SecurityReportSummarySection'; ofType: null; } }; }; };
    'SecurityReportSummarySection': { kind: 'OBJECT'; name: 'SecurityReportSummarySection'; fields: { 'scannedResources': { name: 'scannedResources'; type: { kind: 'OBJECT'; name: 'ScannedResourceConnection'; ofType: null; } }; 'scannedResourcesCount': { name: 'scannedResourcesCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'scannedResourcesCsvPath': { name: 'scannedResourcesCsvPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'scans': { name: 'scans'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ScanConnection'; ofType: null; }; } }; 'vulnerabilitiesCount': { name: 'vulnerabilitiesCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'SecurityReportTypeEnum': { kind: 'ENUM'; name: 'SecurityReportTypeEnum'; type: 'SAST' | 'SAST_IAC' | 'BREACH_AND_ATTACK_SIMULATION' | 'DAST' | 'DEPENDENCY_SCANNING' | 'CONTAINER_SCANNING' | 'SECRET_DETECTION' | 'COVERAGE_FUZZING' | 'API_FUZZING' | 'CLUSTER_IMAGE_SCANNING'; };
    'SecurityScannerType': { kind: 'ENUM'; name: 'SecurityScannerType'; type: 'SAST' | 'SAST_IAC' | 'BREACH_AND_ATTACK_SIMULATION' | 'DAST' | 'DEPENDENCY_SCANNING' | 'CONTAINER_SCANNING' | 'SECRET_DETECTION' | 'COVERAGE_FUZZING' | 'API_FUZZING' | 'CLUSTER_IMAGE_SCANNING'; };
    'SecurityScanners': { kind: 'OBJECT'; name: 'SecurityScanners'; fields: { 'available': { name: 'available'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SecurityScannerType'; ofType: null; }; }; } }; 'enabled': { name: 'enabled'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SecurityScannerType'; ofType: null; }; }; } }; 'pipelineRun': { name: 'pipelineRun'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SecurityScannerType'; ofType: null; }; }; } }; }; };
    'SecurityTrainingProviderID': unknown;
    'SecurityTrainingUpdateInput': { kind: 'INPUT_OBJECT'; name: 'SecurityTrainingUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'providerId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'SecurityTrainingProviderID'; ofType: null; }; }; defaultValue: null }, { name: 'isEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'isPrimary'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'SecurityTrainingUpdatePayload': { kind: 'OBJECT'; name: 'SecurityTrainingUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'training': { name: 'training'; type: { kind: 'OBJECT'; name: 'ProjectSecurityTraining'; ofType: null; } }; }; };
    'SecurityTrainingUrl': { kind: 'OBJECT'; name: 'SecurityTrainingUrl'; fields: { 'identifier': { name: 'identifier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'TrainingUrlRequestStatus'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SentryDetailedError': { kind: 'OBJECT'; name: 'SentryDetailedError'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'culprit': { name: 'culprit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'externalBaseUrl': { name: 'externalBaseUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'externalUrl': { name: 'externalUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'firstReleaseLastCommit': { name: 'firstReleaseLastCommit'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'firstReleaseShortVersion': { name: 'firstReleaseShortVersion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'firstReleaseVersion': { name: 'firstReleaseVersion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'firstSeen': { name: 'firstSeen'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'frequency': { name: 'frequency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SentryErrorFrequency'; ofType: null; }; }; }; } }; 'gitlabCommit': { name: 'gitlabCommit'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'gitlabCommitPath': { name: 'gitlabCommitPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'gitlabIssuePath': { name: 'gitlabIssuePath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'integrated': { name: 'integrated'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'lastReleaseLastCommit': { name: 'lastReleaseLastCommit'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastReleaseShortVersion': { name: 'lastReleaseShortVersion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastReleaseVersion': { name: 'lastReleaseVersion'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSeen': { name: 'lastSeen'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'sentryId': { name: 'sentryId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sentryProjectId': { name: 'sentryProjectId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'sentryProjectName': { name: 'sentryProjectName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sentryProjectSlug': { name: 'sentryProjectSlug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'shortId': { name: 'shortId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SentryErrorStatus'; ofType: null; }; } }; 'tags': { name: 'tags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SentryErrorTags'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'userCount': { name: 'userCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'SentryError': { kind: 'OBJECT'; name: 'SentryError'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'culprit': { name: 'culprit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'externalUrl': { name: 'externalUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'firstSeen': { name: 'firstSeen'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'frequency': { name: 'frequency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SentryErrorFrequency'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSeen': { name: 'lastSeen'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'sentryId': { name: 'sentryId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sentryProjectId': { name: 'sentryProjectId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'sentryProjectName': { name: 'sentryProjectName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sentryProjectSlug': { name: 'sentryProjectSlug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'shortId': { name: 'shortId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SentryErrorStatus'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'userCount': { name: 'userCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'SentryErrorCollection': { kind: 'OBJECT'; name: 'SentryErrorCollection'; fields: { 'detailedError': { name: 'detailedError'; type: { kind: 'OBJECT'; name: 'SentryDetailedError'; ofType: null; } }; 'errorStackTrace': { name: 'errorStackTrace'; type: { kind: 'OBJECT'; name: 'SentryErrorStackTrace'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'OBJECT'; name: 'SentryErrorConnection'; ofType: null; } }; 'externalUrl': { name: 'externalUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SentryErrorConnection': { kind: 'OBJECT'; name: 'SentryErrorConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SentryErrorEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SentryError'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SentryErrorEdge': { kind: 'OBJECT'; name: 'SentryErrorEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'SentryError'; ofType: null; } }; }; };
    'SentryErrorFrequency': { kind: 'OBJECT'; name: 'SentryErrorFrequency'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'time': { name: 'time'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'SentryErrorStackTrace': { kind: 'OBJECT'; name: 'SentryErrorStackTrace'; fields: { 'dateReceived': { name: 'dateReceived'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'issueId': { name: 'issueId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'stackTraceEntries': { name: 'stackTraceEntries'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SentryErrorStackTraceEntry'; ofType: null; }; }; }; } }; }; };
    'SentryErrorStackTraceContext': { kind: 'OBJECT'; name: 'SentryErrorStackTraceContext'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'line': { name: 'line'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'SentryErrorStackTraceEntry': { kind: 'OBJECT'; name: 'SentryErrorStackTraceEntry'; fields: { 'col': { name: 'col'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fileName': { name: 'fileName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'function': { name: 'function'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'line': { name: 'line'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'traceContext': { name: 'traceContext'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SentryErrorStackTraceContext'; ofType: null; }; }; } }; }; };
    'SentryErrorStatus': { kind: 'ENUM'; name: 'SentryErrorStatus'; type: 'RESOLVED' | 'RESOLVED_IN_NEXT_RELEASE' | 'UNRESOLVED' | 'IGNORED'; };
    'SentryErrorTags': { kind: 'OBJECT'; name: 'SentryErrorTags'; fields: { 'level': { name: 'level'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'logger': { name: 'logger'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Service': { kind: 'INTERFACE'; name: 'Service'; fields: { 'active': { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'serviceType': { name: 'serviceType'; type: { kind: 'ENUM'; name: 'ServiceType'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; possibleTypes: 'BaseService' | 'JiraService'; };
    'ServiceConnection': { kind: 'OBJECT'; name: 'ServiceConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ServiceEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'INTERFACE'; name: 'Service'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ServiceEdge': { kind: 'OBJECT'; name: 'ServiceEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'INTERFACE'; name: 'Service'; ofType: null; } }; }; };
    'ServiceType': { kind: 'ENUM'; name: 'ServiceType'; type: 'APPLE_APP_STORE_SERVICE' | 'ASANA_SERVICE' | 'ASSEMBLA_SERVICE' | 'BAMBOO_SERVICE' | 'BUGZILLA_SERVICE' | 'BUILDKITE_SERVICE' | 'CAMPFIRE_SERVICE' | 'CLICKUP_SERVICE' | 'CONFLUENCE_SERVICE' | 'CUSTOM_ISSUE_TRACKER_SERVICE' | 'DATADOG_SERVICE' | 'DIFFBLUE_COVER_SERVICE' | 'DISCORD_SERVICE' | 'DRONE_CI_SERVICE' | 'EMAILS_ON_PUSH_SERVICE' | 'EWM_SERVICE' | 'EXTERNAL_WIKI_SERVICE' | 'GITHUB_SERVICE' | 'GITLAB_SLACK_APPLICATION_SERVICE' | 'GOOGLE_CLOUD_PLATFORM_ARTIFACT_REGISTRY_SERVICE' | 'GOOGLE_CLOUD_PLATFORM_WORKLOAD_IDENTITY_FEDERATION_SERVICE' | 'GOOGLE_PLAY_SERVICE' | 'HANGOUTS_CHAT_SERVICE' | 'HARBOR_SERVICE' | 'IRKER_SERVICE' | 'JENKINS_SERVICE' | 'JIRA_SERVICE' | 'MATTERMOST_SERVICE' | 'MATTERMOST_SLASH_COMMANDS_SERVICE' | 'MICROSOFT_TEAMS_SERVICE' | 'PACKAGIST_SERVICE' | 'PIPELINES_EMAIL_SERVICE' | 'PIVOTALTRACKER_SERVICE' | 'PROMETHEUS_SERVICE' | 'PUMBLE_SERVICE' | 'PUSHOVER_SERVICE' | 'REDMINE_SERVICE' | 'SLACK_SERVICE' | 'SLACK_SLASH_COMMANDS_SERVICE' | 'SQUASH_TM_SERVICE' | 'TEAMCITY_SERVICE' | 'TELEGRAM_SERVICE' | 'UNIFY_CIRCUIT_SERVICE' | 'WEBEX_TEAMS_SERVICE' | 'YOUTRACK_SERVICE' | 'ZENTAO_SERVICE'; };
    'ShaFormat': { kind: 'ENUM'; name: 'ShaFormat'; type: 'SHORT' | 'LONG'; };
    'SharedRunnersSetting': { kind: 'ENUM'; name: 'SharedRunnersSetting'; type: 'DISABLED_AND_UNOVERRIDABLE' | 'DISABLED_AND_OVERRIDABLE' | 'ENABLED' | 'DISABLED_WITH_OVERRIDE'; };
    'Snippet': { kind: 'OBJECT'; name: 'Snippet'; fields: { 'author': { name: 'author'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'blobs': { name: 'blobs'; type: { kind: 'OBJECT'; name: 'SnippetBlobConnection'; ofType: null; } }; 'commenters': { name: 'commenters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'discussions': { name: 'discussions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscussionConnection'; ofType: null; }; } }; 'fileName': { name: 'fileName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hidden': { name: 'hidden'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'httpUrlToRepo': { name: 'httpUrlToRepo'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'SnippetID'; ofType: null; }; } }; 'notes': { name: 'notes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NoteConnection'; ofType: null; }; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'rawUrl': { name: 'rawUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sshUrlToRepo': { name: 'sshUrlToRepo'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SnippetPermissions'; ofType: null; }; } }; 'visibilityLevel': { name: 'visibilityLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'VisibilityLevelsEnum'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'SnippetBlob': { kind: 'OBJECT'; name: 'SnippetBlob'; fields: { 'binary': { name: 'binary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'externalStorage': { name: 'externalStorage'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'mode': { name: 'mode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'plainData': { name: 'plainData'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'rawPath': { name: 'rawPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'rawPlainData': { name: 'rawPlainData'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'renderedAsText': { name: 'renderedAsText'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'richData': { name: 'richData'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'richViewer': { name: 'richViewer'; type: { kind: 'OBJECT'; name: 'SnippetBlobViewer'; ofType: null; } }; 'simpleViewer': { name: 'simpleViewer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SnippetBlobViewer'; ofType: null; }; } }; 'size': { name: 'size'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'SnippetBlobActionEnum': { kind: 'ENUM'; name: 'SnippetBlobActionEnum'; type: 'create' | 'update' | 'delete' | 'move'; };
    'SnippetBlobActionInputType': { kind: 'INPUT_OBJECT'; name: 'SnippetBlobActionInputType'; inputFields: [{ name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SnippetBlobActionEnum'; ofType: null; }; }; defaultValue: null }, { name: 'previousPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'filePath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'content'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'SnippetBlobConnection': { kind: 'OBJECT'; name: 'SnippetBlobConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SnippetBlobEdge'; ofType: null; }; } }; 'hasUnretrievableBlobs': { name: 'hasUnretrievableBlobs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SnippetBlob'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SnippetBlobEdge': { kind: 'OBJECT'; name: 'SnippetBlobEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'SnippetBlob'; ofType: null; } }; }; };
    'SnippetBlobViewer': { kind: 'OBJECT'; name: 'SnippetBlobViewer'; fields: { 'collapsed': { name: 'collapsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'fileType': { name: 'fileType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'loadAsync': { name: 'loadAsync'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'loadingPartialName': { name: 'loadingPartialName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'renderError': { name: 'renderError'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tooLarge': { name: 'tooLarge'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'BlobViewersType'; ofType: null; }; } }; }; };
    'SnippetConnection': { kind: 'OBJECT'; name: 'SnippetConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SnippetEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Snippet'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SnippetEdge': { kind: 'OBJECT'; name: 'SnippetEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Snippet'; ofType: null; } }; }; };
    'SnippetID': unknown;
    'SnippetPermissions': { kind: 'OBJECT'; name: 'SnippetPermissions'; fields: { 'adminSnippet': { name: 'adminSnippet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'awardEmoji': { name: 'awardEmoji'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createNote': { name: 'createNote'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readSnippet': { name: 'readSnippet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'reportSnippet': { name: 'reportSnippet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updateSnippet': { name: 'updateSnippet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'SnippetRepositoryRegistry': { kind: 'OBJECT'; name: 'SnippetRepositoryRegistry'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSyncFailure': { name: 'lastSyncFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSyncedAt': { name: 'lastSyncedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryAt': { name: 'retryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryCount': { name: 'retryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'snippetRepositoryId': { name: 'snippetRepositoryId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'RegistryState'; ofType: null; } }; 'verificationChecksum': { name: 'verificationChecksum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationFailure': { name: 'verificationFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationRetryAt': { name: 'verificationRetryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationRetryCount': { name: 'verificationRetryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'verificationStartedAt': { name: 'verificationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationState': { name: 'verificationState'; type: { kind: 'ENUM'; name: 'VerificationStateEnum'; ofType: null; } }; 'verifiedAt': { name: 'verifiedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'SnippetRepositoryRegistryConnection': { kind: 'OBJECT'; name: 'SnippetRepositoryRegistryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SnippetRepositoryRegistryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SnippetRepositoryRegistry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SnippetRepositoryRegistryEdge': { kind: 'OBJECT'; name: 'SnippetRepositoryRegistryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'SnippetRepositoryRegistry'; ofType: null; } }; }; };
    'Sort': { kind: 'ENUM'; name: 'Sort'; type: 'updated_desc' | 'updated_asc' | 'created_desc' | 'created_asc' | 'UPDATED_DESC' | 'UPDATED_ASC' | 'CREATED_DESC' | 'CREATED_ASC'; };
    'SortDirectionEnum': { kind: 'ENUM'; name: 'SortDirectionEnum'; type: 'ASC' | 'DESC'; };
    'SshSignature': { kind: 'OBJECT'; name: 'SshSignature'; fields: { 'commitSha': { name: 'commitSha'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'key': { name: 'key'; type: { kind: 'OBJECT'; name: 'Key'; ofType: null; } }; 'keyFingerprintSha256': { name: 'keyFingerprintSha256'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'verificationStatus': { name: 'verificationStatus'; type: { kind: 'ENUM'; name: 'VerificationStatus'; ofType: null; } }; }; };
    'StandardsAdherenceChecksStatus': { kind: 'OBJECT'; name: 'StandardsAdherenceChecksStatus'; fields: { 'checksCompleted': { name: 'checksCompleted'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'startedAt': { name: 'startedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'totalChecks': { name: 'totalChecks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'StarProjectInput': { kind: 'INPUT_OBJECT'; name: 'StarProjectInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectID'; ofType: null; }; }; defaultValue: null }, { name: 'starred'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'StarProjectPayload': { kind: 'OBJECT'; name: 'StarProjectPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'StatusAction': { kind: 'OBJECT'; name: 'StatusAction'; fields: { 'buttonTitle': { name: 'buttonTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'icon': { name: 'icon'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'method': { name: 'method'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StatusFilterInput': { kind: 'INPUT_OBJECT'; name: 'StatusFilterInput'; inputFields: [{ name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'RequirementStatusFilter'; ofType: null; }; }; defaultValue: null }]; };
    'StatusInput': { kind: 'INPUT_OBJECT'; name: 'StatusInput'; inputFields: [{ name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TestReportState'; ofType: null; }; }; defaultValue: null }]; };
    'String': unknown;
    'Submodule': { kind: 'OBJECT'; name: 'Submodule'; fields: { 'flatPath': { name: 'flatPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sha': { name: 'sha'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'treeUrl': { name: 'treeUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EntryType'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SubmoduleConnection': { kind: 'OBJECT'; name: 'SubmoduleConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SubmoduleEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Submodule'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SubmoduleEdge': { kind: 'OBJECT'; name: 'SubmoduleEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Submodule'; ofType: null; } }; }; };
    'Subscription': { kind: 'OBJECT'; name: 'Subscription'; fields: { 'aiCompletionResponse': { name: 'aiCompletionResponse'; type: { kind: 'OBJECT'; name: 'AiMessage'; ofType: null; } }; 'issuableAssigneesUpdated': { name: 'issuableAssigneesUpdated'; type: { kind: 'UNION'; name: 'Issuable'; ofType: null; } }; 'issuableDatesUpdated': { name: 'issuableDatesUpdated'; type: { kind: 'UNION'; name: 'Issuable'; ofType: null; } }; 'issuableDescriptionUpdated': { name: 'issuableDescriptionUpdated'; type: { kind: 'UNION'; name: 'Issuable'; ofType: null; } }; 'issuableEpicUpdated': { name: 'issuableEpicUpdated'; type: { kind: 'UNION'; name: 'Issuable'; ofType: null; } }; 'issuableHealthStatusUpdated': { name: 'issuableHealthStatusUpdated'; type: { kind: 'UNION'; name: 'Issuable'; ofType: null; } }; 'issuableIterationUpdated': { name: 'issuableIterationUpdated'; type: { kind: 'UNION'; name: 'Issuable'; ofType: null; } }; 'issuableLabelsUpdated': { name: 'issuableLabelsUpdated'; type: { kind: 'UNION'; name: 'Issuable'; ofType: null; } }; 'issuableMilestoneUpdated': { name: 'issuableMilestoneUpdated'; type: { kind: 'UNION'; name: 'Issuable'; ofType: null; } }; 'issuableTitleUpdated': { name: 'issuableTitleUpdated'; type: { kind: 'UNION'; name: 'Issuable'; ofType: null; } }; 'issuableWeightUpdated': { name: 'issuableWeightUpdated'; type: { kind: 'UNION'; name: 'Issuable'; ofType: null; } }; 'issueCrmContactsUpdated': { name: 'issueCrmContactsUpdated'; type: { kind: 'UNION'; name: 'Issuable'; ofType: null; } }; 'mergeRequestApprovalStateUpdated': { name: 'mergeRequestApprovalStateUpdated'; type: { kind: 'UNION'; name: 'Issuable'; ofType: null; } }; 'mergeRequestDiffGenerated': { name: 'mergeRequestDiffGenerated'; type: { kind: 'UNION'; name: 'Issuable'; ofType: null; } }; 'mergeRequestMergeStatusUpdated': { name: 'mergeRequestMergeStatusUpdated'; type: { kind: 'UNION'; name: 'Issuable'; ofType: null; } }; 'mergeRequestReviewersUpdated': { name: 'mergeRequestReviewersUpdated'; type: { kind: 'UNION'; name: 'Issuable'; ofType: null; } }; 'workItemNoteCreated': { name: 'workItemNoteCreated'; type: { kind: 'OBJECT'; name: 'Note'; ofType: null; } }; 'workItemNoteDeleted': { name: 'workItemNoteDeleted'; type: { kind: 'OBJECT'; name: 'DeletedNote'; ofType: null; } }; 'workItemNoteUpdated': { name: 'workItemNoteUpdated'; type: { kind: 'OBJECT'; name: 'Note'; ofType: null; } }; 'workItemUpdated': { name: 'workItemUpdated'; type: { kind: 'OBJECT'; name: 'WorkItem'; ofType: null; } }; }; };
    'SubscriptionFutureEntry': { kind: 'OBJECT'; name: 'SubscriptionFutureEntry'; fields: { 'company': { name: 'company'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'expiresAt': { name: 'expiresAt'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'plan': { name: 'plan'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'startsAt': { name: 'startsAt'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'usersInLicenseCount': { name: 'usersInLicenseCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'SubscriptionFutureEntryConnection': { kind: 'OBJECT'; name: 'SubscriptionFutureEntryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionFutureEntryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'SubscriptionFutureEntry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'SubscriptionFutureEntryEdge': { kind: 'OBJECT'; name: 'SubscriptionFutureEntryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'SubscriptionFutureEntry'; ofType: null; } }; }; };
    'SuggestedReviewersType': { kind: 'OBJECT'; name: 'SuggestedReviewersType'; fields: { 'accepted': { name: 'accepted'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'suggested': { name: 'suggested'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'SystemNoteMetadata': { kind: 'OBJECT'; name: 'SystemNoteMetadata'; fields: { 'action': { name: 'action'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionVersion': { name: 'descriptionVersion'; type: { kind: 'OBJECT'; name: 'DescriptionVersion'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'SystemNoteMetadataID'; ofType: null; }; } }; }; };
    'SystemNoteMetadataID': unknown;
    'TaskCompletionStatus': { kind: 'OBJECT'; name: 'TaskCompletionStatus'; fields: { 'completedCount': { name: 'completedCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'TerraformState': { kind: 'OBJECT'; name: 'TerraformState'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'deletedAt': { name: 'deletedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'latestVersion': { name: 'latestVersion'; type: { kind: 'OBJECT'; name: 'TerraformStateVersion'; ofType: null; } }; 'lockedAt': { name: 'lockedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'lockedByUser': { name: 'lockedByUser'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'TerraformStateConnection': { kind: 'OBJECT'; name: 'TerraformStateConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TerraformStateEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TerraformState'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TerraformStateDeleteInput': { kind: 'INPUT_OBJECT'; name: 'TerraformStateDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TerraformStateID'; ofType: null; }; }; defaultValue: null }]; };
    'TerraformStateDeletePayload': { kind: 'OBJECT'; name: 'TerraformStateDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'TerraformStateEdge': { kind: 'OBJECT'; name: 'TerraformStateEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'TerraformState'; ofType: null; } }; }; };
    'TerraformStateID': unknown;
    'TerraformStateLockInput': { kind: 'INPUT_OBJECT'; name: 'TerraformStateLockInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TerraformStateID'; ofType: null; }; }; defaultValue: null }]; };
    'TerraformStateLockPayload': { kind: 'OBJECT'; name: 'TerraformStateLockPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'TerraformStateUnlockInput': { kind: 'INPUT_OBJECT'; name: 'TerraformStateUnlockInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TerraformStateID'; ofType: null; }; }; defaultValue: null }]; };
    'TerraformStateUnlockPayload': { kind: 'OBJECT'; name: 'TerraformStateUnlockPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'TerraformStateVersion': { kind: 'OBJECT'; name: 'TerraformStateVersion'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'createdByUser': { name: 'createdByUser'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'downloadPath': { name: 'downloadPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'job': { name: 'job'; type: { kind: 'OBJECT'; name: 'CiJob'; ofType: null; } }; 'serial': { name: 'serial'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'TerraformStateVersionRegistry': { kind: 'OBJECT'; name: 'TerraformStateVersionRegistry'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSyncFailure': { name: 'lastSyncFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSyncedAt': { name: 'lastSyncedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryAt': { name: 'retryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryCount': { name: 'retryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'RegistryState'; ofType: null; } }; 'terraformStateVersionId': { name: 'terraformStateVersionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'verificationChecksum': { name: 'verificationChecksum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationFailure': { name: 'verificationFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationRetryAt': { name: 'verificationRetryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationRetryCount': { name: 'verificationRetryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'verificationStartedAt': { name: 'verificationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationState': { name: 'verificationState'; type: { kind: 'ENUM'; name: 'VerificationStateEnum'; ofType: null; } }; 'verifiedAt': { name: 'verifiedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'TerraformStateVersionRegistryConnection': { kind: 'OBJECT'; name: 'TerraformStateVersionRegistryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TerraformStateVersionRegistryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TerraformStateVersionRegistry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TerraformStateVersionRegistryEdge': { kind: 'OBJECT'; name: 'TerraformStateVersionRegistryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'TerraformStateVersionRegistry'; ofType: null; } }; }; };
    'TestCase': { kind: 'OBJECT'; name: 'TestCase'; fields: { 'attachmentUrl': { name: 'attachmentUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'classname': { name: 'classname'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'executionTime': { name: 'executionTime'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'file': { name: 'file'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'recentFailures': { name: 'recentFailures'; type: { kind: 'OBJECT'; name: 'RecentFailures'; ofType: null; } }; 'stackTrace': { name: 'stackTrace'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'ENUM'; name: 'TestCaseStatus'; ofType: null; } }; 'systemOutput': { name: 'systemOutput'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TestCaseConnection': { kind: 'OBJECT'; name: 'TestCaseConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TestCaseEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TestCase'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TestCaseEdge': { kind: 'OBJECT'; name: 'TestCaseEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'TestCase'; ofType: null; } }; }; };
    'TestCaseStatus': { kind: 'ENUM'; name: 'TestCaseStatus'; type: 'error' | 'failed' | 'success' | 'skipped'; };
    'TestReport': { kind: 'OBJECT'; name: 'TestReport'; fields: { 'author': { name: 'author'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TestReportState'; ofType: null; }; } }; 'usesLegacyIid': { name: 'usesLegacyIid'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'TestReportConnection': { kind: 'OBJECT'; name: 'TestReportConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TestReportEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TestReport'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TestReportEdge': { kind: 'OBJECT'; name: 'TestReportEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'TestReport'; ofType: null; } }; }; };
    'TestReportState': { kind: 'ENUM'; name: 'TestReportState'; type: 'PASSED' | 'FAILED'; };
    'TestReportSummary': { kind: 'OBJECT'; name: 'TestReportSummary'; fields: { 'testSuites': { name: 'testSuites'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TestSuiteSummaryConnection'; ofType: null; }; } }; 'total': { name: 'total'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TestReportTotal'; ofType: null; }; } }; }; };
    'TestReportTotal': { kind: 'OBJECT'; name: 'TestReportTotal'; fields: { 'count': { name: 'count'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'error': { name: 'error'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'failed': { name: 'failed'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'skipped': { name: 'skipped'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'success': { name: 'success'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'suiteError': { name: 'suiteError'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'time': { name: 'time'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'TestSuite': { kind: 'OBJECT'; name: 'TestSuite'; fields: { 'errorCount': { name: 'errorCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'failedCount': { name: 'failedCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'skippedCount': { name: 'skippedCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'successCount': { name: 'successCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'suiteError': { name: 'suiteError'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'testCases': { name: 'testCases'; type: { kind: 'OBJECT'; name: 'TestCaseConnection'; ofType: null; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'totalTime': { name: 'totalTime'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'TestSuiteSummary': { kind: 'OBJECT'; name: 'TestSuiteSummary'; fields: { 'buildIds': { name: 'buildIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'errorCount': { name: 'errorCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'failedCount': { name: 'failedCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'skippedCount': { name: 'skippedCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'successCount': { name: 'successCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'suiteError': { name: 'suiteError'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'totalTime': { name: 'totalTime'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'TestSuiteSummaryConnection': { kind: 'OBJECT'; name: 'TestSuiteSummaryConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TestSuiteSummaryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TestSuiteSummary'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TestSuiteSummaryEdge': { kind: 'OBJECT'; name: 'TestSuiteSummaryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'TestSuiteSummary'; ofType: null; } }; }; };
    'Time': unknown;
    'TimeReportStats': { kind: 'OBJECT'; name: 'TimeReportStats'; fields: { 'complete': { name: 'complete'; type: { kind: 'OBJECT'; name: 'TimeboxMetrics'; ofType: null; } }; 'incomplete': { name: 'incomplete'; type: { kind: 'OBJECT'; name: 'TimeboxMetrics'; ofType: null; } }; 'total': { name: 'total'; type: { kind: 'OBJECT'; name: 'TimeboxMetrics'; ofType: null; } }; }; };
    'TimeTrackingTimelogCategory': { kind: 'OBJECT'; name: 'TimeTrackingTimelogCategory'; fields: { 'billable': { name: 'billable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'billingRate': { name: 'billingRate'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'color': { name: 'color'; type: { kind: 'SCALAR'; name: 'Color'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; }; };
    'TimeTrackingTimelogCategoryConnection': { kind: 'OBJECT'; name: 'TimeTrackingTimelogCategoryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TimeTrackingTimelogCategoryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TimeTrackingTimelogCategory'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TimeTrackingTimelogCategoryEdge': { kind: 'OBJECT'; name: 'TimeTrackingTimelogCategoryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'TimeTrackingTimelogCategory'; ofType: null; } }; }; };
    'TimeboxMetrics': { kind: 'OBJECT'; name: 'TimeboxMetrics'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'weight': { name: 'weight'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'TimeboxReport': { kind: 'OBJECT'; name: 'TimeboxReport'; fields: { 'burnupTimeSeries': { name: 'burnupTimeSeries'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BurnupChartDailyTotals'; ofType: null; }; }; } }; 'error': { name: 'error'; type: { kind: 'OBJECT'; name: 'TimeboxReportError'; ofType: null; } }; 'stats': { name: 'stats'; type: { kind: 'OBJECT'; name: 'TimeReportStats'; ofType: null; } }; }; };
    'TimeboxReportError': { kind: 'OBJECT'; name: 'TimeboxReportError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'TimeboxReportErrorReason'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TimeboxReportErrorReason': { kind: 'ENUM'; name: 'TimeboxReportErrorReason'; type: 'UNSUPPORTED' | 'MISSING_DATES' | 'TOO_MANY_EVENTS' | 'PRIORITY_ASC' | 'PRIORITY_DESC' | 'LABEL_PRIORITY_ASC' | 'LABEL_PRIORITY_DESC' | 'MILESTONE_DUE_ASC' | 'MILESTONE_DUE_DESC' | 'updated_desc' | 'updated_asc' | 'created_desc' | 'created_asc' | 'UPDATED_DESC' | 'UPDATED_ASC' | 'CREATED_DESC' | 'CREATED_ASC'; };
    'TimeboxReportInterface': { kind: 'INTERFACE'; name: 'TimeboxReportInterface'; fields: { 'report': { name: 'report'; type: { kind: 'OBJECT'; name: 'TimeboxReport'; ofType: null; } }; }; possibleTypes: 'Iteration' | 'Milestone'; };
    'Timeframe': { kind: 'INPUT_OBJECT'; name: 'Timeframe'; inputFields: [{ name: 'start'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; }; defaultValue: null }, { name: 'end'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; }; defaultValue: null }]; };
    'TimelineEventCreateInput': { kind: 'INPUT_OBJECT'; name: 'TimelineEventCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'incidentId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IssueID'; ofType: null; }; }; defaultValue: null }, { name: 'note'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'occurredAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; }; defaultValue: null }, { name: 'timelineEventTagNames'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'TimelineEventCreatePayload': { kind: 'OBJECT'; name: 'TimelineEventCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'timelineEvent': { name: 'timelineEvent'; type: { kind: 'OBJECT'; name: 'TimelineEventType'; ofType: null; } }; }; };
    'TimelineEventDestroyInput': { kind: 'INPUT_OBJECT'; name: 'TimelineEventDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IncidentManagementTimelineEventID'; ofType: null; }; }; defaultValue: null }]; };
    'TimelineEventDestroyPayload': { kind: 'OBJECT'; name: 'TimelineEventDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'timelineEvent': { name: 'timelineEvent'; type: { kind: 'OBJECT'; name: 'TimelineEventType'; ofType: null; } }; }; };
    'TimelineEventPromoteFromNoteInput': { kind: 'INPUT_OBJECT'; name: 'TimelineEventPromoteFromNoteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'noteId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'NoteID'; ofType: null; }; }; defaultValue: null }]; };
    'TimelineEventPromoteFromNotePayload': { kind: 'OBJECT'; name: 'TimelineEventPromoteFromNotePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'timelineEvent': { name: 'timelineEvent'; type: { kind: 'OBJECT'; name: 'TimelineEventType'; ofType: null; } }; }; };
    'TimelineEventTagCreateInput': { kind: 'INPUT_OBJECT'; name: 'TimelineEventTagCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'TimelineEventTagCreatePayload': { kind: 'OBJECT'; name: 'TimelineEventTagCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'timelineEventTag': { name: 'timelineEventTag'; type: { kind: 'OBJECT'; name: 'TimelineEventTagType'; ofType: null; } }; }; };
    'TimelineEventTagType': { kind: 'OBJECT'; name: 'TimelineEventTagType'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IncidentManagementTimelineEventTagID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TimelineEventTagTypeConnection': { kind: 'OBJECT'; name: 'TimelineEventTagTypeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TimelineEventTagTypeEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TimelineEventTagType'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TimelineEventTagTypeEdge': { kind: 'OBJECT'; name: 'TimelineEventTagTypeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'TimelineEventTagType'; ofType: null; } }; }; };
    'TimelineEventType': { kind: 'OBJECT'; name: 'TimelineEventType'; fields: { 'action': { name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'author': { name: 'author'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'editable': { name: 'editable'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IncidentManagementTimelineEventID'; ofType: null; }; } }; 'incident': { name: 'incident'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Issue'; ofType: null; }; } }; 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'noteHtml': { name: 'noteHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'occurredAt': { name: 'occurredAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'promotedFromNote': { name: 'promotedFromNote'; type: { kind: 'OBJECT'; name: 'Note'; ofType: null; } }; 'timelineEventTags': { name: 'timelineEventTags'; type: { kind: 'OBJECT'; name: 'TimelineEventTagTypeConnection'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'updatedByUser': { name: 'updatedByUser'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; }; };
    'TimelineEventTypeConnection': { kind: 'OBJECT'; name: 'TimelineEventTypeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TimelineEventTypeEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TimelineEventType'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TimelineEventTypeEdge': { kind: 'OBJECT'; name: 'TimelineEventTypeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'TimelineEventType'; ofType: null; } }; }; };
    'TimelineEventUpdateInput': { kind: 'INPUT_OBJECT'; name: 'TimelineEventUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IncidentManagementTimelineEventID'; ofType: null; }; }; defaultValue: null }, { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'occurredAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; defaultValue: null }, { name: 'timelineEventTagNames'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'TimelineEventUpdatePayload': { kind: 'OBJECT'; name: 'TimelineEventUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'timelineEvent': { name: 'timelineEvent'; type: { kind: 'OBJECT'; name: 'TimelineEventType'; ofType: null; } }; }; };
    'Timelog': { kind: 'OBJECT'; name: 'Timelog'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; 'note': { name: 'note'; type: { kind: 'OBJECT'; name: 'Note'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; } }; 'spentAt': { name: 'spentAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'summary': { name: 'summary'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'timeSpent': { name: 'timeSpent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TimelogPermissions'; ofType: null; }; } }; }; };
    'TimelogConnection': { kind: 'OBJECT'; name: 'TimelogConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TimelogEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Timelog'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalSpentTime': { name: 'totalSpentTime'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; }; };
    'TimelogCreateInput': { kind: 'INPUT_OBJECT'; name: 'TimelogCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'timeSpent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'spentAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; }; defaultValue: null }, { name: 'summary'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'issuableId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IssuableID'; ofType: null; }; }; defaultValue: null }]; };
    'TimelogCreatePayload': { kind: 'OBJECT'; name: 'TimelogCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'timelog': { name: 'timelog'; type: { kind: 'OBJECT'; name: 'Timelog'; ofType: null; } }; }; };
    'TimelogDeleteInput': { kind: 'INPUT_OBJECT'; name: 'TimelogDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TimelogID'; ofType: null; }; }; defaultValue: null }]; };
    'TimelogDeletePayload': { kind: 'OBJECT'; name: 'TimelogDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'timelog': { name: 'timelog'; type: { kind: 'OBJECT'; name: 'Timelog'; ofType: null; } }; }; };
    'TimelogEdge': { kind: 'OBJECT'; name: 'TimelogEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Timelog'; ofType: null; } }; }; };
    'TimelogID': unknown;
    'TimelogPermissions': { kind: 'OBJECT'; name: 'TimelogPermissions'; fields: { 'adminTimelog': { name: 'adminTimelog'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'TimelogSort': { kind: 'ENUM'; name: 'TimelogSort'; type: 'SPENT_AT_ASC' | 'SPENT_AT_DESC' | 'TIME_SPENT_ASC' | 'TIME_SPENT_DESC' | 'updated_desc' | 'updated_asc' | 'created_desc' | 'created_asc' | 'UPDATED_DESC' | 'UPDATED_ASC' | 'CREATED_DESC' | 'CREATED_ASC'; };
    'Todo': { kind: 'OBJECT'; name: 'Todo'; fields: { 'action': { name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TodoActionEnum'; ofType: null; }; } }; 'author': { name: 'author'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; 'body': { name: 'body'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'group': { name: 'group'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'note': { name: 'note'; type: { kind: 'OBJECT'; name: 'Note'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TodoStateEnum'; ofType: null; }; } }; 'target': { name: 'target'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'Todoable'; ofType: null; }; } }; 'targetType': { name: 'targetType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TodoTargetEnum'; ofType: null; }; } }; }; };
    'TodoActionEnum': { kind: 'ENUM'; name: 'TodoActionEnum'; type: 'assigned' | 'mentioned' | 'build_failed' | 'marked' | 'approval_required' | 'unmergeable' | 'directly_addressed' | 'merge_train_removed' | 'review_requested' | 'member_access_requested' | 'review_submitted' | 'okr_checkin_requested'; };
    'TodoConnection': { kind: 'OBJECT'; name: 'TodoConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TodoEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Todo'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TodoCreateInput': { kind: 'INPUT_OBJECT'; name: 'TodoCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'targetId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TodoableID'; ofType: null; }; }; defaultValue: null }]; };
    'TodoCreatePayload': { kind: 'OBJECT'; name: 'TodoCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'todo': { name: 'todo'; type: { kind: 'OBJECT'; name: 'Todo'; ofType: null; } }; }; };
    'TodoEdge': { kind: 'OBJECT'; name: 'TodoEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Todo'; ofType: null; } }; }; };
    'TodoID': unknown;
    'TodoMarkDoneInput': { kind: 'INPUT_OBJECT'; name: 'TodoMarkDoneInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TodoID'; ofType: null; }; }; defaultValue: null }]; };
    'TodoMarkDonePayload': { kind: 'OBJECT'; name: 'TodoMarkDonePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'todo': { name: 'todo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Todo'; ofType: null; }; } }; }; };
    'TodoRestoreInput': { kind: 'INPUT_OBJECT'; name: 'TodoRestoreInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TodoID'; ofType: null; }; }; defaultValue: null }]; };
    'TodoRestoreManyInput': { kind: 'INPUT_OBJECT'; name: 'TodoRestoreManyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'TodoID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'TodoRestoreManyPayload': { kind: 'OBJECT'; name: 'TodoRestoreManyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'todos': { name: 'todos'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Todo'; ofType: null; }; }; }; } }; }; };
    'TodoRestorePayload': { kind: 'OBJECT'; name: 'TodoRestorePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'todo': { name: 'todo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Todo'; ofType: null; }; } }; }; };
    'TodoStateEnum': { kind: 'ENUM'; name: 'TodoStateEnum'; type: 'pending' | 'done'; };
    'TodoTargetEnum': { kind: 'ENUM'; name: 'TodoTargetEnum'; type: 'COMMIT' | 'ISSUE' | 'WORKITEM' | 'MERGEREQUEST' | 'DESIGN' | 'ALERT' | 'EPIC'; };
    'Todoable': { kind: 'INTERFACE'; name: 'Todoable'; fields: { 'webUrl': { name: 'webUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; possibleTypes: 'AlertManagementAlert' | 'BoardEpic' | 'Commit' | 'Design' | 'Epic' | 'EpicIssue' | 'Issue' | 'MergeRequest' | 'WorkItem'; };
    'TodoableID': unknown;
    'TodosMarkAllDoneInput': { kind: 'INPUT_OBJECT'; name: 'TodosMarkAllDoneInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'targetId'; type: { kind: 'SCALAR'; name: 'TodoableID'; ofType: null; }; defaultValue: null }]; };
    'TodosMarkAllDonePayload': { kind: 'OBJECT'; name: 'TodosMarkAllDonePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'todos': { name: 'todos'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Todo'; ofType: null; }; }; }; } }; }; };
    'Topic': { kind: 'OBJECT'; name: 'Topic'; fields: { 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TopicConnection': { kind: 'OBJECT'; name: 'TopicConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TopicEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Topic'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TopicEdge': { kind: 'OBJECT'; name: 'TopicEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Topic'; ofType: null; } }; }; };
    'TrainingUrlRequestStatus': { kind: 'ENUM'; name: 'TrainingUrlRequestStatus'; type: 'PENDING' | 'COMPLETED'; };
    'Tree': { kind: 'OBJECT'; name: 'Tree'; fields: { 'blobs': { name: 'blobs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BlobConnection'; ofType: null; }; } }; 'lastCommit': { name: 'lastCommit'; type: { kind: 'OBJECT'; name: 'Commit'; ofType: null; } }; 'submodules': { name: 'submodules'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SubmoduleConnection'; ofType: null; }; } }; 'trees': { name: 'trees'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TreeEntryConnection'; ofType: null; }; } }; }; };
    'TreeConnection': { kind: 'OBJECT'; name: 'TreeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TreeEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Tree'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TreeEdge': { kind: 'OBJECT'; name: 'TreeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Tree'; ofType: null; } }; }; };
    'TreeEntry': { kind: 'OBJECT'; name: 'TreeEntry'; fields: { 'flatPath': { name: 'flatPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'path': { name: 'path'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sha': { name: 'sha'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EntryType'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TreeEntryConnection': { kind: 'OBJECT'; name: 'TreeEntryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TreeEntryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'TreeEntry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'TreeEntryEdge': { kind: 'OBJECT'; name: 'TreeEntryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'TreeEntry'; ofType: null; } }; }; };
    'TypeEnum': { kind: 'ENUM'; name: 'TypeEnum'; type: 'personal' | 'project'; };
    'UnionedEpicFilterInput': { kind: 'INPUT_OBJECT'; name: 'UnionedEpicFilterInput'; inputFields: [{ name: 'labelNames'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'authorUsernames'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'UnionedIssueFilterInput': { kind: 'INPUT_OBJECT'; name: 'UnionedIssueFilterInput'; inputFields: [{ name: 'assigneeUsernames'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'authorUsernames'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'labelNames'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'UnprotectAccessLevel': { kind: 'OBJECT'; name: 'UnprotectAccessLevel'; fields: { 'accessLevel': { name: 'accessLevel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'accessLevelDescription': { name: 'accessLevelDescription'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'group': { name: 'group'; type: { kind: 'OBJECT'; name: 'AccessLevelGroup'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'AccessLevelUser'; ofType: null; } }; }; };
    'UnprotectAccessLevelConnection': { kind: 'OBJECT'; name: 'UnprotectAccessLevelConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UnprotectAccessLevelEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UnprotectAccessLevel'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'UnprotectAccessLevelEdge': { kind: 'OBJECT'; name: 'UnprotectAccessLevelEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'UnprotectAccessLevel'; ofType: null; } }; }; };
    'UntrustedRegexp': unknown;
    'UpdateAlertStatusInput': { kind: 'INPUT_OBJECT'; name: 'UpdateAlertStatusInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AlertManagementStatus'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateAlertStatusPayload': { kind: 'OBJECT'; name: 'UpdateAlertStatusPayload'; fields: { 'alert': { name: 'alert'; type: { kind: 'OBJECT'; name: 'AlertManagementAlert'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; 'todo': { name: 'todo'; type: { kind: 'OBJECT'; name: 'Todo'; ofType: null; } }; }; };
    'UpdateBoardEpicUserPreferencesInput': { kind: 'INPUT_OBJECT'; name: 'UpdateBoardEpicUserPreferencesInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'boardId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BoardID'; ofType: null; }; }; defaultValue: null }, { name: 'epicId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'EpicID'; ofType: null; }; }; defaultValue: null }, { name: 'collapsed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateBoardEpicUserPreferencesPayload': { kind: 'OBJECT'; name: 'UpdateBoardEpicUserPreferencesPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'epicUserPreferences': { name: 'epicUserPreferences'; type: { kind: 'OBJECT'; name: 'BoardEpicUserPreferences'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'UpdateBoardInput': { kind: 'INPUT_OBJECT'; name: 'UpdateBoardInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'hideBacklogList'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'hideClosedList'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BoardID'; ofType: null; }; }; defaultValue: null }, { name: 'assigneeId'; type: { kind: 'SCALAR'; name: 'UserID'; ofType: null; }; defaultValue: null }, { name: 'milestoneId'; type: { kind: 'SCALAR'; name: 'MilestoneID'; ofType: null; }; defaultValue: null }, { name: 'iterationId'; type: { kind: 'SCALAR'; name: 'IterationID'; ofType: null; }; defaultValue: null }, { name: 'iterationCadenceId'; type: { kind: 'SCALAR'; name: 'IterationsCadenceID'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'labels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'labelIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'LabelID'; ofType: null; }; }; }; defaultValue: null }]; };
    'UpdateBoardListInput': { kind: 'INPUT_OBJECT'; name: 'UpdateBoardListInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'position'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'collapsed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'listId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ListID'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateBoardListPayload': { kind: 'OBJECT'; name: 'UpdateBoardListPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'list': { name: 'list'; type: { kind: 'OBJECT'; name: 'BoardList'; ofType: null; } }; }; };
    'UpdateBoardPayload': { kind: 'OBJECT'; name: 'UpdateBoardPayload'; fields: { 'board': { name: 'board'; type: { kind: 'OBJECT'; name: 'Board'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'UpdateComplianceFrameworkInput': { kind: 'INPUT_OBJECT'; name: 'UpdateComplianceFrameworkInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ComplianceManagementFrameworkID'; ofType: null; }; }; defaultValue: null }, { name: 'params'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ComplianceFrameworkInput'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateComplianceFrameworkPayload': { kind: 'OBJECT'; name: 'UpdateComplianceFrameworkPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'complianceFramework': { name: 'complianceFramework'; type: { kind: 'OBJECT'; name: 'ComplianceFramework'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'UpdateContainerExpirationPolicyInput': { kind: 'INPUT_OBJECT'; name: 'UpdateContainerExpirationPolicyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'enabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'cadence'; type: { kind: 'ENUM'; name: 'ContainerExpirationPolicyCadenceEnum'; ofType: null; }; defaultValue: null }, { name: 'olderThan'; type: { kind: 'ENUM'; name: 'ContainerExpirationPolicyOlderThanEnum'; ofType: null; }; defaultValue: null }, { name: 'keepN'; type: { kind: 'ENUM'; name: 'ContainerExpirationPolicyKeepEnum'; ofType: null; }; defaultValue: null }, { name: 'nameRegex'; type: { kind: 'SCALAR'; name: 'UntrustedRegexp'; ofType: null; }; defaultValue: null }, { name: 'nameRegexKeep'; type: { kind: 'SCALAR'; name: 'UntrustedRegexp'; ofType: null; }; defaultValue: null }]; };
    'UpdateContainerExpirationPolicyPayload': { kind: 'OBJECT'; name: 'UpdateContainerExpirationPolicyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'containerExpirationPolicy': { name: 'containerExpirationPolicy'; type: { kind: 'OBJECT'; name: 'ContainerExpirationPolicy'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'UpdateContainerRegistryProtectionRuleInput': { kind: 'INPUT_OBJECT'; name: 'UpdateContainerRegistryProtectionRuleInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ContainerRegistryProtectionRuleID'; ofType: null; }; }; defaultValue: null }, { name: 'repositoryPathPattern'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'deleteProtectedUpToAccessLevel'; type: { kind: 'ENUM'; name: 'ContainerRegistryProtectionRuleAccessLevel'; ofType: null; }; defaultValue: null }, { name: 'pushProtectedUpToAccessLevel'; type: { kind: 'ENUM'; name: 'ContainerRegistryProtectionRuleAccessLevel'; ofType: null; }; defaultValue: null }]; };
    'UpdateContainerRegistryProtectionRulePayload': { kind: 'OBJECT'; name: 'UpdateContainerRegistryProtectionRulePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'containerRegistryProtectionRule': { name: 'containerRegistryProtectionRule'; type: { kind: 'OBJECT'; name: 'ContainerRegistryProtectionRule'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'UpdateDependencyProxyImageTtlGroupPolicyInput': { kind: 'INPUT_OBJECT'; name: 'UpdateDependencyProxyImageTtlGroupPolicyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'enabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'ttl'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'UpdateDependencyProxyImageTtlGroupPolicyPayload': { kind: 'OBJECT'; name: 'UpdateDependencyProxyImageTtlGroupPolicyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dependencyProxyImageTtlPolicy': { name: 'dependencyProxyImageTtlPolicy'; type: { kind: 'OBJECT'; name: 'DependencyProxyImageTtlGroupPolicy'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'UpdateDependencyProxyPackagesSettingsInput': { kind: 'INPUT_OBJECT'; name: 'UpdateDependencyProxyPackagesSettingsInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'enabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'mavenExternalRegistryUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'mavenExternalRegistryUsername'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'mavenExternalRegistryPassword'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UpdateDependencyProxyPackagesSettingsPayload': { kind: 'OBJECT'; name: 'UpdateDependencyProxyPackagesSettingsPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dependencyProxyPackagesSetting': { name: 'dependencyProxyPackagesSetting'; type: { kind: 'OBJECT'; name: 'DependencyProxyPackagesSetting'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'UpdateDependencyProxySettingsInput': { kind: 'INPUT_OBJECT'; name: 'UpdateDependencyProxySettingsInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'enabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'UpdateDependencyProxySettingsPayload': { kind: 'OBJECT'; name: 'UpdateDependencyProxySettingsPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dependencyProxySetting': { name: 'dependencyProxySetting'; type: { kind: 'OBJECT'; name: 'DependencyProxySetting'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'UpdateDiffImagePositionInput': { kind: 'INPUT_OBJECT'; name: 'UpdateDiffImagePositionInput'; inputFields: [{ name: 'x'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'y'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'width'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'height'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'UpdateEpicBoardListInput': { kind: 'INPUT_OBJECT'; name: 'UpdateEpicBoardListInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'position'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'collapsed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'listId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BoardsEpicListID'; ofType: null; }; }; defaultValue: null }]; };
    'UpdateEpicBoardListPayload': { kind: 'OBJECT'; name: 'UpdateEpicBoardListPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'list': { name: 'list'; type: { kind: 'OBJECT'; name: 'EpicList'; ofType: null; } }; }; };
    'UpdateEpicInput': { kind: 'INPUT_OBJECT'; name: 'UpdateEpicInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'confidential'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'startDateFixed'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'dueDateFixed'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'startDateIsFixed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'dueDateIsFixed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'addLabelIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeLabelIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'addLabels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'color'; type: { kind: 'SCALAR'; name: 'Color'; ofType: null; }; defaultValue: null }, { name: 'stateEvent'; type: { kind: 'ENUM'; name: 'EpicStateEvent'; ofType: null; }; defaultValue: null }, { name: 'removeLabels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'UpdateEpicPayload': { kind: 'OBJECT'; name: 'UpdateEpicPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'epic': { name: 'epic'; type: { kind: 'OBJECT'; name: 'Epic'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'UpdateImageDiffNoteInput': { kind: 'INPUT_OBJECT'; name: 'UpdateImageDiffNoteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'NoteID'; ofType: null; }; }; defaultValue: null }, { name: 'body'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'position'; type: { kind: 'INPUT_OBJECT'; name: 'UpdateDiffImagePositionInput'; ofType: null; }; defaultValue: null }]; };
    'UpdateImageDiffNotePayload': { kind: 'OBJECT'; name: 'UpdateImageDiffNotePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'note': { name: 'note'; type: { kind: 'OBJECT'; name: 'Note'; ofType: null; } }; }; };
    'UpdateIssueInput': { kind: 'INPUT_OBJECT'; name: 'UpdateIssueInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'dueDate'; type: { kind: 'SCALAR'; name: 'ISO8601Date'; ofType: null; }; defaultValue: null }, { name: 'confidential'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'locked'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'ENUM'; name: 'IssueType'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'milestoneId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'addLabelIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeLabelIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'labelIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'stateEvent'; type: { kind: 'ENUM'; name: 'IssueStateEvent'; ofType: null; }; defaultValue: null }, { name: 'timeEstimate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'healthStatus'; type: { kind: 'ENUM'; name: 'HealthStatus'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'epicId'; type: { kind: 'SCALAR'; name: 'EpicID'; ofType: null; }; defaultValue: null }]; };
    'UpdateIssuePayload': { kind: 'OBJECT'; name: 'UpdateIssuePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; }; };
    'UpdateIterationInput': { kind: 'INPUT_OBJECT'; name: 'UpdateIterationInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'startDate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'dueDate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UpdateIterationPayload': { kind: 'OBJECT'; name: 'UpdateIterationPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'iteration': { name: 'iteration'; type: { kind: 'OBJECT'; name: 'Iteration'; ofType: null; } }; }; };
    'UpdateNamespacePackageSettingsInput': { kind: 'INPUT_OBJECT'; name: 'UpdateNamespacePackageSettingsInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'namespacePath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'mavenDuplicatesAllowed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'mavenDuplicateExceptionRegex'; type: { kind: 'SCALAR'; name: 'UntrustedRegexp'; ofType: null; }; defaultValue: null }, { name: 'genericDuplicatesAllowed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'genericDuplicateExceptionRegex'; type: { kind: 'SCALAR'; name: 'UntrustedRegexp'; ofType: null; }; defaultValue: null }, { name: 'nugetDuplicatesAllowed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'nugetDuplicateExceptionRegex'; type: { kind: 'SCALAR'; name: 'UntrustedRegexp'; ofType: null; }; defaultValue: null }, { name: 'terraformModuleDuplicatesAllowed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'terraformModuleDuplicateExceptionRegex'; type: { kind: 'SCALAR'; name: 'UntrustedRegexp'; ofType: null; }; defaultValue: null }, { name: 'mavenPackageRequestsForwarding'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'npmPackageRequestsForwarding'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'pypiPackageRequestsForwarding'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'lockMavenPackageRequestsForwarding'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'lockNpmPackageRequestsForwarding'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'lockPypiPackageRequestsForwarding'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'nugetSymbolServerEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'UpdateNamespacePackageSettingsPayload': { kind: 'OBJECT'; name: 'UpdateNamespacePackageSettingsPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'packageSettings': { name: 'packageSettings'; type: { kind: 'OBJECT'; name: 'PackageSettings'; ofType: null; } }; }; };
    'UpdateNoteInput': { kind: 'INPUT_OBJECT'; name: 'UpdateNoteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'NoteID'; ofType: null; }; }; defaultValue: null }, { name: 'body'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UpdateNotePayload': { kind: 'OBJECT'; name: 'UpdateNotePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'note': { name: 'note'; type: { kind: 'OBJECT'; name: 'Note'; ofType: null; } }; }; };
    'UpdatePackagesCleanupPolicyInput': { kind: 'INPUT_OBJECT'; name: 'UpdatePackagesCleanupPolicyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'keepNDuplicatedPackageFiles'; type: { kind: 'ENUM'; name: 'PackagesCleanupKeepDuplicatedPackageFilesEnum'; ofType: null; }; defaultValue: null }]; };
    'UpdatePackagesCleanupPolicyPayload': { kind: 'OBJECT'; name: 'UpdatePackagesCleanupPolicyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'packagesCleanupPolicy': { name: 'packagesCleanupPolicy'; type: { kind: 'OBJECT'; name: 'PackagesCleanupPolicy'; ofType: null; } }; }; };
    'UpdatePackagesProtectionRuleInput': { kind: 'INPUT_OBJECT'; name: 'UpdatePackagesProtectionRuleInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PackagesProtectionRuleID'; ofType: null; }; }; defaultValue: null }, { name: 'packageNamePattern'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'packageType'; type: { kind: 'ENUM'; name: 'PackagesProtectionRulePackageType'; ofType: null; }; defaultValue: null }, { name: 'pushProtectedUpToAccessLevel'; type: { kind: 'ENUM'; name: 'PackagesProtectionRuleAccessLevel'; ofType: null; }; defaultValue: null }]; };
    'UpdatePackagesProtectionRulePayload': { kind: 'OBJECT'; name: 'UpdatePackagesProtectionRulePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'packageProtectionRule': { name: 'packageProtectionRule'; type: { kind: 'OBJECT'; name: 'PackagesProtectionRule'; ofType: null; } }; }; };
    'UpdateRequirementInput': { kind: 'INPUT_OBJECT'; name: 'UpdateRequirementInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'state'; type: { kind: 'ENUM'; name: 'RequirementState'; ofType: null; }; defaultValue: null }, { name: 'workItemIid'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lastTestReportState'; type: { kind: 'ENUM'; name: 'TestReportState'; ofType: null; }; defaultValue: null }]; };
    'UpdateRequirementPayload': { kind: 'OBJECT'; name: 'UpdateRequirementPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'requirement': { name: 'requirement'; type: { kind: 'OBJECT'; name: 'Requirement'; ofType: null; } }; }; };
    'UpdateSnippetInput': { kind: 'INPUT_OBJECT'; name: 'UpdateSnippetInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'SnippetID'; ofType: null; }; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'visibilityLevel'; type: { kind: 'ENUM'; name: 'VisibilityLevelsEnum'; ofType: null; }; defaultValue: null }, { name: 'blobActions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SnippetBlobActionInputType'; ofType: null; }; }; }; defaultValue: null }]; };
    'UpdateSnippetPayload': { kind: 'OBJECT'; name: 'UpdateSnippetPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'snippet': { name: 'snippet'; type: { kind: 'OBJECT'; name: 'Snippet'; ofType: null; } }; }; };
    'Upload': unknown;
    'UploadDeleteInput': { kind: 'INPUT_OBJECT'; name: 'UploadDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'secret'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'filename'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'UploadDeletePayload': { kind: 'OBJECT'; name: 'UploadDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'upload': { name: 'upload'; type: { kind: 'OBJECT'; name: 'FileUpload'; ofType: null; } }; }; };
    'UploadID': unknown;
    'UploadRegistry': { kind: 'OBJECT'; name: 'UploadRegistry'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'fileId': { name: 'fileId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lastSyncFailure': { name: 'lastSyncFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastSyncedAt': { name: 'lastSyncedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryAt': { name: 'retryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'retryCount': { name: 'retryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'RegistryState'; ofType: null; } }; 'verificationChecksum': { name: 'verificationChecksum'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationFailure': { name: 'verificationFailure'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verificationRetryAt': { name: 'verificationRetryAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationRetryCount': { name: 'verificationRetryCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'verificationStartedAt': { name: 'verificationStartedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'verificationState': { name: 'verificationState'; type: { kind: 'ENUM'; name: 'VerificationStateEnum'; ofType: null; } }; 'verifiedAt': { name: 'verifiedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'UploadRegistryConnection': { kind: 'OBJECT'; name: 'UploadRegistryConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UploadRegistryEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UploadRegistry'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'UploadRegistryEdge': { kind: 'OBJECT'; name: 'UploadRegistryEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'UploadRegistry'; ofType: null; } }; }; };
    'UsageTrendsMeasurement': { kind: 'OBJECT'; name: 'UsageTrendsMeasurement'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'identifier': { name: 'identifier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MeasurementIdentifier'; ofType: null; }; } }; 'recordedAt': { name: 'recordedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'UsageTrendsMeasurementConnection': { kind: 'OBJECT'; name: 'UsageTrendsMeasurementConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UsageTrendsMeasurementEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UsageTrendsMeasurement'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'UsageTrendsMeasurementEdge': { kind: 'OBJECT'; name: 'UsageTrendsMeasurementEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'UsageTrendsMeasurement'; ofType: null; } }; }; };
    'User': { kind: 'INTERFACE'; name: 'User'; fields: { 'assignedMergeRequests': { name: 'assignedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'authoredMergeRequests': { name: 'authoredMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bio': { name: 'bio'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bot': { name: 'bot'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'callouts': { name: 'callouts'; type: { kind: 'OBJECT'; name: 'UserCalloutConnection'; ofType: null; } }; 'commitEmail': { name: 'commitEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'discord': { name: 'discord'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'emails': { name: 'emails'; type: { kind: 'OBJECT'; name: 'EmailConnection'; ofType: null; } }; 'gitpodEnabled': { name: 'gitpodEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'groupCount': { name: 'groupCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'groupMemberships': { name: 'groupMemberships'; type: { kind: 'OBJECT'; name: 'GroupMemberConnection'; ofType: null; } }; 'groups': { name: 'groups'; type: { kind: 'OBJECT'; name: 'GroupConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'ide': { name: 'ide'; type: { kind: 'OBJECT'; name: 'Ide'; ofType: null; } }; 'jobTitle': { name: 'jobTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastActivityOn': { name: 'lastActivityOn'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'linkedin': { name: 'linkedin'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; 'namespaceCommitEmails': { name: 'namespaceCommitEmails'; type: { kind: 'OBJECT'; name: 'NamespaceCommitEmailConnection'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organizations': { name: 'organizations'; type: { kind: 'OBJECT'; name: 'OrganizationConnection'; ofType: null; } }; 'preferencesGitpodPath': { name: 'preferencesGitpodPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'profileEnableGitpodPath': { name: 'profileEnableGitpodPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'projectMemberships': { name: 'projectMemberships'; type: { kind: 'OBJECT'; name: 'ProjectMemberConnection'; ofType: null; } }; 'pronouns': { name: 'pronouns'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'publicEmail': { name: 'publicEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'reviewRequestedMergeRequests': { name: 'reviewRequestedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'savedReplies': { name: 'savedReplies'; type: { kind: 'OBJECT'; name: 'SavedReplyConnection'; ofType: null; } }; 'savedReply': { name: 'savedReply'; type: { kind: 'OBJECT'; name: 'SavedReply'; ofType: null; } }; 'snippets': { name: 'snippets'; type: { kind: 'OBJECT'; name: 'SnippetConnection'; ofType: null; } }; 'starredProjects': { name: 'starredProjects'; type: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'UserState'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'OBJECT'; name: 'UserStatus'; ofType: null; } }; 'timelogs': { name: 'timelogs'; type: { kind: 'OBJECT'; name: 'TimelogConnection'; ofType: null; } }; 'todos': { name: 'todos'; type: { kind: 'OBJECT'; name: 'TodoConnection'; ofType: null; } }; 'twitter': { name: 'twitter'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userAchievements': { name: 'userAchievements'; type: { kind: 'OBJECT'; name: 'UserAchievementConnection'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserPermissions'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; possibleTypes: 'AddOnUser' | 'AutocompletedUser' | 'CurrentUser' | 'MergeRequestAssignee' | 'MergeRequestAuthor' | 'MergeRequestParticipant' | 'MergeRequestReviewer' | 'UserCore'; };
    'UserAchievement': { kind: 'OBJECT'; name: 'UserAchievement'; fields: { 'achievement': { name: 'achievement'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Achievement'; ofType: null; }; } }; 'awardedByUser': { name: 'awardedByUser'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AchievementsUserAchievementID'; ofType: null; }; } }; 'priority': { name: 'priority'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'revokedAt': { name: 'revokedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'revokedByUser': { name: 'revokedByUser'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; }; };
    'UserAchievementConnection': { kind: 'OBJECT'; name: 'UserAchievementConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UserAchievementEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UserAchievement'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'UserAchievementEdge': { kind: 'OBJECT'; name: 'UserAchievementEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'UserAchievement'; ofType: null; } }; }; };
    'UserAchievementPrioritiesUpdateInput': { kind: 'INPUT_OBJECT'; name: 'UserAchievementPrioritiesUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'userAchievementIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AchievementsUserAchievementID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'UserAchievementPrioritiesUpdatePayload': { kind: 'OBJECT'; name: 'UserAchievementPrioritiesUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'userAchievements': { name: 'userAchievements'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserAchievement'; ofType: null; }; }; }; } }; }; };
    'UserAchievementsDeleteInput': { kind: 'INPUT_OBJECT'; name: 'UserAchievementsDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'userAchievementId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AchievementsUserAchievementID'; ofType: null; }; }; defaultValue: null }]; };
    'UserAchievementsDeletePayload': { kind: 'OBJECT'; name: 'UserAchievementsDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'userAchievement': { name: 'userAchievement'; type: { kind: 'OBJECT'; name: 'UserAchievement'; ofType: null; } }; }; };
    'UserAddOnAssignment': { kind: 'OBJECT'; name: 'UserAddOnAssignment'; fields: { 'addOnPurchase': { name: 'addOnPurchase'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AddOnPurchase'; ofType: null; }; } }; }; };
    'UserAddOnAssignmentBulkCreateInput': { kind: 'INPUT_OBJECT'; name: 'UserAddOnAssignmentBulkCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'addOnPurchaseId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GitlabSubscriptionsAddOnPurchaseID'; ofType: null; }; }; defaultValue: null }, { name: 'userIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UserID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'UserAddOnAssignmentBulkCreatePayload': { kind: 'OBJECT'; name: 'UserAddOnAssignmentBulkCreatePayload'; fields: { 'addOnPurchase': { name: 'addOnPurchase'; type: { kind: 'OBJECT'; name: 'AddOnPurchase'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'users': { name: 'users'; type: { kind: 'OBJECT'; name: 'AddOnUserConnection'; ofType: null; } }; }; };
    'UserAddOnAssignmentBulkRemoveInput': { kind: 'INPUT_OBJECT'; name: 'UserAddOnAssignmentBulkRemoveInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'addOnPurchaseId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GitlabSubscriptionsAddOnPurchaseID'; ofType: null; }; }; defaultValue: null }, { name: 'userIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UserID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'UserAddOnAssignmentBulkRemovePayload': { kind: 'OBJECT'; name: 'UserAddOnAssignmentBulkRemovePayload'; fields: { 'addOnPurchase': { name: 'addOnPurchase'; type: { kind: 'OBJECT'; name: 'AddOnPurchase'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'users': { name: 'users'; type: { kind: 'OBJECT'; name: 'AddOnUserConnection'; ofType: null; } }; }; };
    'UserAddOnAssignmentConnection': { kind: 'OBJECT'; name: 'UserAddOnAssignmentConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UserAddOnAssignmentEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UserAddOnAssignment'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'UserAddOnAssignmentCreateInput': { kind: 'INPUT_OBJECT'; name: 'UserAddOnAssignmentCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'addOnPurchaseId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GitlabSubscriptionsAddOnPurchaseID'; ofType: null; }; }; defaultValue: null }, { name: 'userId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UserID'; ofType: null; }; }; defaultValue: null }]; };
    'UserAddOnAssignmentCreatePayload': { kind: 'OBJECT'; name: 'UserAddOnAssignmentCreatePayload'; fields: { 'addOnPurchase': { name: 'addOnPurchase'; type: { kind: 'OBJECT'; name: 'AddOnPurchase'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'AddOnUser'; ofType: null; } }; }; };
    'UserAddOnAssignmentEdge': { kind: 'OBJECT'; name: 'UserAddOnAssignmentEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'UserAddOnAssignment'; ofType: null; } }; }; };
    'UserAddOnAssignmentRemoveInput': { kind: 'INPUT_OBJECT'; name: 'UserAddOnAssignmentRemoveInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'addOnPurchaseId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'GitlabSubscriptionsAddOnPurchaseID'; ofType: null; }; }; defaultValue: null }, { name: 'userId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UserID'; ofType: null; }; }; defaultValue: null }]; };
    'UserAddOnAssignmentRemovePayload': { kind: 'OBJECT'; name: 'UserAddOnAssignmentRemovePayload'; fields: { 'addOnPurchase': { name: 'addOnPurchase'; type: { kind: 'OBJECT'; name: 'AddOnPurchase'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'AddOnUser'; ofType: null; } }; }; };
    'UserCallout': { kind: 'OBJECT'; name: 'UserCallout'; fields: { 'dismissedAt': { name: 'dismissedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'featureName': { name: 'featureName'; type: { kind: 'ENUM'; name: 'UserCalloutFeatureNameEnum'; ofType: null; } }; }; };
    'UserCalloutConnection': { kind: 'OBJECT'; name: 'UserCalloutConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCalloutEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCallout'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'UserCalloutCreateInput': { kind: 'INPUT_OBJECT'; name: 'UserCalloutCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'featureName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'UserCalloutCreatePayload': { kind: 'OBJECT'; name: 'UserCalloutCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'userCallout': { name: 'userCallout'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCallout'; ofType: null; }; } }; }; };
    'UserCalloutEdge': { kind: 'OBJECT'; name: 'UserCalloutEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'UserCallout'; ofType: null; } }; }; };
    'UserCalloutFeatureNameEnum': { kind: 'ENUM'; name: 'UserCalloutFeatureNameEnum'; type: 'GKE_CLUSTER_INTEGRATION' | 'GCP_SIGNUP_OFFER' | 'CLUSTER_SECURITY_WARNING' | 'ULTIMATE_TRIAL' | 'GEO_ENABLE_HASHED_STORAGE' | 'GEO_MIGRATE_HASHED_STORAGE' | 'CANARY_DEPLOYMENT' | 'GOLD_TRIAL_BILLINGS' | 'SUGGEST_POPOVER_DISMISSED' | 'TABS_POSITION_HIGHLIGHT' | 'THREAT_MONITORING_INFO' | 'TWO_FACTOR_AUTH_RECOVERY_SETTINGS_CHECK' | 'WEB_IDE_ALERT_DISMISSED' | 'ACTIVE_USER_COUNT_THRESHOLD' | 'BUY_PIPELINE_MINUTES_NOTIFICATION_DOT' | 'PERSONAL_ACCESS_TOKEN_EXPIRY' | 'SUGGEST_PIPELINE' | 'FEATURE_FLAGS_NEW_VERSION' | 'REGISTRATION_ENABLED_CALLOUT' | 'NEW_USER_SIGNUPS_CAP_REACHED' | 'UNFINISHED_TAG_CLEANUP_CALLOUT' | 'PIPELINE_NEEDS_BANNER' | 'PIPELINE_NEEDS_HOVER_TIP' | 'WEB_IDE_CI_ENVIRONMENTS_GUIDANCE' | 'SECURITY_CONFIGURATION_UPGRADE_BANNER' | 'CLOUD_LICENSING_SUBSCRIPTION_ACTIVATION_BANNER' | 'TRIAL_STATUS_REMINDER_D14' | 'TRIAL_STATUS_REMINDER_D3' | 'SECURITY_CONFIGURATION_DEVOPS_ALERT' | 'PROFILE_PERSONAL_ACCESS_TOKEN_EXPIRY' | 'TERRAFORM_NOTIFICATION_DISMISSED' | 'SECURITY_NEWSLETTER_CALLOUT' | 'VERIFICATION_REMINDER' | 'CI_DEPRECATION_WARNING_FOR_TYPES_KEYWORD' | 'SECURITY_TRAINING_FEATURE_PROMOTION' | 'NAMESPACE_STORAGE_PRE_ENFORCEMENT_BANNER' | 'PREVIEW_USER_OVER_LIMIT_FREE_PLAN_ALERT' | 'USER_REACHED_LIMIT_FREE_PLAN_ALERT' | 'SUBMIT_LICENSE_USAGE_DATA_BANNER' | 'PERSONAL_PROJECT_LIMITATIONS_BANNER' | 'MR_EXPERIENCE_SURVEY' | 'NAMESPACE_STORAGE_LIMIT_ALERT_WARNING_THRESHOLD' | 'NAMESPACE_STORAGE_LIMIT_ALERT_ALERT_THRESHOLD' | 'NAMESPACE_STORAGE_LIMIT_ALERT_ERROR_THRESHOLD' | 'PROJECT_QUALITY_SUMMARY_FEEDBACK' | 'MERGE_REQUEST_SETTINGS_MOVED_CALLOUT' | 'NEW_TOP_LEVEL_GROUP_ALERT' | 'BRANCH_RULES_INFO_CALLOUT' | 'PROJECT_REPOSITORY_LIMIT_ALERT_WARNING_THRESHOLD' | 'PROJECT_REPOSITORY_LIMIT_ALERT_ALERT_THRESHOLD' | 'PROJECT_REPOSITORY_LIMIT_ALERT_ERROR_THRESHOLD' | 'NAMESPACE_OVER_STORAGE_USERS_COMBINED_ALERT' | 'VSD_FEEDBACK_BANNER' | 'SECURITY_POLICY_PROTECTED_BRANCH_MODIFICATION' | 'VULNERABILITY_REPORT_GROUPING' | 'NEW_NAV_FOR_EVERYONE_CALLOUT' | 'DUO_CHAT_CALLOUT' | 'PRODUCT_ANALYTICS_DASHBOARD_FEEDBACK' | 'JOINING_A_PROJECT_ALERT' | 'TRANSITION_TO_JIHU_CALLOUT' | 'SUMMARIZE_CODE_CHANGES' | 'DUO_PRO_TRIAL_ALERT'; };
    'UserCore': { kind: 'OBJECT'; name: 'UserCore'; fields: { 'assignedMergeRequests': { name: 'assignedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'authoredMergeRequests': { name: 'authoredMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'avatarUrl': { name: 'avatarUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bio': { name: 'bio'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'bot': { name: 'bot'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'callouts': { name: 'callouts'; type: { kind: 'OBJECT'; name: 'UserCalloutConnection'; ofType: null; } }; 'commitEmail': { name: 'commitEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'discord': { name: 'discord'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'emails': { name: 'emails'; type: { kind: 'OBJECT'; name: 'EmailConnection'; ofType: null; } }; 'gitpodEnabled': { name: 'gitpodEnabled'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'groupCount': { name: 'groupCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'groupMemberships': { name: 'groupMemberships'; type: { kind: 'OBJECT'; name: 'GroupMemberConnection'; ofType: null; } }; 'groups': { name: 'groups'; type: { kind: 'OBJECT'; name: 'GroupConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'ide': { name: 'ide'; type: { kind: 'OBJECT'; name: 'Ide'; ofType: null; } }; 'jobTitle': { name: 'jobTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastActivityOn': { name: 'lastActivityOn'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'linkedin': { name: 'linkedin'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; 'namespaceCommitEmails': { name: 'namespaceCommitEmails'; type: { kind: 'OBJECT'; name: 'NamespaceCommitEmailConnection'; ofType: null; } }; 'organization': { name: 'organization'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'organizations': { name: 'organizations'; type: { kind: 'OBJECT'; name: 'OrganizationConnection'; ofType: null; } }; 'preferencesGitpodPath': { name: 'preferencesGitpodPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'profileEnableGitpodPath': { name: 'profileEnableGitpodPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'projectMemberships': { name: 'projectMemberships'; type: { kind: 'OBJECT'; name: 'ProjectMemberConnection'; ofType: null; } }; 'pronouns': { name: 'pronouns'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'publicEmail': { name: 'publicEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'reviewRequestedMergeRequests': { name: 'reviewRequestedMergeRequests'; type: { kind: 'OBJECT'; name: 'MergeRequestConnection'; ofType: null; } }; 'savedReplies': { name: 'savedReplies'; type: { kind: 'OBJECT'; name: 'SavedReplyConnection'; ofType: null; } }; 'savedReply': { name: 'savedReply'; type: { kind: 'OBJECT'; name: 'SavedReply'; ofType: null; } }; 'snippets': { name: 'snippets'; type: { kind: 'OBJECT'; name: 'SnippetConnection'; ofType: null; } }; 'starredProjects': { name: 'starredProjects'; type: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'UserState'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'OBJECT'; name: 'UserStatus'; ofType: null; } }; 'timelogs': { name: 'timelogs'; type: { kind: 'OBJECT'; name: 'TimelogConnection'; ofType: null; } }; 'todos': { name: 'todos'; type: { kind: 'OBJECT'; name: 'TodoConnection'; ofType: null; } }; 'twitter': { name: 'twitter'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'userAchievements': { name: 'userAchievements'; type: { kind: 'OBJECT'; name: 'UserAchievementConnection'; ofType: null; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserPermissions'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webPath': { name: 'webPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'workspaces': { name: 'workspaces'; type: { kind: 'OBJECT'; name: 'WorkspaceConnection'; ofType: null; } }; }; };
    'UserCoreConnection': { kind: 'OBJECT'; name: 'UserCoreConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCoreEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'UserCoreEdge': { kind: 'OBJECT'; name: 'UserCoreEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; }; };
    'UserID': unknown;
    'UserMergeRequestInteraction': { kind: 'OBJECT'; name: 'UserMergeRequestInteraction'; fields: { 'applicableApprovalRules': { name: 'applicableApprovalRules'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ApprovalRule'; ofType: null; }; }; } }; 'approved': { name: 'approved'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'canMerge': { name: 'canMerge'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'canUpdate': { name: 'canUpdate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'reviewState': { name: 'reviewState'; type: { kind: 'ENUM'; name: 'MergeRequestReviewState'; ofType: null; } }; 'reviewed': { name: 'reviewed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'UserPermissions': { kind: 'OBJECT'; name: 'UserPermissions'; fields: { 'createSnippet': { name: 'createSnippet'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'UserPreferences': { kind: 'OBJECT'; name: 'UserPreferences'; fields: { 'issuesSort': { name: 'issuesSort'; type: { kind: 'ENUM'; name: 'IssueSort'; ofType: null; } }; 'useWebIdeExtensionMarketplace': { name: 'useWebIdeExtensionMarketplace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'visibilityPipelineIdType': { name: 'visibilityPipelineIdType'; type: { kind: 'ENUM'; name: 'VisibilityPipelineIdType'; ofType: null; } }; }; };
    'UserPreferencesUpdateInput': { kind: 'INPUT_OBJECT'; name: 'UserPreferencesUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'issuesSort'; type: { kind: 'ENUM'; name: 'IssueSort'; ofType: null; }; defaultValue: null }, { name: 'useWebIdeExtensionMarketplace'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'visibilityPipelineIdType'; type: { kind: 'ENUM'; name: 'VisibilityPipelineIdType'; ofType: null; }; defaultValue: null }]; };
    'UserPreferencesUpdatePayload': { kind: 'OBJECT'; name: 'UserPreferencesUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'userPreferences': { name: 'userPreferences'; type: { kind: 'OBJECT'; name: 'UserPreferences'; ofType: null; } }; }; };
    'UserSetNamespaceCommitEmailInput': { kind: 'INPUT_OBJECT'; name: 'UserSetNamespaceCommitEmailInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'namespaceId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'NamespaceID'; ofType: null; }; }; defaultValue: null }, { name: 'emailId'; type: { kind: 'SCALAR'; name: 'EmailID'; ofType: null; }; defaultValue: null }]; };
    'UserSetNamespaceCommitEmailPayload': { kind: 'OBJECT'; name: 'UserSetNamespaceCommitEmailPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'namespaceCommitEmail': { name: 'namespaceCommitEmail'; type: { kind: 'OBJECT'; name: 'NamespaceCommitEmail'; ofType: null; } }; }; };
    'UserState': { kind: 'ENUM'; name: 'UserState'; type: 'active' | 'blocked' | 'deactivated' | 'banned' | 'ldap_blocked' | 'blocked_pending_approval'; };
    'UserStatus': { kind: 'OBJECT'; name: 'UserStatus'; fields: { 'availability': { name: 'availability'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AvailabilityEnum'; ofType: null; }; } }; 'emoji': { name: 'emoji'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'messageHtml': { name: 'messageHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'UsersSavedReplyID': unknown;
    'ValueStream': { kind: 'OBJECT'; name: 'ValueStream'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AnalyticsCycleAnalyticsValueStreamID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; }; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'stages': { name: 'stages'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ValueStreamStage'; ofType: null; }; }; } }; }; };
    'ValueStreamAnalytics': { kind: 'OBJECT'; name: 'ValueStreamAnalytics'; fields: { 'aggregationStatus': { name: 'aggregationStatus'; type: { kind: 'OBJECT'; name: 'AggregationStatus'; ofType: null; } }; }; };
    'ValueStreamAnalyticsMetric': { kind: 'OBJECT'; name: 'ValueStreamAnalyticsMetric'; fields: { 'identifier': { name: 'identifier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'links': { name: 'links'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ValueStreamMetricLinkType'; ofType: null; }; }; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'unit': { name: 'unit'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'ValueStreamConnection': { kind: 'OBJECT'; name: 'ValueStreamConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ValueStreamEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'ValueStream'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'ValueStreamCreateInput': { kind: 'INPUT_OBJECT'; name: 'ValueStreamCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'stages'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ValueStreamStageInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'setting'; type: { kind: 'INPUT_OBJECT'; name: 'ValueStreamSettingInput'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'namespacePath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'ValueStreamCreatePayload': { kind: 'OBJECT'; name: 'ValueStreamCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'valueStream': { name: 'valueStream'; type: { kind: 'OBJECT'; name: 'ValueStream'; ofType: null; } }; }; };
    'ValueStreamDashboardCount': { kind: 'OBJECT'; name: 'ValueStreamDashboardCount'; fields: { 'count': { name: 'count'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'identifier': { name: 'identifier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ValueStreamDashboardMetric'; ofType: null; }; } }; 'recordedAt': { name: 'recordedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'ValueStreamDashboardMetric': { kind: 'ENUM'; name: 'ValueStreamDashboardMetric'; type: 'PROJECTS' | 'ISSUES' | 'GROUPS' | 'MERGE_REQUESTS' | 'PIPELINES' | 'CONTRIBUTORS'; };
    'ValueStreamDestroyInput': { kind: 'INPUT_OBJECT'; name: 'ValueStreamDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AnalyticsCycleAnalyticsValueStreamID'; ofType: null; }; }; defaultValue: null }]; };
    'ValueStreamDestroyPayload': { kind: 'OBJECT'; name: 'ValueStreamDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'valueStream': { name: 'valueStream'; type: { kind: 'OBJECT'; name: 'ValueStream'; ofType: null; } }; }; };
    'ValueStreamEdge': { kind: 'OBJECT'; name: 'ValueStreamEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'ValueStream'; ofType: null; } }; }; };
    'ValueStreamMetricLinkType': { kind: 'OBJECT'; name: 'ValueStreamMetricLinkType'; fields: { 'docsLink': { name: 'docsLink'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'label': { name: 'label'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ValueStreamSettingInput': { kind: 'INPUT_OBJECT'; name: 'ValueStreamSettingInput'; inputFields: [{ name: 'projectIdsFilter'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectID'; ofType: null; }; }; }; defaultValue: null }]; };
    'ValueStreamStage': { kind: 'OBJECT'; name: 'ValueStreamStage'; fields: { 'custom': { name: 'custom'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'endEventIdentifier': { name: 'endEventIdentifier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ValueStreamStageEvent'; ofType: null; }; } }; 'endEventLabel': { name: 'endEventLabel'; type: { kind: 'OBJECT'; name: 'Label'; ofType: null; } }; 'hidden': { name: 'hidden'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'startEventIdentifier': { name: 'startEventIdentifier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ValueStreamStageEvent'; ofType: null; }; } }; 'startEventLabel': { name: 'startEventLabel'; type: { kind: 'OBJECT'; name: 'Label'; ofType: null; } }; }; };
    'ValueStreamStageEvent': { kind: 'ENUM'; name: 'ValueStreamStageEvent'; type: 'ISSUE_CREATED' | 'ISSUE_FIRST_MENTIONED_IN_COMMIT' | 'ISSUE_DEPLOYED_TO_PRODUCTION' | 'MERGE_REQUEST_CREATED' | 'MERGE_REQUEST_FIRST_DEPLOYED_TO_PRODUCTION' | 'MERGE_REQUEST_LAST_BUILD_FINISHED' | 'MERGE_REQUEST_LAST_BUILD_STARTED' | 'MERGE_REQUEST_MERGED' | 'CODE_STAGE_START' | 'ISSUE_STAGE_END' | 'PLAN_STAGE_START' | 'ISSUE_CLOSED' | 'ISSUE_FIRST_ADDED_TO_BOARD' | 'ISSUE_FIRST_ASSOCIATED_WITH_MILESTONE' | 'ISSUE_LAST_EDITED' | 'ISSUE_LABEL_ADDED' | 'ISSUE_LABEL_REMOVED' | 'ISSUE_FIRST_ASSIGNED_AT' | 'ISSUE_FIRST_ADDED_TO_ITERATION' | 'MERGE_REQUEST_CLOSED' | 'MERGE_REQUEST_LAST_EDITED' | 'MERGE_REQUEST_LABEL_ADDED' | 'MERGE_REQUEST_LABEL_REMOVED' | 'MERGE_REQUEST_FIRST_COMMIT_AT' | 'MERGE_REQUEST_FIRST_ASSIGNED_AT'; };
    'ValueStreamStageInput': { kind: 'INPUT_OBJECT'; name: 'ValueStreamStageInput'; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'custom'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "true" }, { name: 'endEventIdentifier'; type: { kind: 'ENUM'; name: 'ValueStreamStageEvent'; ofType: null; }; defaultValue: null }, { name: 'endEventLabelId'; type: { kind: 'SCALAR'; name: 'LabelID'; ofType: null; }; defaultValue: null }, { name: 'hidden'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'startEventIdentifier'; type: { kind: 'ENUM'; name: 'ValueStreamStageEvent'; ofType: null; }; defaultValue: null }, { name: 'startEventLabelId'; type: { kind: 'SCALAR'; name: 'LabelID'; ofType: null; }; defaultValue: null }]; };
    'ValueStreamUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ValueStreamUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'stages'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ValueStreamStageInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'setting'; type: { kind: 'INPUT_OBJECT'; name: 'ValueStreamSettingInput'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'AnalyticsCycleAnalyticsValueStreamID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ValueStreamUpdatePayload': { kind: 'OBJECT'; name: 'ValueStreamUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'valueStream': { name: 'valueStream'; type: { kind: 'OBJECT'; name: 'ValueStream'; ofType: null; } }; }; };
    'VerificationStateEnum': { kind: 'ENUM'; name: 'VerificationStateEnum'; type: 'PENDING' | 'STARTED' | 'SUCCEEDED' | 'FAILED' | 'DISABLED'; };
    'VerificationStatus': { kind: 'ENUM'; name: 'VerificationStatus'; type: 'UNVERIFIED' | 'VERIFIED' | 'SAME_USER_DIFFERENT_EMAIL' | 'OTHER_USER' | 'UNVERIFIED_KEY' | 'UNKNOWN_KEY' | 'MULTIPLE_SIGNATURES' | 'REVOKED_KEY' | 'VERIFIED_SYSTEM' | 'VERIFIED_CA'; };
    'VisibilityLevelsEnum': { kind: 'ENUM'; name: 'VisibilityLevelsEnum'; type: 'private' | 'internal' | 'public'; };
    'VisibilityPipelineIdType': { kind: 'ENUM'; name: 'VisibilityPipelineIdType'; type: 'ID' | 'IID'; };
    'VisibilityScopesEnum': { kind: 'ENUM'; name: 'VisibilityScopesEnum'; type: 'private' | 'internal' | 'public'; };
    'VulnerabilitiesCountByDay': { kind: 'OBJECT'; name: 'VulnerabilitiesCountByDay'; fields: { 'critical': { name: 'critical'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'date': { name: 'date'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ISO8601Date'; ofType: null; }; } }; 'high': { name: 'high'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'info': { name: 'info'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'low': { name: 'low'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'medium': { name: 'medium'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'total': { name: 'total'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'unknown': { name: 'unknown'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'VulnerabilitiesCountByDayConnection': { kind: 'OBJECT'; name: 'VulnerabilitiesCountByDayConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilitiesCountByDayEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilitiesCountByDay'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'VulnerabilitiesCountByDayEdge': { kind: 'OBJECT'; name: 'VulnerabilitiesCountByDayEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'VulnerabilitiesCountByDay'; ofType: null; } }; }; };
    'VulnerabilitiesDismissInput': { kind: 'INPUT_OBJECT'; name: 'VulnerabilitiesDismissInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'vulnerabilityIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'VulnerabilityID'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'comment'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'dismissalReason'; type: { kind: 'ENUM'; name: 'VulnerabilityDismissalReason'; ofType: null; }; defaultValue: null }]; };
    'VulnerabilitiesDismissPayload': { kind: 'OBJECT'; name: 'VulnerabilitiesDismissPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'vulnerabilities': { name: 'vulnerabilities'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Vulnerability'; ofType: null; }; }; }; } }; }; };
    'VulnerabilitiesExternalIssueLinkID': unknown;
    'VulnerabilitiesRemoveAllFromProjectInput': { kind: 'INPUT_OBJECT'; name: 'VulnerabilitiesRemoveAllFromProjectInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'VulnerabilitiesRemoveAllFromProjectPayload': { kind: 'OBJECT'; name: 'VulnerabilitiesRemoveAllFromProjectPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'projects': { name: 'projects'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Project'; ofType: null; }; }; }; } }; }; };
    'VulnerabilitiesScannerID': unknown;
    'Vulnerability': { kind: 'OBJECT'; name: 'Vulnerability'; fields: { 'commenters': { name: 'commenters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; }; } }; 'confirmedAt': { name: 'confirmedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'confirmedBy': { name: 'confirmedBy'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'cvss': { name: 'cvss'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CvssType'; ofType: null; }; }; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'details': { name: 'details'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'VulnerabilityDetail'; ofType: null; }; }; }; } }; 'detectedAt': { name: 'detectedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'discussions': { name: 'discussions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscussionConnection'; ofType: null; }; } }; 'dismissalReason': { name: 'dismissalReason'; type: { kind: 'ENUM'; name: 'VulnerabilityDismissalReason'; ofType: null; } }; 'dismissedAt': { name: 'dismissedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'dismissedBy': { name: 'dismissedBy'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'externalIssueLinks': { name: 'externalIssueLinks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityExternalIssueLinkConnection'; ofType: null; }; } }; 'falsePositive': { name: 'falsePositive'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'hasRemediations': { name: 'hasRemediations'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'hasSolutions': { name: 'hasSolutions'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'identifiers': { name: 'identifiers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityIdentifier'; ofType: null; }; }; }; } }; 'issueLinks': { name: 'issueLinks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityIssueLinkConnection'; ofType: null; }; } }; 'links': { name: 'links'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityLink'; ofType: null; }; }; }; } }; 'location': { name: 'location'; type: { kind: 'UNION'; name: 'VulnerabilityLocation'; ofType: null; } }; 'mergeRequest': { name: 'mergeRequest'; type: { kind: 'OBJECT'; name: 'MergeRequest'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'notes': { name: 'notes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'NoteConnection'; ofType: null; }; } }; 'presentOnDefaultBranch': { name: 'presentOnDefaultBranch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'primaryIdentifier': { name: 'primaryIdentifier'; type: { kind: 'OBJECT'; name: 'VulnerabilityIdentifier'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'reportType': { name: 'reportType'; type: { kind: 'ENUM'; name: 'VulnerabilityReportType'; ofType: null; } }; 'resolvedAt': { name: 'resolvedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'resolvedBy': { name: 'resolvedBy'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'resolvedOnDefaultBranch': { name: 'resolvedOnDefaultBranch'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'scanner': { name: 'scanner'; type: { kind: 'OBJECT'; name: 'VulnerabilityScanner'; ofType: null; } }; 'severity': { name: 'severity'; type: { kind: 'ENUM'; name: 'VulnerabilitySeverity'; ofType: null; } }; 'solution': { name: 'solution'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'state': { name: 'state'; type: { kind: 'ENUM'; name: 'VulnerabilityState'; ofType: null; } }; 'stateComment': { name: 'stateComment'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'stateTransitions': { name: 'stateTransitions'; type: { kind: 'OBJECT'; name: 'VulnerabilityStateTransitionTypeConnection'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'userNotesCount': { name: 'userNotesCount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityPermissions'; ofType: null; }; } }; 'uuid': { name: 'uuid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'vulnerabilityPath': { name: 'vulnerabilityPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityConfidence': { kind: 'ENUM'; name: 'VulnerabilityConfidence'; type: 'IGNORE' | 'UNKNOWN' | 'EXPERIMENTAL' | 'LOW' | 'MEDIUM' | 'HIGH' | 'CONFIRMED'; };
    'VulnerabilityConfirmInput': { kind: 'INPUT_OBJECT'; name: 'VulnerabilityConfirmInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'comment'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'VulnerabilityID'; ofType: null; }; }; defaultValue: null }]; };
    'VulnerabilityConfirmPayload': { kind: 'OBJECT'; name: 'VulnerabilityConfirmPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'vulnerability': { name: 'vulnerability'; type: { kind: 'OBJECT'; name: 'Vulnerability'; ofType: null; } }; }; };
    'VulnerabilityConnection': { kind: 'OBJECT'; name: 'VulnerabilityConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Vulnerability'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'VulnerabilityContainerImage': { kind: 'OBJECT'; name: 'VulnerabilityContainerImage'; fields: { 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityContainerImageConnection': { kind: 'OBJECT'; name: 'VulnerabilityContainerImageConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityContainerImageEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityContainerImage'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'VulnerabilityContainerImageEdge': { kind: 'OBJECT'; name: 'VulnerabilityContainerImageEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'VulnerabilityContainerImage'; ofType: null; } }; }; };
    'VulnerabilityCreateInput': { kind: 'INPUT_OBJECT'; name: 'VulnerabilityCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'project'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'scanner'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'VulnerabilityScannerInput'; ofType: null; }; }; defaultValue: null }, { name: 'identifiers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'VulnerabilityIdentifierInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'state'; type: { kind: 'ENUM'; name: 'VulnerabilityState'; ofType: null; }; defaultValue: "DETECTED" }, { name: 'severity'; type: { kind: 'ENUM'; name: 'VulnerabilitySeverity'; ofType: null; }; defaultValue: "UNKNOWN" }, { name: 'solution'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'detectedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; defaultValue: null }, { name: 'confirmedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; defaultValue: null }, { name: 'resolvedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; defaultValue: null }, { name: 'dismissedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; defaultValue: null }]; };
    'VulnerabilityCreatePayload': { kind: 'OBJECT'; name: 'VulnerabilityCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'vulnerability': { name: 'vulnerability'; type: { kind: 'OBJECT'; name: 'Vulnerability'; ofType: null; } }; }; };
    'VulnerabilityDetail': { kind: 'UNION'; name: 'VulnerabilityDetail'; fields: {}; possibleTypes: 'VulnerabilityDetailBase' | 'VulnerabilityDetailBoolean' | 'VulnerabilityDetailCode' | 'VulnerabilityDetailCommit' | 'VulnerabilityDetailDiff' | 'VulnerabilityDetailFileLocation' | 'VulnerabilityDetailInt' | 'VulnerabilityDetailList' | 'VulnerabilityDetailMarkdown' | 'VulnerabilityDetailModuleLocation' | 'VulnerabilityDetailNamedList' | 'VulnerabilityDetailTable' | 'VulnerabilityDetailText' | 'VulnerabilityDetailUrl'; };
    'VulnerabilityDetailBase': { kind: 'OBJECT'; name: 'VulnerabilityDetailBase'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fieldName': { name: 'fieldName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityDetailBoolean': { kind: 'OBJECT'; name: 'VulnerabilityDetailBoolean'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fieldName': { name: 'fieldName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'VulnerabilityDetailCode': { kind: 'OBJECT'; name: 'VulnerabilityDetailCode'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fieldName': { name: 'fieldName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lang': { name: 'lang'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'VulnerabilityDetailCommit': { kind: 'OBJECT'; name: 'VulnerabilityDetailCommit'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fieldName': { name: 'fieldName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'VulnerabilityDetailDiff': { kind: 'OBJECT'; name: 'VulnerabilityDetailDiff'; fields: { 'after': { name: 'after'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'before': { name: 'before'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fieldName': { name: 'fieldName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityDetailFileLocation': { kind: 'OBJECT'; name: 'VulnerabilityDetailFileLocation'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fieldName': { name: 'fieldName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fileName': { name: 'fileName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'lineEnd': { name: 'lineEnd'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'lineStart': { name: 'lineStart'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityDetailInt': { kind: 'OBJECT'; name: 'VulnerabilityDetailInt'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fieldName': { name: 'fieldName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'VulnerabilityDetailList': { kind: 'OBJECT'; name: 'VulnerabilityDetailList'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fieldName': { name: 'fieldName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'VulnerabilityDetail'; ofType: null; }; }; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityDetailMarkdown': { kind: 'OBJECT'; name: 'VulnerabilityDetailMarkdown'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fieldName': { name: 'fieldName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'VulnerabilityDetailModuleLocation': { kind: 'OBJECT'; name: 'VulnerabilityDetailModuleLocation'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fieldName': { name: 'fieldName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'moduleName': { name: 'moduleName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'offset': { name: 'offset'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'VulnerabilityDetailNamedList': { kind: 'OBJECT'; name: 'VulnerabilityDetailNamedList'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fieldName': { name: 'fieldName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'items': { name: 'items'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityDetailNamedListItem'; ofType: null; }; }; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityDetailNamedListItem': { kind: 'OBJECT'; name: 'VulnerabilityDetailNamedListItem'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fieldName': { name: 'fieldName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'VulnerabilityDetail'; ofType: null; }; } }; }; };
    'VulnerabilityDetailRow': { kind: 'OBJECT'; name: 'VulnerabilityDetailRow'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fieldName': { name: 'fieldName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'row': { name: 'row'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'VulnerabilityDetail'; ofType: null; }; }; }; } }; }; };
    'VulnerabilityDetailTable': { kind: 'OBJECT'; name: 'VulnerabilityDetailTable'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fieldName': { name: 'fieldName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'headers': { name: 'headers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'VulnerabilityDetail'; ofType: null; }; }; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'rows': { name: 'rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityDetailRow'; ofType: null; }; }; }; } }; }; };
    'VulnerabilityDetailText': { kind: 'OBJECT'; name: 'VulnerabilityDetailText'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fieldName': { name: 'fieldName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'VulnerabilityDetailUrl': { kind: 'OBJECT'; name: 'VulnerabilityDetailUrl'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fieldName': { name: 'fieldName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'href': { name: 'href'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'text': { name: 'text'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityDismissInput': { kind: 'INPUT_OBJECT'; name: 'VulnerabilityDismissInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'comment'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'VulnerabilityID'; ofType: null; }; }; defaultValue: null }, { name: 'dismissalReason'; type: { kind: 'ENUM'; name: 'VulnerabilityDismissalReason'; ofType: null; }; defaultValue: null }]; };
    'VulnerabilityDismissPayload': { kind: 'OBJECT'; name: 'VulnerabilityDismissPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'vulnerability': { name: 'vulnerability'; type: { kind: 'OBJECT'; name: 'Vulnerability'; ofType: null; } }; }; };
    'VulnerabilityDismissalReason': { kind: 'ENUM'; name: 'VulnerabilityDismissalReason'; type: 'ACCEPTABLE_RISK' | 'FALSE_POSITIVE' | 'MITIGATING_CONTROL' | 'USED_IN_TESTS' | 'NOT_APPLICABLE'; };
    'VulnerabilityEdge': { kind: 'OBJECT'; name: 'VulnerabilityEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Vulnerability'; ofType: null; } }; }; };
    'VulnerabilityEvidence': { kind: 'OBJECT'; name: 'VulnerabilityEvidence'; fields: { 'request': { name: 'request'; type: { kind: 'OBJECT'; name: 'VulnerabilityRequest'; ofType: null; } }; 'response': { name: 'response'; type: { kind: 'OBJECT'; name: 'VulnerabilityResponse'; ofType: null; } }; 'source': { name: 'source'; type: { kind: 'OBJECT'; name: 'VulnerabilityEvidenceSource'; ofType: null; } }; 'summary': { name: 'summary'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'supportingMessages': { name: 'supportingMessages'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityEvidenceSupportingMessage'; ofType: null; }; }; } }; }; };
    'VulnerabilityEvidenceSource': { kind: 'OBJECT'; name: 'VulnerabilityEvidenceSource'; fields: { 'identifier': { name: 'identifier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityEvidenceSupportingMessage': { kind: 'OBJECT'; name: 'VulnerabilityEvidenceSupportingMessage'; fields: { 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'request': { name: 'request'; type: { kind: 'OBJECT'; name: 'VulnerabilityRequest'; ofType: null; } }; 'response': { name: 'response'; type: { kind: 'OBJECT'; name: 'VulnerabilityResponse'; ofType: null; } }; }; };
    'VulnerabilityExternalIssueLink': { kind: 'OBJECT'; name: 'VulnerabilityExternalIssueLink'; fields: { 'externalIssue': { name: 'externalIssue'; type: { kind: 'OBJECT'; name: 'ExternalIssue'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'VulnerabilitiesExternalIssueLinkID'; ofType: null; }; } }; 'linkType': { name: 'linkType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'VulnerabilityExternalIssueLinkType'; ofType: null; }; } }; }; };
    'VulnerabilityExternalIssueLinkConnection': { kind: 'OBJECT'; name: 'VulnerabilityExternalIssueLinkConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityExternalIssueLinkEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityExternalIssueLink'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'VulnerabilityExternalIssueLinkCreateInput': { kind: 'INPUT_OBJECT'; name: 'VulnerabilityExternalIssueLinkCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'VulnerabilityID'; ofType: null; }; }; defaultValue: null }, { name: 'linkType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'VulnerabilityExternalIssueLinkType'; ofType: null; }; }; defaultValue: null }, { name: 'externalTracker'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'VulnerabilityExternalIssueLinkExternalTracker'; ofType: null; }; }; defaultValue: null }]; };
    'VulnerabilityExternalIssueLinkCreatePayload': { kind: 'OBJECT'; name: 'VulnerabilityExternalIssueLinkCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'externalIssueLink': { name: 'externalIssueLink'; type: { kind: 'OBJECT'; name: 'VulnerabilityExternalIssueLink'; ofType: null; } }; }; };
    'VulnerabilityExternalIssueLinkDestroyInput': { kind: 'INPUT_OBJECT'; name: 'VulnerabilityExternalIssueLinkDestroyInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'VulnerabilitiesExternalIssueLinkID'; ofType: null; }; }; defaultValue: null }]; };
    'VulnerabilityExternalIssueLinkDestroyPayload': { kind: 'OBJECT'; name: 'VulnerabilityExternalIssueLinkDestroyPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'VulnerabilityExternalIssueLinkEdge': { kind: 'OBJECT'; name: 'VulnerabilityExternalIssueLinkEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'VulnerabilityExternalIssueLink'; ofType: null; } }; }; };
    'VulnerabilityExternalIssueLinkExternalTracker': { kind: 'ENUM'; name: 'VulnerabilityExternalIssueLinkExternalTracker'; type: 'JIRA'; };
    'VulnerabilityExternalIssueLinkType': { kind: 'ENUM'; name: 'VulnerabilityExternalIssueLinkType'; type: 'CREATED'; };
    'VulnerabilityGrade': { kind: 'ENUM'; name: 'VulnerabilityGrade'; type: 'A' | 'B' | 'C' | 'D' | 'F'; };
    'VulnerabilityID': unknown;
    'VulnerabilityIdentifier': { kind: 'OBJECT'; name: 'VulnerabilityIdentifier'; fields: { 'externalId': { name: 'externalId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'externalType': { name: 'externalType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityIdentifierInput': { kind: 'INPUT_OBJECT'; name: 'VulnerabilityIdentifierInput'; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'externalType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'externalId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'VulnerabilityIssueLink': { kind: 'OBJECT'; name: 'VulnerabilityIssueLink'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'issue': { name: 'issue'; type: { kind: 'OBJECT'; name: 'Issue'; ofType: null; } }; 'linkType': { name: 'linkType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'VulnerabilityIssueLinkType'; ofType: null; }; } }; }; };
    'VulnerabilityIssueLinkConnection': { kind: 'OBJECT'; name: 'VulnerabilityIssueLinkConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityIssueLinkEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityIssueLink'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'VulnerabilityIssueLinkCreateInput': { kind: 'INPUT_OBJECT'; name: 'VulnerabilityIssueLinkCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'issueId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'IssueID'; ofType: null; }; }; defaultValue: null }, { name: 'vulnerabilityIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'VulnerabilityID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'VulnerabilityIssueLinkCreatePayload': { kind: 'OBJECT'; name: 'VulnerabilityIssueLinkCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'issueLinks': { name: 'issueLinks'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityIssueLink'; ofType: null; }; }; } }; }; };
    'VulnerabilityIssueLinkEdge': { kind: 'OBJECT'; name: 'VulnerabilityIssueLinkEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'VulnerabilityIssueLink'; ofType: null; } }; }; };
    'VulnerabilityIssueLinkType': { kind: 'ENUM'; name: 'VulnerabilityIssueLinkType'; type: 'RELATED' | 'CREATED'; };
    'VulnerabilityLink': { kind: 'OBJECT'; name: 'VulnerabilityLink'; fields: { 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'VulnerabilityLocation': { kind: 'UNION'; name: 'VulnerabilityLocation'; fields: {}; possibleTypes: 'VulnerabilityLocationClusterImageScanning' | 'VulnerabilityLocationContainerScanning' | 'VulnerabilityLocationCoverageFuzzing' | 'VulnerabilityLocationDast' | 'VulnerabilityLocationDependencyScanning' | 'VulnerabilityLocationGeneric' | 'VulnerabilityLocationSast' | 'VulnerabilityLocationSecretDetection'; };
    'VulnerabilityLocationClusterImageScanning': { kind: 'OBJECT'; name: 'VulnerabilityLocationClusterImageScanning'; fields: { 'dependency': { name: 'dependency'; type: { kind: 'OBJECT'; name: 'VulnerableDependency'; ofType: null; } }; 'image': { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'kubernetesResource': { name: 'kubernetesResource'; type: { kind: 'OBJECT'; name: 'VulnerableKubernetesResource'; ofType: null; } }; 'operatingSystem': { name: 'operatingSystem'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityLocationContainerScanning': { kind: 'OBJECT'; name: 'VulnerabilityLocationContainerScanning'; fields: { 'dependency': { name: 'dependency'; type: { kind: 'OBJECT'; name: 'VulnerableDependency'; ofType: null; } }; 'image': { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'operatingSystem': { name: 'operatingSystem'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityLocationCoverageFuzzing': { kind: 'OBJECT'; name: 'VulnerabilityLocationCoverageFuzzing'; fields: { 'blobPath': { name: 'blobPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'crashAddress': { name: 'crashAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'crashType': { name: 'crashType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'endLine': { name: 'endLine'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'file': { name: 'file'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'stacktraceSnippet': { name: 'stacktraceSnippet'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'startLine': { name: 'startLine'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'vulnerableClass': { name: 'vulnerableClass'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'vulnerableMethod': { name: 'vulnerableMethod'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityLocationDast': { kind: 'OBJECT'; name: 'VulnerabilityLocationDast'; fields: { 'hostname': { name: 'hostname'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'param': { name: 'param'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'requestMethod': { name: 'requestMethod'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityLocationDependencyScanning': { kind: 'OBJECT'; name: 'VulnerabilityLocationDependencyScanning'; fields: { 'blobPath': { name: 'blobPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dependency': { name: 'dependency'; type: { kind: 'OBJECT'; name: 'VulnerableDependency'; ofType: null; } }; 'file': { name: 'file'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityLocationGeneric': { kind: 'OBJECT'; name: 'VulnerabilityLocationGeneric'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityLocationSast': { kind: 'OBJECT'; name: 'VulnerabilityLocationSast'; fields: { 'blobPath': { name: 'blobPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'endLine': { name: 'endLine'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'file': { name: 'file'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'startLine': { name: 'startLine'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'vulnerableClass': { name: 'vulnerableClass'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'vulnerableMethod': { name: 'vulnerableMethod'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityLocationSecretDetection': { kind: 'OBJECT'; name: 'VulnerabilityLocationSecretDetection'; fields: { 'blobPath': { name: 'blobPath'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'endLine': { name: 'endLine'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'file': { name: 'file'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'startLine': { name: 'startLine'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'vulnerableClass': { name: 'vulnerableClass'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'vulnerableMethod': { name: 'vulnerableMethod'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityOwaspTop10': { kind: 'ENUM'; name: 'VulnerabilityOwaspTop10'; type: 'A1_2017' | 'A2_2017' | 'A3_2017' | 'A4_2017' | 'A5_2017' | 'A6_2017' | 'A7_2017' | 'A8_2017' | 'A9_2017' | 'A10_2017' | 'A1_2021' | 'A2_2021' | 'A3_2021' | 'A4_2021' | 'A5_2021' | 'A6_2021' | 'A7_2021' | 'A8_2021' | 'A9_2021' | 'A10_2021'; };
    'VulnerabilityPermissions': { kind: 'OBJECT'; name: 'VulnerabilityPermissions'; fields: { 'adminVulnerability': { name: 'adminVulnerability'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'adminVulnerabilityExternalIssueLink': { name: 'adminVulnerabilityExternalIssueLink'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'adminVulnerabilityIssueLink': { name: 'adminVulnerabilityIssueLink'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createVulnerabilityExport': { name: 'createVulnerabilityExport'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createVulnerabilityFeedback': { name: 'createVulnerabilityFeedback'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'destroyVulnerabilityFeedback': { name: 'destroyVulnerabilityFeedback'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readVulnerability': { name: 'readVulnerability'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readVulnerabilityFeedback': { name: 'readVulnerabilityFeedback'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updateVulnerabilityFeedback': { name: 'updateVulnerabilityFeedback'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'VulnerabilityRemediationType': { kind: 'OBJECT'; name: 'VulnerabilityRemediationType'; fields: { 'diff': { name: 'diff'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'summary': { name: 'summary'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityReportType': { kind: 'ENUM'; name: 'VulnerabilityReportType'; type: 'SAST' | 'DEPENDENCY_SCANNING' | 'CONTAINER_SCANNING' | 'DAST' | 'SECRET_DETECTION' | 'COVERAGE_FUZZING' | 'API_FUZZING' | 'CLUSTER_IMAGE_SCANNING' | 'GENERIC'; };
    'VulnerabilityRequest': { kind: 'OBJECT'; name: 'VulnerabilityRequest'; fields: { 'body': { name: 'body'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'headers': { name: 'headers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityRequestResponseHeader'; ofType: null; }; }; }; } }; 'method': { name: 'method'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityRequestResponseHeader': { kind: 'OBJECT'; name: 'VulnerabilityRequestResponseHeader'; fields: { 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityResolveInput': { kind: 'INPUT_OBJECT'; name: 'VulnerabilityResolveInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'comment'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'VulnerabilityID'; ofType: null; }; }; defaultValue: null }]; };
    'VulnerabilityResolvePayload': { kind: 'OBJECT'; name: 'VulnerabilityResolvePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'vulnerability': { name: 'vulnerability'; type: { kind: 'OBJECT'; name: 'Vulnerability'; ofType: null; } }; }; };
    'VulnerabilityResponse': { kind: 'OBJECT'; name: 'VulnerabilityResponse'; fields: { 'body': { name: 'body'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'headers': { name: 'headers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityRequestResponseHeader'; ofType: null; }; }; }; } }; 'reasonPhrase': { name: 'reasonPhrase'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'statusCode': { name: 'statusCode'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'VulnerabilityRevertToDetectedInput': { kind: 'INPUT_OBJECT'; name: 'VulnerabilityRevertToDetectedInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'comment'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'VulnerabilityID'; ofType: null; }; }; defaultValue: null }]; };
    'VulnerabilityRevertToDetectedPayload': { kind: 'OBJECT'; name: 'VulnerabilityRevertToDetectedPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'vulnerability': { name: 'vulnerability'; type: { kind: 'OBJECT'; name: 'Vulnerability'; ofType: null; } }; }; };
    'VulnerabilityScanner': { kind: 'OBJECT'; name: 'VulnerabilityScanner'; fields: { 'externalId': { name: 'externalId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'reportType': { name: 'reportType'; type: { kind: 'ENUM'; name: 'VulnerabilityReportType'; ofType: null; } }; 'reportTypeHumanized': { name: 'reportTypeHumanized'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'vendor': { name: 'vendor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerabilityScannerConnection': { kind: 'OBJECT'; name: 'VulnerabilityScannerConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityScannerEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityScanner'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'VulnerabilityScannerEdge': { kind: 'OBJECT'; name: 'VulnerabilityScannerEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'VulnerabilityScanner'; ofType: null; } }; }; };
    'VulnerabilityScannerInput': { kind: 'INPUT_OBJECT'; name: 'VulnerabilityScannerInput'; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'vendor'; type: { kind: 'INPUT_OBJECT'; name: 'VulnerabilityScannerVendorInput'; ofType: null; }; defaultValue: null }, { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'VulnerabilityScannerVendorInput': { kind: 'INPUT_OBJECT'; name: 'VulnerabilityScannerVendorInput'; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'VulnerabilitySeveritiesCount': { kind: 'OBJECT'; name: 'VulnerabilitySeveritiesCount'; fields: { 'critical': { name: 'critical'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'high': { name: 'high'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'info': { name: 'info'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'low': { name: 'low'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'medium': { name: 'medium'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'unknown': { name: 'unknown'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'VulnerabilitySeverity': { kind: 'ENUM'; name: 'VulnerabilitySeverity'; type: 'INFO' | 'UNKNOWN' | 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL'; };
    'VulnerabilitySort': { kind: 'ENUM'; name: 'VulnerabilitySort'; type: 'severity_desc' | 'severity_asc' | 'detected_desc' | 'detected_asc'; };
    'VulnerabilityState': { kind: 'ENUM'; name: 'VulnerabilityState'; type: 'CONFIRMED' | 'DETECTED' | 'DISMISSED' | 'RESOLVED'; };
    'VulnerabilityStateTransitionType': { kind: 'OBJECT'; name: 'VulnerabilityStateTransitionType'; fields: { 'author': { name: 'author'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'comment': { name: 'comment'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'dismissalReason': { name: 'dismissalReason'; type: { kind: 'ENUM'; name: 'VulnerabilityDismissalReason'; ofType: null; } }; 'fromState': { name: 'fromState'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'VulnerabilityState'; ofType: null; }; } }; 'toState': { name: 'toState'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'VulnerabilityState'; ofType: null; }; } }; }; };
    'VulnerabilityStateTransitionTypeConnection': { kind: 'OBJECT'; name: 'VulnerabilityStateTransitionTypeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityStateTransitionTypeEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VulnerabilityStateTransitionType'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'VulnerabilityStateTransitionTypeEdge': { kind: 'OBJECT'; name: 'VulnerabilityStateTransitionTypeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'VulnerabilityStateTransitionType'; ofType: null; } }; }; };
    'VulnerableDependency': { kind: 'OBJECT'; name: 'VulnerableDependency'; fields: { 'package': { name: 'package'; type: { kind: 'OBJECT'; name: 'VulnerablePackage'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerableKubernetesResource': { kind: 'OBJECT'; name: 'VulnerableKubernetesResource'; fields: { 'agent': { name: 'agent'; type: { kind: 'OBJECT'; name: 'ClusterAgent'; ofType: null; } }; 'clusterId': { name: 'clusterId'; type: { kind: 'SCALAR'; name: 'ClustersClusterID'; ofType: null; } }; 'containerName': { name: 'containerName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'kind': { name: 'kind'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'VulnerablePackage': { kind: 'OBJECT'; name: 'VulnerablePackage'; fields: { 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VulnerableProjectsByGrade': { kind: 'OBJECT'; name: 'VulnerableProjectsByGrade'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'grade': { name: 'grade'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'VulnerabilityGrade'; ofType: null; }; } }; 'projects': { name: 'projects'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProjectConnection'; ofType: null; }; } }; }; };
    'WeightWildcardId': { kind: 'ENUM'; name: 'WeightWildcardId'; type: 'NONE' | 'ANY'; };
    'WorkItem': { kind: 'OBJECT'; name: 'WorkItem'; fields: { 'archived': { name: 'archived'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'author': { name: 'author'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'closedAt': { name: 'closedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'confidential': { name: 'confidential'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createNoteEmail': { name: 'createNoteEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'WorkItemID'; ofType: null; }; } }; 'iid': { name: 'iid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lockVersion': { name: 'lockVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'reference': { name: 'reference'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'state': { name: 'state'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WorkItemState'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'titleHtml': { name: 'titleHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WorkItemPermissions'; ofType: null; }; } }; 'webUrl': { name: 'webUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'widgets': { name: 'widgets'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'WorkItemWidget'; ofType: null; }; }; } }; 'workItemType': { name: 'workItemType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WorkItemType'; ofType: null; }; } }; }; };
    'WorkItemAddLinkedItemsInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemAddLinkedItemsInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'WorkItemID'; ofType: null; }; }; defaultValue: null }, { name: 'linkType'; type: { kind: 'ENUM'; name: 'WorkItemRelatedLinkType'; ofType: null; }; defaultValue: null }, { name: 'workItemsIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'WorkItemID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'WorkItemAddLinkedItemsPayload': { kind: 'OBJECT'; name: 'WorkItemAddLinkedItemsPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'workItem': { name: 'workItem'; type: { kind: 'OBJECT'; name: 'WorkItem'; ofType: null; } }; }; };
    'WorkItemAwardEmojiUpdateAction': { kind: 'ENUM'; name: 'WorkItemAwardEmojiUpdateAction'; type: 'ADD' | 'REMOVE' | 'TOGGLE'; };
    'WorkItemConnection': { kind: 'OBJECT'; name: 'WorkItemConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'WorkItemEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'WorkItem'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'WorkItemConvertInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemConvertInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'WorkItemID'; ofType: null; }; }; defaultValue: null }, { name: 'workItemTypeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'WorkItemsTypeID'; ofType: null; }; }; defaultValue: null }]; };
    'WorkItemConvertPayload': { kind: 'OBJECT'; name: 'WorkItemConvertPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'workItem': { name: 'workItem'; type: { kind: 'OBJECT'; name: 'WorkItem'; ofType: null; } }; }; };
    'WorkItemConvertTaskInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemConvertTaskInput'; inputFields: [{ name: 'lineNumberEnd'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'lineNumberStart'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'lockVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'workItemTypeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'WorkItemsTypeID'; ofType: null; }; }; defaultValue: null }]; };
    'WorkItemCreateFromTaskInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemCreateFromTaskInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'WorkItemID'; ofType: null; }; }; defaultValue: null }, { name: 'workItemData'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'WorkItemConvertTaskInput'; ofType: null; }; }; defaultValue: null }]; };
    'WorkItemCreateFromTaskPayload': { kind: 'OBJECT'; name: 'WorkItemCreateFromTaskPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'newWorkItem': { name: 'newWorkItem'; type: { kind: 'OBJECT'; name: 'WorkItem'; ofType: null; } }; 'workItem': { name: 'workItem'; type: { kind: 'OBJECT'; name: 'WorkItem'; ofType: null; } }; }; };
    'WorkItemCreateInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'confidential'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'descriptionWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetDescriptionInput'; ofType: null; }; defaultValue: null }, { name: 'hierarchyWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetHierarchyCreateInput'; ofType: null; }; defaultValue: null }, { name: 'milestoneWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetMilestoneInput'; ofType: null; }; defaultValue: null }, { name: 'namespacePath'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'workItemTypeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'WorkItemsTypeID'; ofType: null; }; }; defaultValue: null }, { name: 'iterationWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetIterationInput'; ofType: null; }; defaultValue: null }]; };
    'WorkItemCreatePayload': { kind: 'OBJECT'; name: 'WorkItemCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'workItem': { name: 'workItem'; type: { kind: 'OBJECT'; name: 'WorkItem'; ofType: null; } }; }; };
    'WorkItemDeleteInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'WorkItemID'; ofType: null; }; }; defaultValue: null }]; };
    'WorkItemDeletePayload': { kind: 'OBJECT'; name: 'WorkItemDeletePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'OBJECT'; name: 'Namespace'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; }; };
    'WorkItemEdge': { kind: 'OBJECT'; name: 'WorkItemEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'WorkItem'; ofType: null; } }; }; };
    'WorkItemExportInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemExportInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'iids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'state'; type: { kind: 'ENUM'; name: 'IssuableState'; ofType: null; }; defaultValue: null }, { name: 'types'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'IssueType'; ofType: null; }; }; }; defaultValue: null }, { name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'IssuableSearchableField'; ofType: null; }; }; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'selectedFields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AvailableExportFields'; ofType: null; }; }; }; defaultValue: null }]; };
    'WorkItemExportPayload': { kind: 'OBJECT'; name: 'WorkItemExportPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'WorkItemID': unknown;
    'WorkItemPermissions': { kind: 'OBJECT'; name: 'WorkItemPermissions'; fields: { 'adminParentLink': { name: 'adminParentLink'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'adminWorkItem': { name: 'adminWorkItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'adminWorkItemLink': { name: 'adminWorkItemLink'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'createNote': { name: 'createNote'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deleteWorkItem': { name: 'deleteWorkItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'readWorkItem': { name: 'readWorkItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'setWorkItemMetadata': { name: 'setWorkItemMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'updateWorkItem': { name: 'updateWorkItem'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'WorkItemRelatedLinkType': { kind: 'ENUM'; name: 'WorkItemRelatedLinkType'; type: 'RELATED' | 'BLOCKED_BY' | 'BLOCKS'; };
    'WorkItemRemoveLinkedItemsInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemRemoveLinkedItemsInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'WorkItemID'; ofType: null; }; }; defaultValue: null }, { name: 'workItemsIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'WorkItemID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'WorkItemRemoveLinkedItemsPayload': { kind: 'OBJECT'; name: 'WorkItemRemoveLinkedItemsPayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'workItem': { name: 'workItem'; type: { kind: 'OBJECT'; name: 'WorkItem'; ofType: null; } }; }; };
    'WorkItemSort': { kind: 'ENUM'; name: 'WorkItemSort'; type: 'TITLE_ASC' | 'TITLE_DESC' | 'updated_desc' | 'updated_asc' | 'created_desc' | 'created_asc' | 'UPDATED_DESC' | 'UPDATED_ASC' | 'CREATED_DESC' | 'CREATED_ASC'; };
    'WorkItemState': { kind: 'ENUM'; name: 'WorkItemState'; type: 'OPEN' | 'CLOSED'; };
    'WorkItemStateCountsType': { kind: 'OBJECT'; name: 'WorkItemStateCountsType'; fields: { 'all': { name: 'all'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'closed': { name: 'closed'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'opened': { name: 'opened'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'WorkItemStateEvent': { kind: 'ENUM'; name: 'WorkItemStateEvent'; type: 'REOPEN' | 'CLOSE'; };
    'WorkItemSubscribeInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemSubscribeInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'WorkItemID'; ofType: null; }; }; defaultValue: null }, { name: 'subscribed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'WorkItemSubscribePayload': { kind: 'OBJECT'; name: 'WorkItemSubscribePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'workItem': { name: 'workItem'; type: { kind: 'OBJECT'; name: 'WorkItem'; ofType: null; } }; }; };
    'WorkItemTimelog': { kind: 'OBJECT'; name: 'WorkItemTimelog'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'note': { name: 'note'; type: { kind: 'OBJECT'; name: 'Note'; ofType: null; } }; 'spentAt': { name: 'spentAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'summary': { name: 'summary'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'timeSpent': { name: 'timeSpent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TimelogPermissions'; ofType: null; }; } }; }; };
    'WorkItemTimelogConnection': { kind: 'OBJECT'; name: 'WorkItemTimelogConnection'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'WorkItemTimelogEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'WorkItemTimelog'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalSpentTime': { name: 'totalSpentTime'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'BigInt'; ofType: null; }; } }; }; };
    'WorkItemTimelogEdge': { kind: 'OBJECT'; name: 'WorkItemTimelogEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'WorkItemTimelog'; ofType: null; } }; }; };
    'WorkItemTodoUpdateAction': { kind: 'ENUM'; name: 'WorkItemTodoUpdateAction'; type: 'MARK_AS_DONE' | 'ADD'; };
    'WorkItemType': { kind: 'OBJECT'; name: 'WorkItemType'; fields: { 'iconName': { name: 'iconName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'WorkItemsTypeID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'widgetDefinitions': { name: 'widgetDefinitions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INTERFACE'; name: 'WorkItemWidgetDefinition'; ofType: null; }; }; } }; }; };
    'WorkItemTypeConnection': { kind: 'OBJECT'; name: 'WorkItemTypeConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'WorkItemTypeEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'WorkItemType'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'WorkItemTypeEdge': { kind: 'OBJECT'; name: 'WorkItemTypeEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'WorkItemType'; ofType: null; } }; }; };
    'WorkItemUpdateInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'WorkItemID'; ofType: null; }; }; defaultValue: null }, { name: 'stateEvent'; type: { kind: 'ENUM'; name: 'WorkItemStateEvent'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'confidential'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'descriptionWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetDescriptionInput'; ofType: null; }; defaultValue: null }, { name: 'assigneesWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetAssigneesInput'; ofType: null; }; defaultValue: null }, { name: 'hierarchyWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetHierarchyUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'startAndDueDateWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetStartAndDueDateUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'labelsWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetLabelsUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'milestoneWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetMilestoneInput'; ofType: null; }; defaultValue: null }, { name: 'notificationsWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetNotificationsUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'currentUserTodosWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetCurrentUserTodosInput'; ofType: null; }; defaultValue: null }, { name: 'awardEmojiWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetAwardEmojiUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'notesWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetNotesInput'; ofType: null; }; defaultValue: null }, { name: 'timeTrackingWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetTimeTrackingInput'; ofType: null; }; defaultValue: null }, { name: 'iterationWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetIterationInput'; ofType: null; }; defaultValue: null }, { name: 'weightWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetWeightInput'; ofType: null; }; defaultValue: null }, { name: 'progressWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetProgressInput'; ofType: null; }; defaultValue: null }, { name: 'statusWidget'; type: { kind: 'INPUT_OBJECT'; name: 'StatusInput'; ofType: null; }; defaultValue: null }, { name: 'healthStatusWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetHealthStatusInput'; ofType: null; }; defaultValue: null }, { name: 'colorWidget'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetColorInput'; ofType: null; }; defaultValue: null }]; };
    'WorkItemUpdatePayload': { kind: 'OBJECT'; name: 'WorkItemUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'workItem': { name: 'workItem'; type: { kind: 'OBJECT'; name: 'WorkItem'; ofType: null; } }; }; };
    'WorkItemWidget': { kind: 'INTERFACE'; name: 'WorkItemWidget'; fields: { 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; possibleTypes: 'WorkItemWidgetAssignees' | 'WorkItemWidgetAwardEmoji' | 'WorkItemWidgetColor' | 'WorkItemWidgetCurrentUserTodos' | 'WorkItemWidgetDescription' | 'WorkItemWidgetDesigns' | 'WorkItemWidgetHealthStatus' | 'WorkItemWidgetHierarchy' | 'WorkItemWidgetIteration' | 'WorkItemWidgetLabels' | 'WorkItemWidgetLinkedItems' | 'WorkItemWidgetMilestone' | 'WorkItemWidgetNotes' | 'WorkItemWidgetNotifications' | 'WorkItemWidgetParticipants' | 'WorkItemWidgetProgress' | 'WorkItemWidgetRequirementLegacy' | 'WorkItemWidgetRolledupDates' | 'WorkItemWidgetStartAndDueDate' | 'WorkItemWidgetStatus' | 'WorkItemWidgetTestReports' | 'WorkItemWidgetTimeTracking' | 'WorkItemWidgetWeight'; };
    'WorkItemWidgetAssignees': { kind: 'OBJECT'; name: 'WorkItemWidgetAssignees'; fields: { 'allowsMultipleAssignees': { name: 'allowsMultipleAssignees'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'assignees': { name: 'assignees'; type: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; } }; 'canInviteMembers': { name: 'canInviteMembers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetAssigneesInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetAssigneesInput'; inputFields: [{ name: 'assigneeIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UserID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'WorkItemWidgetAwardEmoji': { kind: 'OBJECT'; name: 'WorkItemWidgetAwardEmoji'; fields: { 'awardEmoji': { name: 'awardEmoji'; type: { kind: 'OBJECT'; name: 'AwardEmojiConnection'; ofType: null; } }; 'downvotes': { name: 'downvotes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; 'upvotes': { name: 'upvotes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'WorkItemWidgetAwardEmojiUpdateInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetAwardEmojiUpdateInput'; inputFields: [{ name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WorkItemAwardEmojiUpdateAction'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'WorkItemWidgetColor': { kind: 'OBJECT'; name: 'WorkItemWidgetColor'; fields: { 'color': { name: 'color'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'textColor': { name: 'textColor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetColorInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetColorInput'; inputFields: [{ name: 'color'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Color'; ofType: null; }; }; defaultValue: null }]; };
    'WorkItemWidgetCurrentUserTodos': { kind: 'OBJECT'; name: 'WorkItemWidgetCurrentUserTodos'; fields: { 'currentUserTodos': { name: 'currentUserTodos'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TodoConnection'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetCurrentUserTodosInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetCurrentUserTodosInput'; inputFields: [{ name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WorkItemTodoUpdateAction'; ofType: null; }; }; defaultValue: null }, { name: 'todoId'; type: { kind: 'SCALAR'; name: 'TodoID'; ofType: null; }; defaultValue: null }]; };
    'WorkItemWidgetDefinition': { kind: 'INTERFACE'; name: 'WorkItemWidgetDefinition'; fields: { 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; }; } }; }; possibleTypes: 'WorkItemWidgetDefinitionAssignees' | 'WorkItemWidgetDefinitionGeneric' | 'WorkItemWidgetDefinitionHierarchy' | 'WorkItemWidgetDefinitionLabels'; };
    'WorkItemWidgetDefinitionAssignees': { kind: 'OBJECT'; name: 'WorkItemWidgetDefinitionAssignees'; fields: { 'allowsMultipleAssignees': { name: 'allowsMultipleAssignees'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'canInviteMembers': { name: 'canInviteMembers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; }; } }; }; };
    'WorkItemWidgetDefinitionGeneric': { kind: 'OBJECT'; name: 'WorkItemWidgetDefinitionGeneric'; fields: { 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; }; } }; }; };
    'WorkItemWidgetDefinitionHierarchy': { kind: 'OBJECT'; name: 'WorkItemWidgetDefinitionHierarchy'; fields: { 'allowedChildTypes': { name: 'allowedChildTypes'; type: { kind: 'OBJECT'; name: 'WorkItemTypeConnection'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; }; } }; }; };
    'WorkItemWidgetDefinitionLabels': { kind: 'OBJECT'; name: 'WorkItemWidgetDefinitionLabels'; fields: { 'allowsScopedLabels': { name: 'allowsScopedLabels'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; }; } }; }; };
    'WorkItemWidgetDescription': { kind: 'OBJECT'; name: 'WorkItemWidgetDescription'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'descriptionHtml': { name: 'descriptionHtml'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'edited': { name: 'edited'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'lastEditedAt': { name: 'lastEditedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'lastEditedBy': { name: 'lastEditedBy'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetDescriptionInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetDescriptionInput'; inputFields: [{ name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'WorkItemWidgetDesigns': { kind: 'OBJECT'; name: 'WorkItemWidgetDesigns'; fields: { 'designCollection': { name: 'designCollection'; type: { kind: 'OBJECT'; name: 'DesignCollection'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetHealthStatus': { kind: 'OBJECT'; name: 'WorkItemWidgetHealthStatus'; fields: { 'healthStatus': { name: 'healthStatus'; type: { kind: 'ENUM'; name: 'HealthStatus'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetHealthStatusInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetHealthStatusInput'; inputFields: [{ name: 'healthStatus'; type: { kind: 'ENUM'; name: 'HealthStatus'; ofType: null; }; defaultValue: null }]; };
    'WorkItemWidgetHierarchy': { kind: 'OBJECT'; name: 'WorkItemWidgetHierarchy'; fields: { 'ancestors': { name: 'ancestors'; type: { kind: 'OBJECT'; name: 'WorkItemConnection'; ofType: null; } }; 'children': { name: 'children'; type: { kind: 'OBJECT'; name: 'WorkItemConnection'; ofType: null; } }; 'hasChildren': { name: 'hasChildren'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'parent': { name: 'parent'; type: { kind: 'OBJECT'; name: 'WorkItem'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetHierarchyCreateInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetHierarchyCreateInput'; inputFields: [{ name: 'parentId'; type: { kind: 'SCALAR'; name: 'WorkItemID'; ofType: null; }; defaultValue: null }]; };
    'WorkItemWidgetHierarchyUpdateInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetHierarchyUpdateInput'; inputFields: [{ name: 'adjacentWorkItemId'; type: { kind: 'SCALAR'; name: 'WorkItemID'; ofType: null; }; defaultValue: null }, { name: 'childrenIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'WorkItemID'; ofType: null; }; }; }; defaultValue: null }, { name: 'parentId'; type: { kind: 'SCALAR'; name: 'WorkItemID'; ofType: null; }; defaultValue: null }, { name: 'relativePosition'; type: { kind: 'ENUM'; name: 'RelativePositionType'; ofType: null; }; defaultValue: null }]; };
    'WorkItemWidgetIteration': { kind: 'OBJECT'; name: 'WorkItemWidgetIteration'; fields: { 'iteration': { name: 'iteration'; type: { kind: 'OBJECT'; name: 'Iteration'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetIterationInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetIterationInput'; inputFields: [{ name: 'iterationId'; type: { kind: 'SCALAR'; name: 'IterationID'; ofType: null; }; defaultValue: null }]; };
    'WorkItemWidgetLabels': { kind: 'OBJECT'; name: 'WorkItemWidgetLabels'; fields: { 'allowsScopedLabels': { name: 'allowsScopedLabels'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'labels': { name: 'labels'; type: { kind: 'OBJECT'; name: 'LabelConnection'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetLabelsUpdateInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetLabelsUpdateInput'; inputFields: [{ name: 'addLabelIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'LabelID'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeLabelIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'LabelID'; ofType: null; }; }; }; defaultValue: null }]; };
    'WorkItemWidgetLinkedItems': { kind: 'OBJECT'; name: 'WorkItemWidgetLinkedItems'; fields: { 'blocked': { name: 'blocked'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'blockedByCount': { name: 'blockedByCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'blockingCount': { name: 'blockingCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'linkedItems': { name: 'linkedItems'; type: { kind: 'OBJECT'; name: 'LinkedWorkItemTypeConnection'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetMilestone': { kind: 'OBJECT'; name: 'WorkItemWidgetMilestone'; fields: { 'milestone': { name: 'milestone'; type: { kind: 'OBJECT'; name: 'Milestone'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetMilestoneInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetMilestoneInput'; inputFields: [{ name: 'milestoneId'; type: { kind: 'SCALAR'; name: 'MilestoneID'; ofType: null; }; defaultValue: null }]; };
    'WorkItemWidgetNotes': { kind: 'OBJECT'; name: 'WorkItemWidgetNotes'; fields: { 'discussionLocked': { name: 'discussionLocked'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'discussions': { name: 'discussions'; type: { kind: 'OBJECT'; name: 'DiscussionConnection'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetNotesInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetNotesInput'; inputFields: [{ name: 'discussionLocked'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'WorkItemWidgetNotifications': { kind: 'OBJECT'; name: 'WorkItemWidgetNotifications'; fields: { 'subscribed': { name: 'subscribed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetNotificationsUpdateInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetNotificationsUpdateInput'; inputFields: [{ name: 'subscribed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'WorkItemWidgetParticipants': { kind: 'OBJECT'; name: 'WorkItemWidgetParticipants'; fields: { 'participants': { name: 'participants'; type: { kind: 'OBJECT'; name: 'UserCoreConnection'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetProgress': { kind: 'OBJECT'; name: 'WorkItemWidgetProgress'; fields: { 'currentValue': { name: 'currentValue'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'endValue': { name: 'endValue'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'progress': { name: 'progress'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'startValue': { name: 'startValue'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'WorkItemWidgetProgressInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetProgressInput'; inputFields: [{ name: 'currentValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'startValue'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'endValue'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'WorkItemWidgetRequirementLegacy': { kind: 'OBJECT'; name: 'WorkItemWidgetRequirementLegacy'; fields: { 'legacyIid': { name: 'legacyIid'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetRolledupDates': { kind: 'OBJECT'; name: 'WorkItemWidgetRolledupDates'; fields: { 'dueDate': { name: 'dueDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'dueDateFixed': { name: 'dueDateFixed'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'dueDateIsFixed': { name: 'dueDateIsFixed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'dueDateSourcingMilestone': { name: 'dueDateSourcingMilestone'; type: { kind: 'OBJECT'; name: 'Milestone'; ofType: null; } }; 'dueDateSourcingWorkItem': { name: 'dueDateSourcingWorkItem'; type: { kind: 'OBJECT'; name: 'WorkItem'; ofType: null; } }; 'startDate': { name: 'startDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'startDateFixed': { name: 'startDateFixed'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'startDateIsFixed': { name: 'startDateIsFixed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'startDateSourcingMilestone': { name: 'startDateSourcingMilestone'; type: { kind: 'OBJECT'; name: 'Milestone'; ofType: null; } }; 'startDateSourcingWorkItem': { name: 'startDateSourcingWorkItem'; type: { kind: 'OBJECT'; name: 'WorkItem'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetRolledupDatesInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetRolledupDatesInput'; inputFields: [{ name: 'startDateFixed'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'startDateIsFixed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'dueDateFixed'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'dueDateIsFixed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'WorkItemWidgetStartAndDueDate': { kind: 'OBJECT'; name: 'WorkItemWidgetStartAndDueDate'; fields: { 'dueDate': { name: 'dueDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'startDate': { name: 'startDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetStartAndDueDateUpdateInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetStartAndDueDateUpdateInput'; inputFields: [{ name: 'dueDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'startDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }]; };
    'WorkItemWidgetStatus': { kind: 'OBJECT'; name: 'WorkItemWidgetStatus'; fields: { 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetTestReports': { kind: 'OBJECT'; name: 'WorkItemWidgetTestReports'; fields: { 'testReports': { name: 'testReports'; type: { kind: 'OBJECT'; name: 'TestReportConnection'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetTimeTracking': { kind: 'OBJECT'; name: 'WorkItemWidgetTimeTracking'; fields: { 'timeEstimate': { name: 'timeEstimate'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'timelogs': { name: 'timelogs'; type: { kind: 'OBJECT'; name: 'WorkItemTimelogConnection'; ofType: null; } }; 'totalTimeSpent': { name: 'totalTimeSpent'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; }; };
    'WorkItemWidgetTimeTrackingInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetTimeTrackingInput'; inputFields: [{ name: 'timeEstimate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'timelog'; type: { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetTimeTrackingTimelogInput'; ofType: null; }; defaultValue: null }]; };
    'WorkItemWidgetTimeTrackingTimelogInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetTimeTrackingTimelogInput'; inputFields: [{ name: 'timeSpent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'spentAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; defaultValue: null }, { name: 'summary'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'WorkItemWidgetType': { kind: 'ENUM'; name: 'WorkItemWidgetType'; type: 'ASSIGNEES' | 'DESCRIPTION' | 'HIERARCHY' | 'LABELS' | 'MILESTONE' | 'NOTES' | 'START_AND_DUE_DATE' | 'HEALTH_STATUS' | 'WEIGHT' | 'ITERATION' | 'PROGRESS' | 'STATUS' | 'REQUIREMENT_LEGACY' | 'TEST_REPORTS' | 'NOTIFICATIONS' | 'CURRENT_USER_TODOS' | 'AWARD_EMOJI' | 'LINKED_ITEMS' | 'COLOR' | 'ROLLEDUP_DATES' | 'PARTICIPANTS' | 'TIME_TRACKING' | 'DESIGNS'; };
    'WorkItemWidgetWeight': { kind: 'OBJECT'; name: 'WorkItemWidgetWeight'; fields: { 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'WorkItemWidgetType'; ofType: null; } }; 'weight': { name: 'weight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'WorkItemWidgetWeightInput': { kind: 'INPUT_OBJECT'; name: 'WorkItemWidgetWeightInput'; inputFields: [{ name: 'weight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'WorkItemsRelatedWorkItemLinkID': unknown;
    'WorkItemsTypeID': unknown;
    'Workspace': { kind: 'OBJECT'; name: 'Workspace'; fields: { 'actualState': { name: 'actualState'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'clusterAgent': { name: 'clusterAgent'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ClusterAgent'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'deploymentResourceVersion': { name: 'deploymentResourceVersion'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'desiredState': { name: 'desiredState'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'desiredStateUpdatedAt': { name: 'desiredStateUpdatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'devfile': { name: 'devfile'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'devfilePath': { name: 'devfilePath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'devfileRef': { name: 'devfileRef'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'devfileWebUrl': { name: 'devfileWebUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'editor': { name: 'editor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'RemoteDevelopmentWorkspaceID'; ofType: null; }; } }; 'maxHoursBeforeTermination': { name: 'maxHoursBeforeTermination'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'namespace': { name: 'namespace'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'processedDevfile': { name: 'processedDevfile'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'projectId': { name: 'projectId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'respondedToAgentAt': { name: 'respondedToAgentAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; }; } }; }; };
    'WorkspaceConnection': { kind: 'OBJECT'; name: 'WorkspaceConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'WorkspaceEdge'; ofType: null; }; } }; 'nodes': { name: 'nodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Workspace'; ofType: null; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; }; };
    'WorkspaceCreateInput': { kind: 'INPUT_OBJECT'; name: 'WorkspaceCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'clusterAgentId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ClustersAgentID'; ofType: null; }; }; defaultValue: null }, { name: 'desiredState'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'editor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'maxHoursBeforeTermination'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'projectId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectID'; ofType: null; }; }; defaultValue: null }, { name: 'devfileRef'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'devfilePath'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'WorkspaceCreatePayload': { kind: 'OBJECT'; name: 'WorkspaceCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'workspace': { name: 'workspace'; type: { kind: 'OBJECT'; name: 'Workspace'; ofType: null; } }; }; };
    'WorkspaceEdge': { kind: 'OBJECT'; name: 'WorkspaceEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'OBJECT'; name: 'Workspace'; ofType: null; } }; }; };
    'WorkspaceUpdateInput': { kind: 'INPUT_OBJECT'; name: 'WorkspaceUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'RemoteDevelopmentWorkspaceID'; ofType: null; }; }; defaultValue: null }, { name: 'desiredState'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'WorkspaceUpdatePayload': { kind: 'OBJECT'; name: 'WorkspaceUpdatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'workspace': { name: 'workspace'; type: { kind: 'OBJECT'; name: 'Workspace'; ofType: null; } }; }; };
    'X509Certificate': { kind: 'OBJECT'; name: 'X509Certificate'; fields: { 'certificateStatus': { name: 'certificateStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'email': { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'serialNumber': { name: 'serialNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'subject': { name: 'subject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'subjectKeyIdentifier': { name: 'subjectKeyIdentifier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Time'; ofType: null; }; } }; 'x509Issuer': { name: 'x509Issuer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'X509Issuer'; ofType: null; }; } }; }; };
    'X509Issuer': { kind: 'OBJECT'; name: 'X509Issuer'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; 'crlUrl': { name: 'crlUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'subject': { name: 'subject'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'subjectKeyIdentifier': { name: 'subjectKeyIdentifier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'SCALAR'; name: 'Time'; ofType: null; } }; }; };
    'X509Signature': { kind: 'OBJECT'; name: 'X509Signature'; fields: { 'commitSha': { name: 'commitSha'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'project': { name: 'project'; type: { kind: 'OBJECT'; name: 'Project'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'UserCore'; ofType: null; } }; 'verificationStatus': { name: 'verificationStatus'; type: { kind: 'ENUM'; name: 'VerificationStatus'; ofType: null; } }; 'x509Certificate': { name: 'x509Certificate'; type: { kind: 'OBJECT'; name: 'X509Certificate'; ofType: null; } }; }; };
    'approvalProjectRuleDeleteInput': { kind: 'INPUT_OBJECT'; name: 'approvalProjectRuleDeleteInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ApprovalProjectRuleID'; ofType: null; }; }; defaultValue: null }]; };
    'approvalProjectRuleDeletePayload': { kind: 'OBJECT'; name: 'approvalProjectRuleDeletePayload'; fields: { 'approvalRule': { name: 'approvalRule'; type: { kind: 'OBJECT'; name: 'ApprovalProjectRule'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'approvalProjectRuleUpdateInput': { kind: 'INPUT_OBJECT'; name: 'approvalProjectRuleUpdateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ApprovalProjectRuleID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'approvalsRequired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'userIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'groupIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'approvalProjectRuleUpdatePayload': { kind: 'OBJECT'; name: 'approvalProjectRuleUpdatePayload'; fields: { 'approvalRule': { name: 'approvalRule'; type: { kind: 'OBJECT'; name: 'ApprovalProjectRule'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'branchRuleApprovalProjectRuleCreateInput': { kind: 'INPUT_OBJECT'; name: 'branchRuleApprovalProjectRuleCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'branchRuleId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ProjectsBranchRuleID'; ofType: null; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'approvalsRequired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'userIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'groupIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'branchRuleApprovalProjectRuleCreatePayload': { kind: 'OBJECT'; name: 'branchRuleApprovalProjectRuleCreatePayload'; fields: { 'approvalRule': { name: 'approvalRule'; type: { kind: 'OBJECT'; name: 'ApprovalProjectRule'; ofType: null; } }; 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'iterationCreateInput': { kind: 'INPUT_OBJECT'; name: 'iterationCreateInput'; inputFields: [{ name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'projectPath'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'groupPath'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'iterationsCadenceId'; type: { kind: 'SCALAR'; name: 'IterationsCadenceID'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'startDate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'dueDate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'iterationCreatePayload': { kind: 'OBJECT'; name: 'iterationCreatePayload'; fields: { 'clientMutationId': { name: 'clientMutationId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'iteration': { name: 'iteration'; type: { kind: 'OBJECT'; name: 'Iteration'; ofType: null; } }; }; };
  };
};

import * as gqlTada from "gql.tada";

declare module "gql.tada" {
  interface setupSchema {
    introspection: introspection;
  }
}
